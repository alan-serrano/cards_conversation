{"version":3,"sources":["pages/Edit.js","components/Dialog_help.js","services/firebase.js","components/Settings.js","components/Card.js","layout/header.js","helpers/utils.js","pages/Party.js","pages/Landing.js","pages/Admin.js","App.js","index.js"],"names":["Edit","className","useStylesDialog","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","content","marginTop","Transition","React","forwardRef","props","ref","Slide","direction","DialogHelp","children","Icon","classes","useState","open","setOpen","handleClose","IconButton","aria-label","style","color","onClick","Dialog","fullScreen","onClose","aria-labelledby","aria-describedby","TransitionComponent","AppBar","Toolbar","edge","Typography","variant","DialogContent","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","ContentSettings","normalizedDifficulties","difficultyStates","normalizedDifficultiesMap","setDifficultyStates","normalizedTopics","topicStates","normalizedTopicsMap","setTopicStates","allDifficultiesCheck","setAllDifficultiesCheck","allTopicsCheck","setAllTopicsCheck","createCheckboxs","elements","elementStates","handler","map","element","index","FormControlLabel","control","Checkbox","checked","id","onChange","name","label","key","useEffect","Object","values","filter","v","length","Container","maxWidth","FormControl","component","FormLabel","FormGroup","event","target","newDifficulyStates","difficultyStateId","newDifficultyStates","FormHelperText","Divider","light","newTopicStates","topicStateId","console","log","newTopicsStates","Settings","topics","topicFilters","setTopicFilters","difficulties","difficultyFilters","setDifficultyFilters","useParams","undefined","refcurrentTopicsParty","refcurrentDifficultiesParty","set","useStyles","root","expand","transform","transition","transitions","create","duration","shortest","expandOpen","display","justifyContent","alignItems","CardComponent","question","help","setCurrentTopic","currentQuestions","currentQuestionsMap","currentQuestion","setCurrentQuestion","Card","CardHeader","HelpIcon","CardContent","container","Header","languageActives","setLanguageISO","languageISO","languages","history","useHistory","anchorEl","setAnchorEl","handleMenuSelect","languageId","currentTarget","dataset","Button","push","Menu","keepMounted","Boolean","menuItems","languageID","MenuItem","data-language-id","textTransform","marginRight","nativeName","createMenuItems","randomBetweenNumber","min","max","Math","floor","random","randomElementArray","arr","flexSpace","flexBasis","Party","questions","dataIsReady","partyIsReady","setPartyIsReady","currentTopic","isDisabledPrevBtn","setIsDisabledPrevBtn","isDisabledNextBtn","setIsDisabledNextBt","isDisabledRandomBtn","setIsDisabledRandomBtn","onUpdateCard","refcurrentQuestionParty","newQuestion","questionId","error","topicId","refParty","getParty","snapshot","party","val","on","errorObject","code","off","hasOwnProperty","disabled","size","currentQuestionInfo","prevQuestionInfo","nextQuestionInfo","Landing","createNewParty","randomCard","fullWidth","Admin","AppRoutes","setLanguageActives","setLanguages","setQuestions","setTopics","setNormalizedTopics","setNormalizedTopicsMap","setDifficulties","setNormalizedDifficulties","setNormalizedDifficultiesMap","setCurrentQuestions","setCurrentQuestionsMap","setDataIsReady","normalizedDataIsReady","setNormalizedDataIsReady","initialFilter","result","resetData","refLanguages","getLanguages","actives","isoLangs","refData","getData","data","normalizedQuestions","normalizedQuestionsMap","difficulty","sort","a","b","forEach","value","topic","idNormalized","difficultyId","condition","entries","exact","path","newRefParty","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b86fefa6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Edit() {\n    return (\n        <div className=\"edit-page\">\n            Página Edit\n        </div>\n    );\n}\n\nexport default Edit;","import React from 'react';\n// Styles MUI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Components Mui\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons Mui\nimport CloseIcon from '@material-ui/icons/Close';\n\n// Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\n\n// Icons\nimport IconButton from '@material-ui/core/IconButton';\n\n// Dialog\nconst useStylesDialog = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    content: {\n        marginTop: '20px'\n    }\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction DialogHelp({children, Icon}) {\n\n    const classes = useStylesDialog();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <IconButton aria-label=\"help\" style={{ color: '#F44336' }} onClick={handleClickOpen}>\n                <Icon/>\n            </IconButton>\n            <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\" TransitionComponent={Transition}>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Help\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.content}>\n                        {children}\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nexport default DialogHelp;","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBJmgMqOrcOQBg3-JvswwmqlLCvbIAIoeY\",\n    authDomain: \"cards-conversation-starters.firebaseapp.com\",\n    databaseURL: \"https://cards-conversation-starters.firebaseio.com\",\n    projectId: \"cards-conversation-starters\",\n    storageBucket: \"cards-conversation-starters.appspot.com\",\n    messagingSenderId: \"1037492872627\",\n    appId: \"1:1037492872627:web:9af0f2901b3655cb7357c6\",\n    measurementId: \"G-HSK36FCQYP\"\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const db = firebase.database();","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n// Styles MUI\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Components Mui\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// Icons Mui\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\n\n// Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Slide from '@material-ui/core/Slide';\nimport Container from '@material-ui/core/Container'\n\n// Icons\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n//firebase\nimport { db } from '../services/firebase';\n\n\n// Dialog\nconst useStylesDialog = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    content: {\n        marginTop: '20px'\n    }\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction Settings(props) {\n    const {\n        topics,\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicFilters,\n        setTopicFilters,\n\n        difficulties,\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyFilters,\n        setDifficultyFilters,\n    } = props;\n\n    const {id} = useParams();\n\n    const classes = useStylesDialog();\n\n    const [open, setOpen] = React.useState(false);\n    \n    // Handle cheks states\n    const [difficultyStates, setDifficultyStates] = React.useState();\n    \n    const [topicStates, setTopicStates] = React.useState();\n    \n    React.useEffect( function initializeFilters() {\n        setDifficultyStates({\n            ...difficultyFilters,\n        });\n\n        setTopicStates({\n            ...topicFilters,\n        });\n    }, [difficultyFilters, topicFilters] )\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setDifficultyStates({\n            ...difficultyFilters,\n        });\n\n        setTopicStates({\n            ...topicFilters,\n        });\n        \n    };\n    \n    const handleSave = () => {\n        setOpen(false);\n\n        if( id !== undefined ) {\n            const refcurrentTopicsParty = db.ref(`parties/${id}/topics`);\n            const refcurrentDifficultiesParty = db.ref(`parties/${id}/difficulties`);\n    \n            refcurrentTopicsParty.set({\n                ...topicStates,\n            });\n            \n            refcurrentDifficultiesParty.set({\n                ...difficultyStates,\n            });\n\n        } else {\n            setDifficultyFilters({\n                ...difficultyStates,\n            });\n\n            setTopicFilters({\n                ...topicStates,\n            });\n        }\n    };\n\n    return (\n        <>\n            <IconButton aria-label=\"settings\" style={{ color: '#F44336' }} onClick={handleClickOpen}>\n                <SettingsIcon/>\n            </IconButton>\n            <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\" TransitionComponent={Transition}>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Settings\n                        </Typography>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleSave} aria-label=\"close\">\n                            <DoneIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.content}>\n                    <ContentSettings \n                        topics={topics}\n                        normalizedTopics={normalizedTopics}\n                        normalizedTopicsMap={normalizedTopicsMap}\n                        topicStates={topicStates}\n                        setTopicStates={setTopicStates}\n                        \n                        difficulties={difficulties}\n                        normalizedDifficulties={normalizedDifficulties}\n                        normalizedDifficultiesMap={normalizedDifficultiesMap}\n                        difficultyStates={difficultyStates}\n                        setDifficultyStates={setDifficultyStates}\n                    />\n                        \n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nfunction ContentSettings(props) {\n    const {\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyStates,\n        setDifficultyStates,\n\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicStates,\n        setTopicStates\n    } = props\n\n\n    const [allDifficultiesCheck, setAllDifficultiesCheck] = React.useState(false);\n    const [allTopicsCheck, setAllTopicsCheck] = React.useState(false);\n\n    const handleDifficultyChange = (event) => {\n        const newDifficultyStates = {...difficultyStates};\n        newDifficultyStates[event.target.name] = event.target.checked;\n        setDifficultyStates( newDifficultyStates );\n    };\n    \n    const handleAllDifficultiesCheck = (event) => {\n        if( event.target.checked ) {\n            const newDifficulyStates = {};\n\n            for (const difficultyStateId in difficultyStates) {\n                newDifficulyStates[difficultyStateId] = true;\n            }\n\n            setDifficultyStates( newDifficulyStates );\n        } else {\n            const newDifficulyStates = {};\n\n            for (const difficultyStateId in difficultyStates) {\n                newDifficulyStates[difficultyStateId] = false;\n            }\n\n            setDifficultyStates( newDifficulyStates );\n        }\n\n        setAllDifficultiesCheck( event.target.checked );\n    };\n    \n    const handleTopicChange = (event) => {\n        const newTopicsStates = {...topicStates};\n        newTopicsStates[event.target.name] = event.target.checked;\n        setTopicStates(newTopicsStates);\n    };\n\n    const handleAllTopicsCheck = (event) => {\n        if( event.target.checked ) {\n            const newTopicStates = {};\n\n            for (const topicStateId in topicStates) {\n                newTopicStates[topicStateId] = true;\n            }\n            console.log(newTopicStates);\n\n            setTopicStates( newTopicStates );\n        } else {\n            const newTopicStates = {};\n\n            for (const topicStateId in topicStates) {\n                newTopicStates[topicStateId] = false;\n            }\n\n            setTopicStates( newTopicStates );\n        }\n\n        setAllTopicsCheck( event.target.checked );\n    };\n\n    React.useEffect( function verifyCheckboxsDifficulty() {\n        if( Object.values(difficultyStates).filter( v => v ).length === Object.values(difficultyStates).length ) {\n            setAllDifficultiesCheck(true);\n        } else {\n            setAllDifficultiesCheck(false);\n        }\n        \n        if( Object.values(topicStates).filter( v => v ).length !== Object.values(topicStates).length ) {\n            setAllTopicsCheck(false);\n        } else {\n            setAllTopicsCheck(true);\n        }\n\n    },[difficultyStates, topicStates]);\n\n    function createCheckboxs(elements, elementStates, handler) {\n\n        return elements.map( (element, index) => (\n            <FormControlLabel\n                control={<Checkbox checked={elementStates[element.id]} onChange={handler} name={`${element.id}`} />}\n                label={element.name}\n                key={index}\n            />\n        ));\n    }\n    \n    return (\n        <>\n            <form>\n                <Container maxWidth=\"xs\">\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Select difficulty</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={allDifficultiesCheck} onChange={handleAllDifficultiesCheck} />}\n                                label={\"All\"}\n                            />\n                            {createCheckboxs( normalizedDifficulties, difficultyStates, handleDifficultyChange )}\n                        </FormGroup>\n                        <FormHelperText></FormHelperText>\n                    </FormControl>\n                    <Divider light />\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Select topics</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={allTopicsCheck} onChange={handleAllTopicsCheck} />}\n                                label={\"All\"}\n                            />\n                            {createCheckboxs( normalizedTopics, topicStates, handleTopicChange )}\n                        </FormGroup>\n                        <FormHelperText></FormHelperText>\n                    </FormControl>\n                </Container>\n            </form>\n        </>\n    );\n}\n\nexport default Settings;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport HelpIcon from '@material-ui/icons/Help';\nimport './Card.scss';\nimport DialogHelp from './Dialog_help';\nimport Settings from './Settings';\n\n// Dialog\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    flex: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    }\n}));\n\n\nfunction CardComponent(props) {\n    const {\n        question,\n        title,\n        help,\n\n        topics,\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicFilters,\n        setTopicFilters,\n        setCurrentTopic,\n\n        difficulties,\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyFilters,\n        setDifficultyFilters,\n\n        currentQuestions,\n        currentQuestionsMap,\n        currentQuestion,\n        setCurrentQuestion,\n    } = props;\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"card-component\">\n            <Card className={classes.root}>\n                <CardHeader\n                        classes={{title: classes.flex}}\n                        title={\n                            <>\n                                <Settings\n                                    topics={topics}\n                                    normalizedTopics={normalizedTopics}\n                                    normalizedTopicsMap={normalizedTopicsMap}\n                                    topicFilters={topicFilters}\n                                    setTopicFilters={setTopicFilters}\n                                    setCurrentTopic={setCurrentTopic}\n                \n                                    difficulties={difficulties}\n                                    normalizedDifficulties={normalizedDifficulties}\n                                    normalizedDifficultiesMap={normalizedDifficultiesMap}\n                                    difficultyFilters={difficultyFilters}\n                                    setDifficultyFilters={setDifficultyFilters}\n\n                                    currentQuestions={currentQuestions}\n                                    currentQuestionsMap={currentQuestionsMap}\n                                    currentQuestion={currentQuestion}\n                                    setCurrentQuestion={setCurrentQuestion}\n                                />\n                                <Typography variant=\"h5\" >\n                                    {title}\n                                </Typography>\n                                <DialogHelp Icon={HelpIcon}>\n                                    <Container maxWidth=\"sm\">\n                                        {help}\n                                    </Container>\n                                </DialogHelp>\n                            </>\n                        }\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {question}\n                    </Typography>\n                </CardContent>\n                \n            </Card>\n           \n        </div>\n    );\n}\n\nexport default CardComponent;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {useHistory} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport Container from '@material-ui/core/Container';\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    }\n}));\n\nfunction Header({languageActives, setLanguageISO, languageISO, languages}) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState();\n\n\n    function handleLanguageClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLanguageClose() {\n        setAnchorEl(null);\n    }\n    \n    function handleMenuSelect(event) {\n        const { languageId } = event.currentTarget.dataset;\n        setLanguageISO(languageId)\n        setAnchorEl(null);\n    }\n\n    function createMenuItems() {\n        const menuItems = [];\n\n        for (const languageID in languageActives) {\n            menuItems.push(\n                <MenuItem onClick={handleMenuSelect} data-language-id={languageID} key={languageID}>\n                    <span style={{ textTransform: 'uppercase', marginRight: '0.5em' }}>{languageID}</span>\n                    <span>{languages[languageID] && languages[languageID].nativeName}</span>\n                </MenuItem>\n            );\n        }\n\n        return menuItems;\n    }\n\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Container maxWidth=\"xs\" className={classes.container}>\n                    <Button color=\"inherit\" aria-label=\"menu\" onClick={() => history.push('/')}>\n                        <HomeIcon />\n                    </Button>\n                    <Button edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleLanguageClick}>\n                        <LanguageIcon /><span style={{marginLeft: '0.4em'}}>{languageISO}</span>\n                    </Button>\n                    <Menu\n                      id=\"languageSelector\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      onClose={handleLanguageClose}\n                      \n                    >\n                        {createMenuItems()}\n                      \n                    </Menu>\n                </Container>\n                \n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;","export function randomBetweenNumber(min, max) {\n    return Math.floor( (max - min + 1) * Math.random() + min )\n}\n\nexport function randomElementArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return arr[ randomId ]\n}\n\nexport function randomIdArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return randomId;\n}","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport './Party.scss'\nimport CardComponent from '../components/Card';\nimport Button from '@material-ui/core/Button';\nimport Header from '../layout/header';\nimport { randomElementArray } from '../helpers/utils';\nimport { db } from '../services/firebase';\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        marginTop: '1.2rem',\n        justifyContent: 'space-between'\n    },\n    flexSpace: {\n        flexBasis: 'calc(33.33% - 0.2rem)'\n    }\n}));\n\nfunction Party(props) {\n    const {\n        setLanguageISO,\n        languageISO,\n        languages,\n        languageActives,\n\n        questions,\n\n        topics,\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicFilters,\n        setTopicFilters,\n        \n        difficulties,\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyFilters,\n        setDifficultyFilters,\n\n        currentQuestions,\n        currentQuestionsMap,\n        currentQuestion,\n        setCurrentQuestion,\n\n        dataIsReady\n    } = props;\n\n    const {id} = useParams();\n\n    const classes = useStyles();\n\n    const [partyIsReady, setPartyIsReady] = React.useState();\n\n    const [currentTopic, setCurrentTopic] = React.useState();\n\n    // Buttons states\n    const [isDisabledPrevBtn, setIsDisabledPrevBtn] = React.useState();\n    const [isDisabledNextBtn, setIsDisabledNextBt] = React.useState();\n    const [isDisabledRandomBtn, setIsDisabledRandomBtn] = React.useState();\n\n    React.useEffect( function checkingIfDataIsReady() {\n        setIsDisabledPrevBtn(!dataIsReady);\n        setIsDisabledNextBt(!dataIsReady);\n        setIsDisabledRandomBtn(!dataIsReady);\n    },[dataIsReady] );\n    \n\n    // Connecting to party\n    \n    useEffect( function connectParty(){\n        if( id !== undefined && dataIsReady) {\n\n            const refParty = db.ref(`parties/${id}`);\n\n            refParty.on(\"value\",\n                getParty,\n                (errorObject) => {\n                    console.log(\"The read failed: \" + errorObject.code);\n                }\n            )\n\n            function getParty(snapshot) {\n                const party = snapshot.val();\n                console.log(\"------------------\");\n                console.log(\"party\",party);\n                if (party) {\n                    setCurrentQuestion(party.currentQuestion);\n                    setCurrentTopic(questions[party.currentQuestion].topicId)\n                    setDifficultyFilters(party.difficulties);\n                    setTopicFilters(party.topics);\n                    setPartyIsReady(true);\n                }\n            }\n\n            return function disconnectParty() {\n                refParty.off(\"value\", getParty);\n            }\n        }\n    }, [dataIsReady, id, partyIsReady, questions, setCurrentQuestion, setDifficultyFilters, setTopicFilters]);\n    \n    React.useEffect( function randomCard(){\n        const condition = (\n            id === undefined &&\n            currentQuestions !== undefined &&\n            currentQuestionsMap !== undefined &&\n            currentQuestion === undefined\n        );\n            \n        if( condition ) {\n            let newQuestion = randomElementArray(currentQuestions);\n\n            setCurrentQuestion(newQuestion.questionId);\n            setCurrentTopic(newQuestion.topicId)\n        }\n    }, [currentQuestion, currentQuestions, currentQuestionsMap, dataIsReady, id, setCurrentQuestion]);\n\n    React.useEffect(function updateAfterChangeFilters() {\n        if( currentQuestion !== undefined && dataIsReady && !currentQuestionsMap.hasOwnProperty(currentQuestion)) {\n            if (id !== undefined) {\n                const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n                let newQuestion= randomElementArray(currentQuestions);\n                refcurrentQuestionParty.set(newQuestion.questionId)\n                \n            } else {\n                let newQuestion = randomElementArray(currentQuestions);\n    \n                setCurrentQuestion(newQuestion.questionId);\n                setCurrentTopic(newQuestion.topicId)\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentQuestions, currentQuestionsMap, currentQuestion]);\n\n    // Handlers\n    function onUpdateCard() {\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledRandomBtn(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n\n            let newQuestion= randomElementArray(currentQuestions);\n            refcurrentQuestionParty.set(newQuestion.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledRandomBtn(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let newQuestion = randomElementArray(currentQuestions);\n\n            setCurrentQuestion(newQuestion.questionId);\n            setCurrentTopic(newQuestion.topicId)\n        }\n        \n    }\n\n    function handleNextClick() {\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledNextBt(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let nextQuestionInfo = currentQuestionInfo.index + 1 < currentQuestions.length ?\n                currentQuestions[currentQuestionInfo.index + 1] :\n                currentQuestions[0];\n\n            refcurrentQuestionParty.set(nextQuestionInfo.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledNextBt(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let nextQuestionInfo = currentQuestionInfo.index + 1 < currentQuestions.length ?\n                currentQuestions[currentQuestionInfo.index + 1] :\n                currentQuestions[0];\n            setCurrentQuestion(nextQuestionInfo.questionId);\n            setCurrentTopic(nextQuestionInfo.topicId);\n        }\n    }\n\n    function handlePrevClick() {\n        // let prevId = question - 1 > 0 ? question - 1 : questions.length - 1;\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledPrevBtn(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let prevQuestionInfo = currentQuestionInfo.index - 1 > 0 ?\n                currentQuestions[currentQuestionInfo.index - 1] :\n                currentQuestions[currentQuestions.length - 1];\n\n            refcurrentQuestionParty.set(prevQuestionInfo.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledPrevBtn(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let prevQuestionInfo = currentQuestionInfo.index + 1 < currentQuestions.length ?\n                currentQuestions[currentQuestionInfo.index - 1] :\n                currentQuestions[currentQuestions.length - 1];\n            setCurrentQuestion(prevQuestionInfo.questionId);\n            setCurrentTopic(prevQuestionInfo.topicId);\n        }\n    }\n\n    return (\n        <div className=\"party-page\">\n            <Header \n                languages={languages}\n                languageActives={languageActives}\n                languageISO={languageISO}\n                setLanguageISO={setLanguageISO}>\n            </Header>\n            <Container maxWidth=\"xs\" className=\"container\">\n                { id !== undefined &&\n                    <CardComponent\n                        question={dataIsReady && partyIsReady && currentQuestionsMap[currentQuestion] !== undefined && currentQuestionsMap[currentQuestion].question}\n                        title={dataIsReady && partyIsReady && normalizedTopicsMap[currentTopic].name}\n                        help={dataIsReady && partyIsReady && normalizedTopicsMap[currentTopic].help}\n                        onUpdateCard={onUpdateCard}\n\n                        topics={topics}\n                        normalizedTopics={normalizedTopics}\n                        normalizedTopicsMap={normalizedTopicsMap}\n                        setCurrentTopic={setCurrentTopic}\n                        topicFilters={topicFilters}\n                        setTopicFilters={setTopicFilters}\n\n                        difficulties={difficulties}\n                        normalizedDifficulties={normalizedDifficulties}\n                        normalizedDifficultiesMap={normalizedDifficultiesMap}\n                        difficultyFilters={difficultyFilters}\n                        setDifficultyFilters={setDifficultyFilters}\n\n                        currentQuestions={currentQuestions}\n                        currentQuestionsMap={currentQuestionsMap}\n                        currentQuestion={currentQuestion}\n                        setCurrentQuestion={setCurrentQuestion}\n                    />\n                }\n\n                {id === undefined &&\n                    <CardComponent\n                        question={currentQuestionsMap && currentQuestion && currentQuestionsMap[currentQuestion] && currentQuestionsMap[currentQuestion].question}\n                        title={currentQuestionsMap && currentTopic && topics[currentTopic] && topics[currentTopic].name}\n                        help={currentQuestionsMap && currentTopic && topics[currentTopic] &&topics[currentTopic].help}\n                        onUpdateCard={onUpdateCard}\n\n                        topics={topics}\n                        normalizedTopics={normalizedTopics}\n                        normalizedTopicsMap={normalizedTopicsMap}\n                        setCurrentTopic={setCurrentTopic}\n                        topicFilters={topicFilters}\n                        setTopicFilters={setTopicFilters}\n\n                        difficulties={difficulties}\n                        normalizedDifficulties={normalizedDifficulties}\n                        normalizedDifficultiesMap={normalizedDifficultiesMap}\n                        difficultyFilters={difficultyFilters}\n                        setDifficultyFilters={setDifficultyFilters}\n\n                        currentQuestions={currentQuestions}\n                        currentQuestionsMap={currentQuestionsMap}\n                        currentQuestion={currentQuestion}\n                        setCurrentQuestion={setCurrentQuestion}\n                    />\n                }\n\n                <div className={`${classes.container} wrapper-btn`}>\n                    <Button disabled={isDisabledPrevBtn}  variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace} onClick={handlePrevClick}>\n                        Prev\n                    </Button>\n                    <Button disabled={isDisabledRandomBtn} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace} onClick={onUpdateCard}>\n                        Random\n                    </Button>\n                    <Button disabled={isDisabledNextBtn} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace}  onClick={handleNextClick}>\n                        Next\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Party;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from 'react-router-dom';\nimport './Landing.scss';\n\n\nfunction Landing({createNewParty, randomCard, dataIsReady}) {\n\n    return (\n        <div className=\"landing-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <h1>Party Language <br/> Cards</h1>\n\n                <div className=\"wrapper-button\">\n                    <Button size=\"large\" disabled={!dataIsReady} fullWidth variant=\"contained\" color=\"primary\" onClick={createNewParty}>\n                        New Party\n                    </Button>\n                    <Button size=\"large\" disabled={!dataIsReady} fullWidth variant=\"contained\" color=\"primary\" onClick={randomCard}>\n                        Random Card\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Landing;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from 'react-router-dom';\nimport './Admin.scss';\n\nfunction Admin() {\n    const history = useHistory();\n    return (\n        <div className=\"admin-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <h1>Admin <br/> Cards</h1>\n\n                <div className=\"wrapper-button\">\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/edit')}>\n                        Cards\n                    </Button>\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/edit')}>\n                        Groups\n                    </Button>\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/')}>\n                        Home\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Admin;","import React, {useState} from 'react';\nimport './App.scss';\nimport {HashRouter as Router, Route, useHistory} from 'react-router-dom';\n\n// Pages\nimport Edit from './pages/Edit';\nimport Party from './pages/Party';\nimport Landing from './pages/Landing';\nimport Admin from './pages/Admin';\n\n// Firebase\nimport { db } from './services/firebase';\nimport { randomElementArray } from './helpers/utils';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <AppRoutes/>\n    </Router>\n  );\n}\n\nfunction AppRoutes() {\n  const [languageISO, setLanguageISO] = useState('en');\n  const [languageActives, setLanguageActives] = useState();\n  const [languages, setLanguages] = useState({});\n\n  const [questions, setQuestions] = useState({});\n\n  const [topics, setTopics] = React.useState({});\n  const [normalizedTopics, setNormalizedTopics] = React.useState();\n  const [normalizedTopicsMap, setNormalizedTopicsMap] = React.useState();\n\n  const [difficulties, setDifficulties] = React.useState({});\n  const [normalizedDifficulties, setNormalizedDifficulties] = React.useState();\n  const [normalizedDifficultiesMap, setNormalizedDifficultiesMap] = React.useState();\n\n  // Current information of cards\n  const [currentQuestions, setCurrentQuestions] = useState([]);\n  const [currentQuestionsMap, setCurrentQuestionsMap] = useState();\n  const [currentQuestion, setCurrentQuestion] = React.useState();\n  const [difficultyFilters, setDifficultyFilters] = React.useState();\n  const [topicFilters, setTopicFilters] = React.useState();\n\n  const [dataIsReady, setDataIsReady] = useState(false);\n  const [normalizedDataIsReady, setNormalizedDataIsReady] = useState(false);\n\n  const history = useHistory();\n\n  React.useEffect(function connectLanguages() {\n    const refLanguages = db.ref(\"languages\");\n\n    refLanguages.on(\"value\",\n    getLanguages,\n    function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n\n    function getLanguages(snapshot) {\n      const languages = snapshot.val();\n      setLanguageActives(languages.actives);\n      setLanguages(languages.isoLangs);\n    }\n\n    return function disconnectLanguages() {\n      refLanguages.off(\"value\", getLanguages);\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect( function connectData() {\n    const refData = db.ref(`app/${languageISO}`);\n\n    refData.on(\"value\",\n      getData,\n      (errorObject) => {\n        console.log(\"The read failed: \" + errorObject.code);\n      }\n    )\n  \n    function getData(snapshot) {\n      const data = snapshot.val();\n      setQuestions(data.questions);\n\n      setTopics(data.topics);\n      setTopicFilters(initialFilter(data.topics));\n      \n      setDifficulties(data.difficulties);\n      setDifficultyFilters(initialFilter(data.difficulties));\n    }\n\n    return function disconnectData() {\n      refData.off(\"value\", getData);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [languageISO]);\n\n  React.useEffect(function normalizeQuestions() {\n    if( dataIsReady && topicFilters && difficultyFilters) {\n      let normalizedQuestions = [];\n      let normalizedQuestionsMap = {};\n\n      for (const questionId in questions) {\n        const question = questions[questionId];\n        if( topicFilters[question.topicId] && difficultyFilters[question.difficulty]) {\n          normalizedQuestions.push({\n            ...question,\n            questionId: questionId\n          })\n        }\n      }\n\n      normalizedQuestions.sort(function (a, b) {\n        if (topics[a.topicId].name > topics[b.topicId].name) {\n          return 1;\n        }\n        if (topics[a.topicId].name < topics[b.topicId].name) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      normalizedQuestions.forEach( (value, index) => {\n        value.index = index;\n        normalizedQuestionsMap[value.questionId] = {\n          ...value,\n          index\n        };\n      });\n\n      setCurrentQuestions( normalizedQuestions );\n      setCurrentQuestionsMap( normalizedQuestionsMap );\n    }\n\n  }, [dataIsReady, difficultyFilters, questions, topicFilters, topics]);\n\n  React.useEffect(function normalizeTopics() {\n    if( dataIsReady ) {\n      let normalizedTopics = [];\n      let normalizedTopicsMap = {};\n\n      for (const topicId in topics) {\n        const topic = topics[topicId];\n        normalizedTopics.push({\n          ...topic,\n          id: topicId,\n        });\n      }\n\n      normalizedTopics.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      normalizedTopics.forEach( (value, index) => {\n        value.index = index;\n        normalizedTopicsMap[value.id] = {\n          ...value,\n          idNormalized: index,\n        };\n      });\n\n      setNormalizedTopics( normalizedTopics );\n      setNormalizedTopicsMap( normalizedTopicsMap );\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [topics, dataIsReady]);\n\n  React.useEffect(function normalizeDifficulties() {\n    if( dataIsReady ) {\n      let normalizedDifficulties = [];\n      let normalizedDifficultiesMap = {};\n\n      for (const difficultyId in difficulties) {\n        const topic = difficulties[difficultyId];\n        normalizedDifficulties.push({\n          ...topic,\n          id: difficultyId,\n        });\n      }\n\n      normalizedDifficulties.sort(function (a, b) {\n        if (a.id > b.id) {\n          return 1;\n        }\n        if (a.id < b.id) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      normalizedDifficulties.forEach( (value, index) => {\n        value.index = index;\n        normalizedDifficultiesMap[value.difficultyId] = {\n          ...value,\n          idNormalized: index,\n        };\n      });\n\n      setNormalizedDifficulties( normalizedDifficulties );\n      setNormalizedDifficultiesMap( normalizedDifficultiesMap );\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [difficulties, dataIsReady]);\n\n  React.useEffect(function checkIfDataIsReady() {\n    const condition = (\n      Object.values(languages).length > 0 &&\n      Object.values(questions).length > 0 &&\n      Object.values(topics).length > 0 &&\n      Object.values(difficulties).length > 0\n    );\n\n    if(condition) setDataIsReady(true);\n  }, [difficulties, languages, questions, topics]);\n\n  React.useEffect( function checkIfNormalizedDataIsReady() {\n    const condition = (\n      Object.entries(currentQuestions).length > 0 &&\n      currentQuestionsMap &&\n      normalizedTopics &&\n      normalizedTopicsMap &&\n      normalizedDifficulties &&\n      normalizedDifficultiesMap\n    );\n\n    if(condition) {\n      setNormalizedDataIsReady(true);\n    } else {\n      setNormalizedDataIsReady(false);\n    }\n\n  },[currentQuestions, currentQuestionsMap, normalizedDifficulties, normalizedDifficultiesMap, normalizedTopics, normalizedTopicsMap]);\n\n  function initialFilter(elements) {\n    const result = {};\n\n    for (const id in elements) {\n      if (elements.hasOwnProperty(id)) {\n        result[id] = true;\n      }\n    }\n\n    return result;\n  }\n\n  function resetData() {\n    if (dataIsReady) {\n      setCurrentQuestion(undefined);\n      setDifficultyFilters(initialFilter(difficulties));\n      setTopicFilters(initialFilter(topics));\n    }\n  }\n\n  function createNewParty() {\n    resetData();\n    if (normalizedDataIsReady) {\n      const refParties = db.ref(`parties`);\n      const newRefParty = refParties.push();\n      history.push(`/party/${newRefParty.key}`)\n      let newQuestion = randomElementArray(currentQuestions);\n\n      newRefParty.set({\n        currentQuestion: newQuestion.questionId,\n        difficulties: initialFilter(difficulties),\n        topics: initialFilter(topics)\n      });\n    }\n  }\n\n  function randomCard() {\n    resetData();\n    history.push(`/random`);\n  }\n\n  return <>\n    <Route exact path=\"/\">\n      <Landing\n        dataIsReady={normalizedDataIsReady}\n        \n        languageISO={languageISO}\n        setLanguageISO={setLanguageISO}\n        languageActives={languageActives}\n\n        createNewParty={createNewParty}\n        randomCard={randomCard}\n      />\n    </Route>\n    <Route exact path=\"/edit\"><Edit/></Route>\n    <Route exact path=\"/admin\"><Admin/></Route>\n    <Route exact path=\"/party/:id\">\n      <Party \n        setLanguageISO={setLanguageISO}\n        languageISO={languageISO}\n        languages={languages}\n        languageActives={languageActives}\n\n        questions={questions}\n\n        topics={topics}\n        normalizedTopics={normalizedTopics}\n        normalizedTopicsMap={normalizedTopicsMap}\n        topicFilters={topicFilters}\n        setTopicFilters={setTopicFilters}\n\n        difficulties={difficulties}\n        normalizedDifficulties={normalizedDifficulties}\n        normalizedDifficultiesMap={normalizedDifficultiesMap}\n        difficultyFilters={difficultyFilters}\n        setDifficultyFilters={setDifficultyFilters}\n\n        currentQuestions={currentQuestions}\n        currentQuestionsMap={currentQuestionsMap}\n        currentQuestion={currentQuestion}\n        setCurrentQuestion={setCurrentQuestion}\n\n        dataIsReady={normalizedDataIsReady}\n      />\n    </Route>\n    <Route exact path=\"/random\">\n      <Party \n        setLanguageISO={setLanguageISO}\n        languageISO={languageISO}\n        languages={languages}\n        languageActives={languageActives}\n\n        questions={questions}\n\n        topics={topics}\n        normalizedTopics={normalizedTopics}\n        normalizedTopicsMap={normalizedTopicsMap}\n        topicFilters={topicFilters}\n        setTopicFilters={setTopicFilters}\n\n        difficulties={difficulties}\n        normalizedDifficulties={normalizedDifficulties}\n        normalizedDifficultiesMap={normalizedDifficultiesMap}\n        difficultyFilters={difficultyFilters}\n        setDifficultyFilters={setDifficultyFilters}\n\n        currentQuestions={currentQuestions}\n        currentQuestionsMap={currentQuestionsMap}\n        currentQuestion={currentQuestion}\n        setCurrentQuestion={setCurrentQuestion}\n\n        dataIsReady={normalizedDataIsReady}\n      />\n    </Route>\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}