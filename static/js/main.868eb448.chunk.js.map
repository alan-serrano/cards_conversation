{"version":3,"sources":["pages/Edit.js","helpers/utils.js","components/Card.js","services/getCards.js","pages/Party.js","pages/Landing.js","App.js","index.js"],"names":["Edit","className","randomBetweenNumber","min","max","Math","floor","random","randomElementArray","arr","length","useStyles","makeStyles","theme","root","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","CardComponent","props","questions","title","initialLetter","onUpdateCard","useState","question","setQuestion","useEffect","classes","expanded","setExpanded","Card","CardHeader","Avatar","aria-label","action","IconButton","onClick","CardContent","Typography","variant","color","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","elements","forEach","element","index","push","paragraph","getParagrahps","cardsInformation","topic","en","getCard","randomId","Party","history","useHistory","card","setCard","Container","maxWidth","toUpperCase","Button","size","fullWidth","Landing","AppRoutes","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.868eb448.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Edit() {\n    return (\n        <div className=\"edit-page\">\n            PÃ¡gina Edit\n        </div>\n    );\n}\n\nexport default Edit;","export function randomBetweenNumber(min, max) {\n    return Math.floor( (max - min + 1) * Math.random() + min )\n}\n\nexport function randomElementArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return arr[ randomId ];\n}","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ShareIcon from '@material-ui/icons/Share';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { randomElementArray } from '../helpers/utils';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // maxWidth: 345,\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: \"#F44336\",\n    },\n}));\n\n\nfunction CardComponent(props) {\n    const {questions, title, initialLetter, onUpdateCard} = props;\n\n    const [question, setQuestion] = useState();\n    \n    useEffect( function Ini(){\n        setQuestion(randomElementArray(questions));\n    }, [questions])\n    \n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false);\n\n    function getParagrahps(arr) {\n        const elements = [];\n\n        arr.forEach( (element, index) => {\n            if( index !== arr.length - 1 ) {\n                elements.push(\n                    <Typography paragraph>\n                        {element}\n                    </Typography>\n                );\n            } else  {\n                elements.push( \n                    <Typography>\n                        {element}\n                    </Typography>\n                );\n            }\n        });\n\n        return elements;\n    }\n\n    function handleUpdateQuestion() {\n        setQuestion(randomElementArray(questions));\n    }\n\n    function handleExpandClick() {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <div className=\"card-component\">\n            <Card className={classes.root}>\n                <CardHeader\n                    avatar={ \n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                            {initialLetter}\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"settings\" onClick={onUpdateCard}>\n                            <RefreshIcon />\n                        </IconButton>\n                    }\n                    title={title}\n                />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {question}\n                        </Typography>\n                    </CardContent>\n                    <CardActions disableSpacing>\n                        <IconButton aria-label=\"add to favorites\" onClick={handleUpdateQuestion}>\n                            <CachedIcon />\n                        </IconButton>\n                        {/* <IconButton aria-label=\"add to favorites\">\n                            <ShareIcon />\n                        </IconButton> */}\n                        <IconButton className={clsx(classes.expand, { [classes.expandOpen]: expanded, })}\n                            onClick={handleExpandClick} aria-expanded={expanded} aria-label=\"show more\">\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </CardActions>\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <CardContent>\n                            {getParagrahps(questions)}\n                        </CardContent>\n                    </Collapse>\n            </Card>\n        </div>\n    );\n}\n\nexport default CardComponent;","import {randomBetweenNumber} from '../helpers/utils';\n\nconst cardsInformation = [\n    {\n        topic: \"hobbies\",\n        title: {\n            en: 'Hobbies'\n        },\n        questions: {\n            en: [\n                'Do you have hobbies? What are your hobbies? For how long have you had them',\n                'What hobbies are the most expensive? Wich ones are the cheapes',\n                'Wich hobbies are the most popular with women in your country? with men?',\n                'Do you think a hobby is different from sport? in what ways?',\n                'Are there any hobbies you would like to try?',\n                'Which hobbies do you think are the most difficult?',\n                'Are there any hobbies you can do in other countries? but not your own?',\n                'Why people have hobbies? How much time can one spend on his/her hooby?'\n            ]\n        },\n    },\n    {\n        topic: \"emotions\",\n        title: {\n            en: 'Emotions'\n        },\n        questions: {\n            en: [\n                'What are some things that make you feel very good?',\n                'What are some things that can make you feel bad',\n                'What makes you feel nervous?',\n                'In your country, do different colors symbolize differente emotions? Why do you think?',\n                'How do you control your emotions? Is it hard for you?',\n                'Some people think having a nice car o big house will make them happy. What do you think you need to have a happy life?',\n                'Does happines depend on culture? Age? Gender? How?',\n                'What is the saddest movie that you know? Talk about it'\n            ]\n        },\n    },\n    {\n        topic: \"family\",\n        title: {\n            en: 'Family'\n        },\n        questions: {\n            en: [\n                'What do you and your family members like to do together?',\n                'How often do you do such activities?',\n                'Do you live in a nuclear or an extended family? What are the advantages and disadvantages of these types of family',\n                'Are friends more important than family or vice versa? Why do you think so?',\n                'Who do you get along better with, your mother or your father? Why is that? How is your relationship with your siblings',\n                'Who does the household work, your father or your mother or both? What chores do you do and how often?',\n                'What are the occupations of your family members? Do they like their jobs? Would yo do the same profession?',\n                'How did you get your name? Who are you named after? Do you like your name?'\n            ]\n        },\n    },\n    {\n        topic: \"have_you_ever\",\n        title: {\n            en: \"Have you Ever?\"\n        },\n        questions: {\n            en: [\n                \"Have you ever broken a bone? How did it happen?\",\n                \"Have you ever tried an extreme sport? How did you feel?\",\n                \"How you ever felt lonely?\",\n                \"How you ever wanted to be a superhero? Wich one?\",\n            ]\n        },\n    },\n];\n\nexport function getCard() {\n    let randomId = randomBetweenNumber(0, cardsInformation.length - 1);\n    return cardsInformation[randomId];\n}\n\nexport default getCard;","import React, {useState} from 'react';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport './Party.scss'\nimport CardComponent from '../components/Card';\nimport Button from '@material-ui/core/Button';\nimport getCard from '../services/getCards'\n\n\nfunction Party() {\n    const history = useHistory();\n    const [card, setCard] = useState(getCard());\n\n    function onUpdateCard() {\n        setCard(getCard());\n    }\n\n    return (\n        <div className=\"party-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <CardComponent \n                    questions={card.questions.en}\n                    title={card.title.en}\n                    initialLetter={card.topic[0].toUpperCase()}\n                    onUpdateCard={onUpdateCard}\n                />\n\n            <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/')}>\n                Home\n            </Button>\n            </Container>\n        </div>\n    );\n}\n\nexport default Party;","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {useHistory} from 'react-router-dom';\nimport './Landing.scss';\n\n\nfunction Landing() {\n    const history = useHistory();\n\n    return (\n        <div className=\"landing-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <h1>Party Language <br/> Cards</h1>\n\n                <div className=\"wrapper-button\">\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/party/0')}>\n                        New Party\n                    </Button>\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/party/0')}>\n                        Random Card\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Landing;","import React from 'react';\nimport './App.scss';\nimport {HashRouter as Router, Route} from 'react-router-dom';\n\n// Pages\nimport Edit from './pages/Edit';\nimport Party from './pages/Party';\nimport Landing from './pages/Landing';\n\nfunction App() {\n  return (\n    <Router>\n      <AppRoutes/>\n    </Router>\n  );\n}\n\nfunction AppRoutes() {\n  return <>\n    <Route exact path=\"/\"><Landing/></Route>\n    <Route exact path=\"/edit\"><Edit/></Route>\n    <Route exact path=\"/party/:id\"><Party/></Route>\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}