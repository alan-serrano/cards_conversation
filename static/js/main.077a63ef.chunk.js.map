{"version":3,"sources":["pages/Edit.js","components/DialogHelp.js","services/firebase.js","components/DialogSettings.js","components/Card.js","helpers/utils.js","layout/CardsHeader.js","pages/Cards.js","pages/Landing.js","pages/Admin.js","App.js","index.js"],"names":["Edit","className","useStylesDialog","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","content","marginTop","Transition","React","forwardRef","props","ref","Slide","direction","DialogHelp","children","Icon","dataIsReady","classes","useState","open","setOpen","handleClose","IconButton","disabled","style","color","aria-label","onClick","Dialog","fullScreen","onClose","aria-labelledby","aria-describedby","TransitionComponent","AppBar","Toolbar","edge","Typography","variant","DialogContent","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","divider","marginBottom","ContentSettings","normalizedDifficulties","difficultyStates","setDifficultyStates","normalizedTopics","topicStates","setTopicStates","allDifficultiesCheck","setAllDifficultiesCheck","allTopicsCheck","setAllTopicsCheck","createCheckboxs","elements","elementStates","handler","map","element","index","FormControlLabel","control","Checkbox","checked","id","onChange","name","label","key","useEffect","Object","values","filter","v","length","Container","maxWidth","FormControl","component","FormLabel","FormGroup","event","target","newDifficulyStates","difficultyStateId","newDifficultyStates","Divider","light","newTopicStates","topicStateId","console","log","newTopicsStates","DialogSettings","topics","normalizedTopicsMap","topicFilters","setTopicFilters","difficulties","normalizedDifficultiesMap","difficultyFilters","setDifficultyFilters","useParams","undefined","refcurrentTopicsParty","refcurrentDifficultiesParty","set","useStyles","display","alignItems","flexGrow","capitalize","textTransform","textAlign","CardComponent","question","help","setCurrentTopic","currentQuestions","currentQuestionsMap","currentQuestion","setCurrentQuestion","root","CardHeader","Skeleton","animation","width","height","margin","HelpIcon","CardContent","randomBetweenNumber","min","max","Math","floor","random","randomElementArray","arr","container","justifyContent","Header","languageActives","setLanguageISO","languageISO","languages","history","useHistory","anchorEl","setAnchorEl","handleMenuSelect","languageId","currentTarget","dataset","Button","push","Menu","keepMounted","Boolean","menuItems","languageID","MenuItem","data-language-id","marginRight","nativeName","createMenuItems","flexSpace","flexBasis","CardsView","questions","partyIsReady","setPartyIsReady","currentTopic","isDisabledPrevBtn","setIsDisabledPrevBtn","isDisabledNextBtn","setIsDisabledNextBt","isDisabledRandomBtn","setIsDisabledRandomBtn","onUpdateCard","refcurrentQuestionParty","newQuestion","questionId","error","topicId","refParty","getParty","snapshot","party","val","on","errorObject","code","off","hasOwnProperty","size","currentQuestionInfo","prevQuestionInfo","nextQuestionInfo","Landing","createNewParty","randomCard","fullWidth","Admin","AppRoutes","setLanguageActives","setLanguages","setQuestions","setTopics","setNormalizedTopics","setNormalizedTopicsMap","setDifficulties","setNormalizedDifficulties","setNormalizedDifficultiesMap","setCurrentQuestions","setCurrentQuestionsMap","setDataIsReady","normalizedDataIsReady","setNormalizedDataIsReady","initialFilter","result","resetData","refLanguages","getLanguages","actives","isoLangs","refData","getData","data","normalizedQuestions","normalizedQuestionsMap","difficulty","sort","a","b","forEach","value","topic","idNormalized","difficultyId","condition","entries","exact","path","newRefParty","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.077a63ef.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Edit() {\n    return (\n        <div className=\"edit-page\">\n            Página Edit\n        </div>\n    );\n}\n\nexport default Edit;","import React from 'react';\n\n/* MATERIAL UI */\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Surfaces\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Feedback\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\n// Data Display\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// Utils\nimport Slide from '@material-ui/core/Slide';\n\nconst useStylesDialog = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    content: {\n        marginTop: '20px'\n    }\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction DialogHelp({children, Icon, dataIsReady}) {\n\n    const classes = useStylesDialog();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <IconButton disabled={!dataIsReady} style={(dataIsReady) ? { color: '#F44336' } : {}}  aria-label=\"help\" onClick={handleClickOpen}>\n                <Icon/>\n            </IconButton>\n            <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\" TransitionComponent={Transition}>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Help\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.content}>\n                        {children}\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nexport default DialogHelp;","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n    apiKey: \"AIzaSyBJmgMqOrcOQBg3-JvswwmqlLCvbIAIoeY\",\n    authDomain: \"cards-conversation-starters.firebaseapp.com\",\n    databaseURL: \"https://cards-conversation-starters.firebaseio.com\",\n    projectId: \"cards-conversation-starters\",\n    storageBucket: \"cards-conversation-starters.appspot.com\",\n    messagingSenderId: \"1037492872627\",\n    appId: \"1:1037492872627:web:9af0f2901b3655cb7357c6\",\n    measurementId: \"G-HSK36FCQYP\"\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const db = firebase.database();","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\n/* FIREBASE */\nimport { db } from '../services/firebase';\n\n/* MATERIAL UI */\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container'\n\n// Inputs\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// Surfaces\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Feedback\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\n// Data Display\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n// Utils\nimport Slide from '@material-ui/core/Slide';\n\nconst useStylesDialog = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    content: {\n        marginTop: '20px'\n    },\n    divider: {\n        marginBottom: theme.spacing(1)\n    }\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction DialogSettings(props) {\n    const {\n        dataIsReady,\n\n        topics,\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicFilters,\n        setTopicFilters,\n\n        difficulties,\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyFilters,\n        setDifficultyFilters,\n    } = props;\n\n    const {id} = useParams();\n\n    const classes = useStylesDialog();\n\n    const [open, setOpen] = React.useState(false);\n    \n    // Handle cheks states\n    const [difficultyStates, setDifficultyStates] = React.useState();\n    \n    const [topicStates, setTopicStates] = React.useState();\n    \n    React.useEffect( function initializeFilters() {\n        setDifficultyStates({\n            ...difficultyFilters,\n        });\n\n        setTopicStates({\n            ...topicFilters,\n        });\n    }, [difficultyFilters, topicFilters] )\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setDifficultyStates({\n            ...difficultyFilters,\n        });\n\n        setTopicStates({\n            ...topicFilters,\n        });\n        \n    };\n    \n    const handleSave = () => {\n        setOpen(false);\n\n        if( id !== undefined ) {\n            const refcurrentTopicsParty = db.ref(`parties/${id}/topics`);\n            const refcurrentDifficultiesParty = db.ref(`parties/${id}/difficulties`);\n    \n            refcurrentTopicsParty.set({\n                ...topicStates,\n            });\n            \n            refcurrentDifficultiesParty.set({\n                ...difficultyStates,\n            });\n\n        } else {\n            setDifficultyFilters({\n                ...difficultyStates,\n            });\n\n            setTopicFilters({\n                ...topicStates,\n            });\n        }\n    };\n\n    return (\n        <>\n            <IconButton disabled={!dataIsReady} style={(dataIsReady) ? { color: '#F44336' } : {}} aria-label=\"settings\"  onClick={handleClickOpen}>\n                <SettingsIcon />\n            </IconButton>\n            <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\" TransitionComponent={Transition}>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Settings\n                        </Typography>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleSave} aria-label=\"close\">\n                            <DoneIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.content}>\n                    <ContentSettings \n                        topics={topics}\n                        normalizedTopics={normalizedTopics}\n                        normalizedTopicsMap={normalizedTopicsMap}\n                        topicStates={topicStates}\n                        setTopicStates={setTopicStates}\n                        \n                        difficulties={difficulties}\n                        normalizedDifficulties={normalizedDifficulties}\n                        normalizedDifficultiesMap={normalizedDifficultiesMap}\n                        difficultyStates={difficultyStates}\n                        setDifficultyStates={setDifficultyStates}\n                    />\n                        \n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nfunction ContentSettings(props) {\n    const classes = useStylesDialog();\n    const {\n        normalizedDifficulties,\n        difficultyStates,\n        setDifficultyStates,\n\n        normalizedTopics,\n        topicStates,\n        setTopicStates\n    } = props\n\n\n    const [allDifficultiesCheck, setAllDifficultiesCheck] = React.useState(false);\n    const [allTopicsCheck, setAllTopicsCheck] = React.useState(false);\n\n    const handleDifficultyChange = (event) => {\n        const newDifficultyStates = {...difficultyStates};\n        newDifficultyStates[event.target.name] = event.target.checked;\n        setDifficultyStates( newDifficultyStates );\n    };\n    \n    const handleAllDifficultiesCheck = (event) => {\n        if( event.target.checked ) {\n            const newDifficulyStates = {};\n\n            for (const difficultyStateId in difficultyStates) {\n                newDifficulyStates[difficultyStateId] = true;\n            }\n\n            setDifficultyStates( newDifficulyStates );\n        } else {\n            const newDifficulyStates = {};\n\n            for (const difficultyStateId in difficultyStates) {\n                newDifficulyStates[difficultyStateId] = false;\n            }\n\n            setDifficultyStates( newDifficulyStates );\n        }\n\n        setAllDifficultiesCheck( event.target.checked );\n    };\n    \n    const handleTopicChange = (event) => {\n        const newTopicsStates = {...topicStates};\n        newTopicsStates[event.target.name] = event.target.checked;\n        setTopicStates(newTopicsStates);\n    };\n\n    const handleAllTopicsCheck = (event) => {\n        if( event.target.checked ) {\n            const newTopicStates = {};\n\n            for (const topicStateId in topicStates) {\n                newTopicStates[topicStateId] = true;\n            }\n            console.log(newTopicStates);\n\n            setTopicStates( newTopicStates );\n        } else {\n            const newTopicStates = {};\n\n            for (const topicStateId in topicStates) {\n                newTopicStates[topicStateId] = false;\n            }\n\n            setTopicStates( newTopicStates );\n        }\n\n        setAllTopicsCheck( event.target.checked );\n    };\n\n    React.useEffect( function verifyCheckboxsDifficulty() {\n        if( Object.values(difficultyStates).filter( v => v ).length === Object.values(difficultyStates).length ) {\n            setAllDifficultiesCheck(true);\n        } else {\n            setAllDifficultiesCheck(false);\n        }\n        \n        if( Object.values(topicStates).filter( v => v ).length !== Object.values(topicStates).length ) {\n            setAllTopicsCheck(false);\n        } else {\n            setAllTopicsCheck(true);\n        }\n\n    },[difficultyStates, topicStates]);\n\n    function createCheckboxs(elements, elementStates, handler) {\n\n        return elements.map( (element, index) => (\n            <FormControlLabel\n                control={<Checkbox checked={elementStates[element.id]} onChange={handler} name={`${element.id}`} />}\n                label={element.name}\n                key={index}\n            />\n        ));\n    }\n    \n    return (\n        <>\n            <form>\n                <Container maxWidth=\"xs\">\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Select difficulties</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={allDifficultiesCheck} onChange={handleAllDifficultiesCheck} />}\n                                label={\"All\"}\n                            />\n                            {createCheckboxs( normalizedDifficulties, difficultyStates, handleDifficultyChange )}\n                        </FormGroup>\n                    </FormControl>\n                    <Divider light className={classes.divider}/>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Select topics</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={allTopicsCheck} onChange={handleAllTopicsCheck} />}\n                                label={\"All\"}\n                            />\n                            {createCheckboxs( normalizedTopics, topicStates, handleTopicChange )}\n                        </FormGroup>\n                    </FormControl>\n                </Container>\n            </form>\n        </>\n    );\n}\n\nexport default DialogSettings;","import React from 'react';\nimport './Card.scss';\n\n/* COMPONENTS */\nimport DialogHelp from './DialogHelp';\nimport DialogSettings from './DialogSettings';\n\n/* MATERIAL UI */\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container'\n\n// Surfaces\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\n// Data Display\nimport Typography from '@material-ui/core/Typography';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n    flex: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    flexGrow: {\n        flexGrow: 1,\n    },\n    capitalize: {\n        textTransform: 'capitalize',\n        textAlign: 'center'\n    }\n}));\n\n\nfunction CardComponent(props) {\n    const {\n        dataIsReady,\n\n        question,\n        title,\n        help,\n\n        topics,\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicFilters,\n        setTopicFilters,\n        setCurrentTopic,\n\n        difficulties,\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyFilters,\n        setDifficultyFilters,\n\n        currentQuestions,\n        currentQuestionsMap,\n        currentQuestion,\n        setCurrentQuestion,\n    } = props;\n\n    const classes = useStyles();\n\n    return (\n        <div className=\"card-component\">\n            <Card className={classes.root}>\n                <CardHeader\n                    classes={{title: classes.flex}}\n                    title={\n                        <>\n                            <DialogSettings\n                                dataIsReady={dataIsReady}\n\n                                topics={topics}\n                                normalizedTopics={normalizedTopics}\n                                normalizedTopicsMap={normalizedTopicsMap}\n                                topicFilters={topicFilters}\n                                setTopicFilters={setTopicFilters}\n                                setCurrentTopic={setCurrentTopic}\n            \n                                difficulties={difficulties}\n                                normalizedDifficulties={normalizedDifficulties}\n                                normalizedDifficultiesMap={normalizedDifficultiesMap}\n                                difficultyFilters={difficultyFilters}\n                                setDifficultyFilters={setDifficultyFilters}\n\n                                currentQuestions={currentQuestions}\n                                currentQuestionsMap={currentQuestionsMap}\n                                currentQuestion={currentQuestion}\n                                setCurrentQuestion={setCurrentQuestion}\n                            />\n                            <Typography variant=\"h5\" className={`${classes.capitalize} ${classes.flexGrow}`}>\n                                {title \n                                    ? title\n                                    : <Skeleton animation=\"wave\" width=\"60%\" height=\"1em\" style={{margin: \"0 auto\"}}/>\n                                }\n                            </Typography>\n                            <DialogHelp Icon={HelpIcon} dataIsReady={dataIsReady}>\n                                <Container maxWidth=\"sm\">\n                                    { help }\n                                </Container>\n                            </DialogHelp>\n                        </>\n                    }\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {question\n                            ? question\n                            :  <>\n                                <Skeleton animation=\"wave\" />\n                                <Skeleton animation=\"wave\" />\n                                <Skeleton animation=\"wave\" />\n                            </>\n                        }\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default CardComponent;","export function randomBetweenNumber(min, max) {\n    return Math.floor( (max - min + 1) * Math.random() + min )\n}\n\nexport function randomElementArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return arr[ randomId ]\n}\n\nexport function randomIdArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return randomId;\n}","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\n/* MATERIAL UI */\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\n// Navigation\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n// Surfaces\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Data Display\nimport HomeIcon from '@material-ui/icons/Home';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    }\n}));\n\nfunction Header({languageActives, setLanguageISO, languageISO, languages}) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState();\n\n\n    function handleLanguageClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLanguageClose() {\n        setAnchorEl(null);\n    }\n    \n    function handleMenuSelect(event) {\n        const { languageId } = event.currentTarget.dataset;\n        setLanguageISO(languageId)\n        setAnchorEl(null);\n    }\n\n    function createMenuItems() {\n        const menuItems = [];\n\n        for (const languageID in languageActives) {\n            menuItems.push(\n                <MenuItem onClick={handleMenuSelect} data-language-id={languageID} key={languageID}>\n                    <span style={{ textTransform: 'uppercase', marginRight: '0.5em' }}>{languageID}</span>\n                    <span>{languages[languageID] && languages[languageID].nativeName}</span>\n                </MenuItem>\n            );\n        }\n\n        return menuItems;\n    }\n\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Container maxWidth=\"xs\" className={classes.container}>\n                    <Button color=\"inherit\" aria-label=\"menu\" onClick={() => history.push('/')}>\n                        <HomeIcon />\n                    </Button>\n                    <Button edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleLanguageClick}>\n                        <LanguageIcon /><span style={{marginLeft: '0.4em'}}>{languageISO}</span>\n                    </Button>\n                    <Menu\n                      id=\"languageSelector\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      onClose={handleLanguageClose}\n                      \n                    >\n                        {createMenuItems()}\n                      \n                    </Menu>\n                </Container>\n                \n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;\n","import React, {useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport './Cards.scss'\n\n/* COMPONENTS */\nimport CardComponent from '../components/Card';\n\n/* HELPERS */\nimport { randomElementArray } from '../helpers/utils';\n\n/* LAYOUT */\nimport Header from '../layout/CardsHeader';\n\n/* FIREBASE */\nimport { db } from '../services/firebase';\n\n/* MATERIAL UI */\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        marginTop: '1.2rem',\n        justifyContent: 'space-between'\n    },\n    flexSpace: {\n        flexBasis: 'calc(33.33% - 0.2rem)'\n    }\n}));\n\nfunction CardsView(props) {\n    const {\n        setLanguageISO,\n        languageISO,\n        languages,\n        languageActives,\n\n        questions,\n\n        topics,\n        normalizedTopics,\n        normalizedTopicsMap,\n        topicFilters,\n        setTopicFilters,\n        \n        difficulties,\n        normalizedDifficulties,\n        normalizedDifficultiesMap,\n        difficultyFilters,\n        setDifficultyFilters,\n\n        currentQuestions,\n        currentQuestionsMap,\n        currentQuestion,\n        setCurrentQuestion,\n\n        dataIsReady\n    } = props;\n\n    const {id} = useParams();\n\n    const classes = useStyles();\n\n    const [partyIsReady, setPartyIsReady] = React.useState();\n\n    const [currentTopic, setCurrentTopic] = React.useState();\n\n    // Buttons states\n    const [isDisabledPrevBtn, setIsDisabledPrevBtn] = React.useState();\n    const [isDisabledNextBtn, setIsDisabledNextBt] = React.useState();\n    const [isDisabledRandomBtn, setIsDisabledRandomBtn] = React.useState();\n\n    React.useEffect( function checkingIfDataIsReady() {\n        setIsDisabledPrevBtn(!dataIsReady);\n        setIsDisabledNextBt(!dataIsReady);\n        setIsDisabledRandomBtn(!dataIsReady);\n    },[dataIsReady] );\n    \n\n    // Connecting to party\n    \n    useEffect( function connectParty(){\n        if( id !== undefined && dataIsReady) {\n\n            const refParty = db.ref(`parties/${id}`);\n\n            refParty.on(\"value\",\n                getParty,\n                (errorObject) => {\n                    console.log(\"The read failed: \" + errorObject.code);\n                }\n            )\n\n            function getParty(snapshot) {\n                const party = snapshot.val();\n                if (party) {\n                    setCurrentQuestion(party.currentQuestion);\n                    setCurrentTopic(questions[party.currentQuestion].topicId)\n                    setDifficultyFilters(party.difficulties);\n                    setTopicFilters(party.topics);\n                    setPartyIsReady(true);\n                }\n            }\n\n            return function disconnectParty() {\n                refParty.off(\"value\", getParty);\n            }\n        }\n    }, [dataIsReady, id, partyIsReady, questions, setCurrentQuestion, setDifficultyFilters, setTopicFilters]);\n    \n    React.useEffect( function randomCard(){\n        const condition = (\n            id === undefined &&\n            currentQuestions !== undefined &&\n            currentQuestionsMap !== undefined &&\n            currentQuestion === undefined\n        );\n            \n        if( condition ) {\n            let newQuestion = randomElementArray(currentQuestions);\n\n            setCurrentQuestion(newQuestion.questionId);\n            setCurrentTopic(newQuestion.topicId)\n        }\n    }, [currentQuestion, currentQuestions, currentQuestionsMap, dataIsReady, id, setCurrentQuestion]);\n\n    React.useEffect(function updateAfterChangeFilters() {\n        if( currentQuestion !== undefined && dataIsReady && !currentQuestionsMap.hasOwnProperty(currentQuestion)) {\n            if (id !== undefined) {\n                const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n                let newQuestion= randomElementArray(currentQuestions);\n                refcurrentQuestionParty.set(newQuestion.questionId)\n                \n            } else {\n                let newQuestion = randomElementArray(currentQuestions);\n    \n                setCurrentQuestion(newQuestion.questionId);\n                setCurrentTopic(newQuestion.topicId)\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentQuestions, currentQuestionsMap, currentQuestion]);\n\n    // Handlers\n    function onUpdateCard() {\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledRandomBtn(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n\n            let newQuestion= randomElementArray(currentQuestions);\n            refcurrentQuestionParty.set(newQuestion.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledRandomBtn(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let newQuestion = randomElementArray(currentQuestions);\n\n            setCurrentQuestion(newQuestion.questionId);\n            setCurrentTopic(newQuestion.topicId)\n        }\n        \n    }\n\n    function handleNextClick() {\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledNextBt(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let nextQuestionInfo = currentQuestionInfo.index + 1 < currentQuestions.length ?\n                currentQuestions[currentQuestionInfo.index + 1] :\n                currentQuestions[0];\n\n            refcurrentQuestionParty.set(nextQuestionInfo.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledNextBt(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let nextQuestionInfo = currentQuestionInfo.index + 1 < currentQuestions.length ?\n                currentQuestions[currentQuestionInfo.index + 1] :\n                currentQuestions[0];\n            setCurrentQuestion(nextQuestionInfo.questionId);\n            setCurrentTopic(nextQuestionInfo.topicId);\n        }\n    }\n\n    function handlePrevClick() {\n        // let prevId = question - 1 > 0 ? question - 1 : questions.length - 1;\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledPrevBtn(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let prevQuestionInfo = currentQuestionInfo.index - 1 > 0 ?\n                currentQuestions[currentQuestionInfo.index - 1] :\n                currentQuestions[currentQuestions.length - 1];\n\n            refcurrentQuestionParty.set(prevQuestionInfo.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledPrevBtn(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let currentQuestionInfo = currentQuestionsMap[currentQuestion]\n            let prevQuestionInfo = currentQuestionInfo.index + 1 < currentQuestions.length ?\n                currentQuestions[currentQuestionInfo.index - 1] :\n                currentQuestions[currentQuestions.length - 1];\n            setCurrentQuestion(prevQuestionInfo.questionId);\n            setCurrentTopic(prevQuestionInfo.topicId);\n        }\n    }\n\n    return (\n        <div className=\"party-page\">\n            <Header \n                languages={languages}\n                languageActives={languageActives}\n                languageISO={languageISO}\n                setLanguageISO={setLanguageISO}>\n            </Header>\n            <Container maxWidth=\"xs\" className=\"container\">\n                { id !== undefined &&\n                    <CardComponent\n                        question={dataIsReady && partyIsReady && currentQuestionsMap[currentQuestion] !== undefined && currentQuestionsMap[currentQuestion].question}\n                        title={dataIsReady && partyIsReady && normalizedTopicsMap[currentTopic].name}\n                        help={dataIsReady && partyIsReady && normalizedTopicsMap[currentTopic].help}\n                        onUpdateCard={onUpdateCard}\n                        dataIsReady={dataIsReady}\n\n                        topics={topics}\n                        normalizedTopics={normalizedTopics}\n                        normalizedTopicsMap={normalizedTopicsMap}\n                        setCurrentTopic={setCurrentTopic}\n                        topicFilters={topicFilters}\n                        setTopicFilters={setTopicFilters}\n\n                        difficulties={difficulties}\n                        normalizedDifficulties={normalizedDifficulties}\n                        normalizedDifficultiesMap={normalizedDifficultiesMap}\n                        difficultyFilters={difficultyFilters}\n                        setDifficultyFilters={setDifficultyFilters}\n\n                        currentQuestions={currentQuestions}\n                        currentQuestionsMap={currentQuestionsMap}\n                        currentQuestion={currentQuestion}\n                        setCurrentQuestion={setCurrentQuestion}\n                    />\n                }\n\n                {id === undefined &&\n                    <CardComponent\n                        question={currentQuestionsMap && currentQuestion && currentQuestionsMap[currentQuestion] && currentQuestionsMap[currentQuestion].question}\n                        title={currentQuestionsMap && currentTopic && topics[currentTopic] && topics[currentTopic].name}\n                        help={currentQuestionsMap && currentTopic && topics[currentTopic] &&topics[currentTopic].help}\n                        onUpdateCard={onUpdateCard}\n                        dataIsReady={dataIsReady}\n\n                        topics={topics}\n                        normalizedTopics={normalizedTopics}\n                        normalizedTopicsMap={normalizedTopicsMap}\n                        setCurrentTopic={setCurrentTopic}\n                        topicFilters={topicFilters}\n                        setTopicFilters={setTopicFilters}\n\n                        difficulties={difficulties}\n                        normalizedDifficulties={normalizedDifficulties}\n                        normalizedDifficultiesMap={normalizedDifficultiesMap}\n                        difficultyFilters={difficultyFilters}\n                        setDifficultyFilters={setDifficultyFilters}\n\n                        currentQuestions={currentQuestions}\n                        currentQuestionsMap={currentQuestionsMap}\n                        currentQuestion={currentQuestion}\n                        setCurrentQuestion={setCurrentQuestion}\n                    />\n                }\n\n                <div className={`${classes.container} wrapper-btn`}>\n                    <Button disabled={isDisabledPrevBtn}  variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace} onClick={handlePrevClick}>\n                        Prev\n                    </Button>\n                    <Button disabled={isDisabledRandomBtn} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace} onClick={onUpdateCard}>\n                        Random\n                    </Button>\n                    <Button disabled={isDisabledNextBtn} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace}  onClick={handleNextClick}>\n                        Next\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default CardsView;","import React from 'react';\nimport './Landing.scss';\n\n/* MATERIAL UI */\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\nfunction Landing({createNewParty, randomCard, dataIsReady}) {\n\n    return (\n        <div className=\"landing-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <h1>Conversation <br/> Starters</h1>\n\n                <div className=\"wrapper-button\">\n                    <Button size=\"large\" disabled={!dataIsReady} fullWidth variant=\"contained\" color=\"primary\" onClick={createNewParty}>\n                        Create Room\n                    </Button>\n                    <Button size=\"large\" disabled={!dataIsReady} fullWidth variant=\"contained\" color=\"primary\" onClick={randomCard}>\n                        Random Card\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Landing;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Admin.scss';\n\n/* MATERIAL UI */\n\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\nfunction Admin() {\n    const history = useHistory();\n    return (\n        <div className=\"admin-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <h1>Admin <br/> Cards</h1>\n\n                <div className=\"wrapper-button\">\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/edit')}>\n                        Cards\n                    </Button>\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/edit')}>\n                        Groups\n                    </Button>\n                    <Button size=\"large\" fullWidth variant=\"contained\" color=\"primary\" onClick={() => history.push('/')}>\n                        Home\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Admin;","import React, {useState} from 'react';\nimport './App.scss';\nimport {HashRouter as Router, Route, useHistory} from 'react-router-dom';\n\n// Pages\nimport Edit from './pages/Edit';\nimport CardsView from './pages/Cards';\nimport Landing from './pages/Landing';\nimport Admin from './pages/Admin';\n\n// Firebase\nimport { db } from './services/firebase';\nimport { randomElementArray } from './helpers/utils';\n\nfunction App() {\n  \n  return (\n    <Router>\n      <AppRoutes/>\n    </Router>\n  );\n}\n\nfunction AppRoutes() {\n  const [languageISO, setLanguageISO] = useState('en');\n  const [languageActives, setLanguageActives] = useState();\n  const [languages, setLanguages] = useState({});\n\n  const [questions, setQuestions] = useState({});\n\n  const [topics, setTopics] = React.useState({});\n  const [normalizedTopics, setNormalizedTopics] = React.useState();\n  const [normalizedTopicsMap, setNormalizedTopicsMap] = React.useState();\n\n  const [difficulties, setDifficulties] = React.useState({});\n  const [normalizedDifficulties, setNormalizedDifficulties] = React.useState();\n  const [normalizedDifficultiesMap, setNormalizedDifficultiesMap] = React.useState();\n\n  // Current information of cards\n  const [currentQuestions, setCurrentQuestions] = useState([]);\n  const [currentQuestionsMap, setCurrentQuestionsMap] = useState();\n  const [currentQuestion, setCurrentQuestion] = React.useState();\n  const [difficultyFilters, setDifficultyFilters] = React.useState();\n  const [topicFilters, setTopicFilters] = React.useState();\n\n  const [dataIsReady, setDataIsReady] = useState(false);\n  const [normalizedDataIsReady, setNormalizedDataIsReady] = useState(false);\n\n  const history = useHistory();\n\n  React.useEffect(function connectLanguages() {\n    const refLanguages = db.ref(\"languages\");\n\n    refLanguages.on(\"value\",\n    getLanguages,\n    function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n\n    function getLanguages(snapshot) {\n      const languages = snapshot.val();\n      setLanguageActives(languages.actives);\n      setLanguages(languages.isoLangs);\n    }\n\n    return function disconnectLanguages() {\n      refLanguages.off(\"value\", getLanguages);\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect( function connectData() {\n    const refData = db.ref(`app/${languageISO}`);\n\n    refData.on(\"value\",\n      getData,\n      (errorObject) => {\n        console.log(\"The read failed: \" + errorObject.code);\n      }\n    )\n  \n    function getData(snapshot) {\n      const data = snapshot.val();\n      setQuestions(data.questions);\n\n      setTopics(data.topics);\n      setTopicFilters(initialFilter(data.topics));\n      \n      setDifficulties(data.difficulties);\n      setDifficultyFilters(initialFilter(data.difficulties));\n    }\n\n    return function disconnectData() {\n      refData.off(\"value\", getData);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [languageISO]);\n\n  React.useEffect(function normalizeQuestions() {\n    if( dataIsReady && topicFilters && difficultyFilters) {\n      let normalizedQuestions = [];\n      let normalizedQuestionsMap = {};\n\n      for (const questionId in questions) {\n        const question = questions[questionId];\n        if( topicFilters[question.topicId] && difficultyFilters[question.difficulty]) {\n          normalizedQuestions.push({\n            ...question,\n            questionId: questionId\n          })\n        }\n      }\n\n      normalizedQuestions.sort(function (a, b) {\n        if (topics[a.topicId].name > topics[b.topicId].name) {\n          return 1;\n        }\n        if (topics[a.topicId].name < topics[b.topicId].name) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      normalizedQuestions.forEach( (value, index) => {\n        value.index = index;\n        normalizedQuestionsMap[value.questionId] = {\n          ...value,\n          index\n        };\n      });\n\n      setCurrentQuestions( normalizedQuestions );\n      setCurrentQuestionsMap( normalizedQuestionsMap );\n    }\n\n  }, [dataIsReady, difficultyFilters, questions, topicFilters, topics]);\n\n  React.useEffect(function normalizeTopics() {\n    if( dataIsReady ) {\n      let normalizedTopics = [];\n      let normalizedTopicsMap = {};\n\n      for (const topicId in topics) {\n        const topic = topics[topicId];\n        normalizedTopics.push({\n          ...topic,\n          id: topicId,\n        });\n      }\n\n      normalizedTopics.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      normalizedTopics.forEach( (value, index) => {\n        value.index = index;\n        normalizedTopicsMap[value.id] = {\n          ...value,\n          idNormalized: index,\n        };\n      });\n\n      setNormalizedTopics( normalizedTopics );\n      setNormalizedTopicsMap( normalizedTopicsMap );\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [topics, dataIsReady]);\n\n  React.useEffect(function normalizeDifficulties() {\n    if( dataIsReady ) {\n      let normalizedDifficulties = [];\n      let normalizedDifficultiesMap = {};\n\n      for (const difficultyId in difficulties) {\n        const topic = difficulties[difficultyId];\n        normalizedDifficulties.push({\n          ...topic,\n          id: difficultyId,\n        });\n      }\n\n      normalizedDifficulties.sort(function (a, b) {\n        if (a.id > b.id) {\n          return 1;\n        }\n        if (a.id < b.id) {\n          return -1;\n        }\n        // a must be equal to b\n        return 0;\n      });\n\n      normalizedDifficulties.forEach( (value, index) => {\n        value.index = index;\n        normalizedDifficultiesMap[value.difficultyId] = {\n          ...value,\n          idNormalized: index,\n        };\n      });\n\n      setNormalizedDifficulties( normalizedDifficulties );\n      setNormalizedDifficultiesMap( normalizedDifficultiesMap );\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [difficulties, dataIsReady]);\n\n  React.useEffect(function checkIfDataIsReady() {\n    const condition = (\n      Object.values(languages).length > 0 &&\n      Object.values(questions).length > 0 &&\n      Object.values(topics).length > 0 &&\n      Object.values(difficulties).length > 0\n    );\n\n    if(condition) setDataIsReady(true);\n  }, [difficulties, languages, questions, topics]);\n\n  React.useEffect( function checkIfNormalizedDataIsReady() {\n    const condition = (\n      Object.entries(currentQuestions).length > 0 &&\n      currentQuestionsMap &&\n      normalizedTopics &&\n      normalizedTopicsMap &&\n      normalizedDifficulties &&\n      normalizedDifficultiesMap\n    );\n\n    if(condition) {\n      setNormalizedDataIsReady(true);\n    } else {\n      setNormalizedDataIsReady(false);\n    }\n\n  },[currentQuestions, currentQuestionsMap, normalizedDifficulties, normalizedDifficultiesMap, normalizedTopics, normalizedTopicsMap]);\n\n  function initialFilter(elements) {\n    const result = {};\n\n    for (const id in elements) {\n      if (elements.hasOwnProperty(id)) {\n        result[id] = true;\n      }\n    }\n\n    return result;\n  }\n\n  function resetData() {\n    if (dataIsReady) {\n      setCurrentQuestion(undefined);\n      setDifficultyFilters(initialFilter(difficulties));\n      setTopicFilters(initialFilter(topics));\n    }\n  }\n\n  function createNewParty() {\n    resetData();\n    if (normalizedDataIsReady) {\n      const refParties = db.ref(`parties`);\n      const newRefParty = refParties.push();\n      history.push(`/room/${newRefParty.key}`)\n      let newQuestion = randomElementArray(currentQuestions);\n\n      newRefParty.set({\n        currentQuestion: newQuestion.questionId,\n        difficulties: initialFilter(difficulties),\n        topics: initialFilter(topics)\n      });\n    }\n  }\n\n  function randomCard() {\n    resetData();\n    history.push(`/random`);\n  }\n\n  return <>\n    <Route exact path=\"/\">\n      <Landing\n        dataIsReady={normalizedDataIsReady}\n        \n        languageISO={languageISO}\n        setLanguageISO={setLanguageISO}\n        languageActives={languageActives}\n\n        createNewParty={createNewParty}\n        randomCard={randomCard}\n      />\n    </Route>\n    <Route exact path=\"/edit\"><Edit/></Route>\n    <Route exact path=\"/admin\"><Admin/></Route>\n    <Route exact path=\"/room/:id\">\n      <CardsView \n        setLanguageISO={setLanguageISO}\n        languageISO={languageISO}\n        languages={languages}\n        languageActives={languageActives}\n\n        questions={questions}\n\n        topics={topics}\n        normalizedTopics={normalizedTopics}\n        normalizedTopicsMap={normalizedTopicsMap}\n        topicFilters={topicFilters}\n        setTopicFilters={setTopicFilters}\n\n        difficulties={difficulties}\n        normalizedDifficulties={normalizedDifficulties}\n        normalizedDifficultiesMap={normalizedDifficultiesMap}\n        difficultyFilters={difficultyFilters}\n        setDifficultyFilters={setDifficultyFilters}\n\n        currentQuestions={currentQuestions}\n        currentQuestionsMap={currentQuestionsMap}\n        currentQuestion={currentQuestion}\n        setCurrentQuestion={setCurrentQuestion}\n\n        dataIsReady={normalizedDataIsReady}\n      />\n    </Route>\n    <Route exact path=\"/random\">\n      <CardsView\n        setLanguageISO={setLanguageISO}\n        languageISO={languageISO}\n        languages={languages}\n        languageActives={languageActives}\n\n        questions={questions}\n\n        topics={topics}\n        normalizedTopics={normalizedTopics}\n        normalizedTopicsMap={normalizedTopicsMap}\n        topicFilters={topicFilters}\n        setTopicFilters={setTopicFilters}\n\n        difficulties={difficulties}\n        normalizedDifficulties={normalizedDifficulties}\n        normalizedDifficultiesMap={normalizedDifficultiesMap}\n        difficultyFilters={difficultyFilters}\n        setDifficultyFilters={setDifficultyFilters}\n\n        currentQuestions={currentQuestions}\n        currentQuestionsMap={currentQuestionsMap}\n        currentQuestion={currentQuestion}\n        setCurrentQuestion={setCurrentQuestion}\n\n        dataIsReady={normalizedDataIsReady}\n      />\n    </Route>\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}