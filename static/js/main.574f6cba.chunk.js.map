{"version":3,"sources":["services/firebase.js","helpers/utils.js","Context/GlobalContext.js","pages/Admin/helpers/chartjs.js","pages/Admin/theme/palette.js","pages/Admin/theme/typography.js","pages/Admin/theme/overrides/index.js","pages/Admin/theme/overrides/MuiButton.js","pages/Admin/theme/overrides/MuiIconButton.js","pages/Admin/theme/overrides/MuiPaper.js","pages/Admin/theme/overrides/MuiTableCell.js","pages/Admin/theme/overrides/MuiTableHead.js","pages/Admin/theme/overrides/MuiTypography.js","pages/Admin/theme/index.js","pages/Admin/common/validators.js","pages/Admin/components/SearchInput/SearchInput.js","pages/Admin/components/StatusBullet/StatusBullet.js","pages/Admin/components/RouteWithLayout/RouteWithLayout.js","pages/Admin/layouts/Main/components/Footer/Footer.js","pages/Admin/layouts/Main/components/Sidebar/components/Profile/Profile.js","pages/Admin/layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","pages/Admin/layouts/Main/components/Sidebar/Sidebar.js","pages/Admin/layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","pages/Admin/layouts/Main/components/Topbar/Topbar.js","pages/Admin/layouts/Main/Main.js","pages/Admin/layouts/Minimal/components/Topbar/Topbar.js","pages/Admin/layouts/Minimal/Minimal.js","pages/Admin/views/Account/components/AccountDetails/AccountDetails.js","pages/Admin/views/Account/components/AccountProfile/AccountProfile.js","pages/Admin/views/Account/Account.js","pages/Admin/views/Dashboard/components/Budget/Budget.js","pages/Admin/views/Dashboard/components/LatestOrders/data.js","pages/Admin/views/Dashboard/components/LatestOrders/LatestOrders.js","pages/Admin/views/Dashboard/components/LatestProducts/data.js","pages/Admin/views/Dashboard/components/LatestProducts/LatestProducts.js","pages/Admin/views/Dashboard/components/LatestSales/chart.js","pages/Admin/views/Dashboard/components/LatestSales/LatestSales.js","pages/Admin/views/Dashboard/components/TasksProgress/TasksProgress.js","pages/Admin/views/Dashboard/components/TotalProfit/TotalProfit.js","pages/Admin/views/Dashboard/components/TotalUsers/TotalUsers.js","pages/Admin/views/Dashboard/components/UsersByDevice/UsersByDevice.js","pages/Admin/views/Dashboard/Dashboard.js","pages/Admin/views/NotFound/NotFound.js","pages/Admin/views/ProductList/components/ProductCard/ProductCard.js","pages/Admin/views/ProductList/components/ProductsToolbar/ProductsToolbar.js","pages/Admin/views/ProductList/data.js","pages/Admin/views/ProductList/ProductList.js","components/Alert.js","pages/Admin/views/TopicsList/components/Edit/Edit.js","pages/Admin/views/TopicsList/components/Table/Table.js","pages/Admin/views/TopicsList/components/Toolbar/Toolbar.js","pages/Admin/views/TopicsList/TopicsList.js","pages/Admin/views/Settings/components/Notifications/Notifications.js","pages/Admin/views/Settings/components/Password/Password.js","pages/Admin/views/Settings/Settings.js","pages/Admin/icons/Facebook/index.js","pages/Admin/icons/Google/index.js","pages/Admin/views/SignIn/SignIn.js","pages/Admin/views/SignUp/SignUp.js","pages/Admin/views/CardsList/components/Edit/Edit.js","pages/Admin/views/CardsList/components/Table/Table.js","pages/Admin/views/CardsList/components/Toolbar/UsersToolbar.js","pages/Admin/views/CardsList/CardsList.js","pages/Admin/Admin.Routes.js","pages/Admin/Admin.js","pages/Edit.js","components/DialogHelp.js","components/DialogSettings.js","components/Card.js","layout/CardsHeader.js","pages/Cards.js","pages/Landing.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","randomBetweenNumber","min","max","Math","floor","random","randomElementArray","arr","length","StateContext","React","createContext","DispatchContext","MethodContext","initialLanguages","current","actives","all","languageReducer","state","action","type","payload","initialTopics","normalized","normalizedMap","topicsReducer","initialDifficulties","difficultiesReducer","initialQuestions","translations","questionsReducer","initialCard","question","difficulty","topic","cardReducer","initialAdmin","appMain","adminCardsMap","adminTopicsMap","adminDifficultiesMap","adminCards","adminTopics","adminDifficulties","reducerAdmin","GlobalContextProvider","children","useState","dataIsReady","setDataIsReady","normalizedDataIsReady","setNormalizedDataIsReady","history","setHistory","useReducer","languages","dispatchLanguages","questions","dispatchQuestions","topics","dispatchTopics","difficulties","dispatchDifficulties","card","dispatchCard","admin","dispatchAdmin","initialFilter","elements","result","id","hasOwnProperty","resetData","useEffect","refLanguages","ref","getLanguages","snapshot","val","isoLangs","on","errorObject","console","log","code","off","refMainData","getMainData","data","refDataLanguage","getData","Object","entries","normalizedQuestions","normalizedQuestionsMap","questionId","topicId","push","sort","a","b","name","forEach","value","index","normalizedTopics","normalizedTopicsMap","idNormalized","condition","values","normalizedDifficulties","normalizedDifficultiesMap","difficultyId","dispatch","methods","randomCard","createNewParty","newRefParty","key","newQuestion","set","currentQuestion","timeStamp","database","ServerValue","TIMESTAMP","Provider","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","i","nextCornerId","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","message","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","useStyles","flexShrink","sm","md","lg","neutral","danger","StatusBullet","props","className","size","rest","classes","clsx","defaultProps","RouteWithLayout","Layout","layout","Component","component","Footer","Typography","variant","Link","href","target","flexDirection","minHeight","avatar","marginTop","Profile","user","Avatar","alt","RouterLink","src","to","item","paddingTop","paddingBottom","justifyContent","fontWeightMedium","active","CustomRouterLink","forwardRef","style","SidebarNav","pages","List","map","page","ListItem","disableGutters","title","Button","activeClassName","media","textAlign","content","actions","breakpoints","up","margin","nav","Sidebar","open","onClose","Drawer","anchor","Divider","signOutButton","marginLeft","Topbar","onSidebarOpen","notifications","AppBar","process","Hidden","mdDown","IconButton","Badge","badgeContent","lgUp","onClick","shiftContent","paddingLeft","Main","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","position","Minimal","AccountDetails","firstName","lastName","email","phone","country","setValues","handleChange","event","Card","autoComplete","noValidate","CardHeader","subheader","CardContent","Grid","container","xs","TextField","fullWidth","helperText","label","onChange","required","select","SelectProps","native","option","CardActions","details","progress","uploadButton","AccountProfile","locationText","dateText","moment","format","LinearProgress","Account","xl","difference","differenceIcon","differenceValue","Budget","justify","uuid","amount","customer","createdAt","status","inner","minWidth","statusContainer","statusColors","delivered","pending","refunded","LatestOrders","mockData","orders","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","TableBody","order","hover","imageUrl","updatedAt","subtract","image","LatestProducts","products","subtitle","product","ListItemAvatar","ListItemText","fromNow","edge","labels","datasets","responsive","maintainAspectRatio","animation","legend","tooltips","enabled","mode","intersect","titleFontColor","bodyFontColor","footerFontColor","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","chartContainer","LatestSales","TasksProgress","TotalProfit","TotalUsers","stats","device","deviceIcon","UsersByDevice","hoverBorderColor","cutoutPercentage","devices","Dashboard","maxWidth","NotFound","imageContainer","border","overflow","statsItem","statsIcon","row","spacer","importButton","exportButton","searchInput","pagination","Alert","onConfirm","setOpen","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","formControl","formControlButtons","editorToolbarClassName","editorWrapperClassName","editorClassName","textCenter","Edit","setIsEdit","setReset","setTopicId","isEdit","useContext","editor","setEditor","setTopic","topicChanges","setTopicChanges","language","selectedLanguage","setSelectedLanguage","btnDisabled","setBtnDisabled","btnRemoveDisabled","setBtnRemoveDisabled","openAlertOnDelete","setOpenAlertOnDelete","reset","resetNew","undefined","checkLanguages","refTopicsMain","topicLanguage","once","languageExistInDb","cards","update","topicLanguages","keys","filter","languageId","otherLanguages","refCard","getTopicAndLanguage","firstLanguage","languageTopic","refTopic","getTopic","prevCard","help","html","editorState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","convertToEditorState","Container","FormControl","InputLabel","htmlFor","Select","defaultValue","inputProps","e","ListSubheader","MenuItem","nativeName","languageNativeName","getAttribute","FormLabel","toolbarClassName","wrapperClassName","onEditorStateChange","rawContentState","convertToRaw","getCurrentContent","draftToHtml","toolbar","refTopicLanguages","refTopicTranslation","child","disabled","tableIcons","Add","Check","Clear","Delete","DetailPanel","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","table","nameContainer","hide","Table","topicToEdit","setTopicToEdit","setResetTopic","selectedRow","setSelectedRow","topicsToDelete","setTopicsToDelete","openAlertDeleteRows","setOpenAlertDeleteRows","field","columns","setColumns","removeTopic","refMain","setData","render","rowData","Skeleton","icons","sorting","selection","rowStyle","tableData","onRowClick","evt","tooltip","DeleteOutline","dataSelected","arrTopics","handleDeleteTopics","Toolbar","resetTopic","TopicsList","Facebook","SvgIcon","d","Google","schema","presence","allowEmpty","maximum","password","grid","quoteContainer","down","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","isValid","touched","errors","formState","setFormState","validate","persist","handleSignIn","preventDefault","hasError","person","goBack","onSubmit","align","policy","policyCheckbox","signUpButton","Checkbox","policyText","underline","FormHelperText","setResetCard","idCard","setIdCard","setCard","cardChanges","setCardChanges","setTopics","setDifficulties","resetNewCard","refQuestionsMain","cardLanguage","cardLanguages","getCardAndCurrentLanguage","languageCard","refQuestion","getQuestion","refTopics","refDifficulties","getTopics","topicsSnapShot","topicsTranslation","counter","en","translation","getDifficulties","difficultiesSnapshot","difficultiesTranslation","author","refCardLanguages","cardToEdit","setCardToEdit","cardsToDelete","setCardsToDelete","removeCard","arrCards","handleDeleteCards","UsersToolbar","resetCard","UserList","AdminRoutes","exact","from","DashboardView","MainLayout","path","UserListView","Topics","AccountView","SignUpView","MinimalLayout","SignInView","NotFoundView","Admin","refApp","app","createListCards","createListTopics","appData","additionalData","otherLanguage","toArray","ThemeProvider","Chart","helpers","extend","Rectangle","prototype","chartjs","validators","useStylesDialog","flex","Transition","Slide","DialogHelp","Icon","aria-label","fullScreen","aria-describedby","TransitionComponent","ContentSettings","difficultyStates","setDifficultyStates","topicStates","setTopicStates","allDifficultiesCheck","setAllDifficultiesCheck","allTopicsCheck","setAllTopicsCheck","v","createCheckboxs","elementStates","handler","element","FormControlLabel","control","FormGroup","newDifficulyStates","difficultyStateId","newDifficultyStates","newTopicStates","topicStateId","newTopicsStates","DialogSettings","useParams","refcurrentTopicsParty","refcurrentDifficultiesParty","capitalize","CardComponent","HelpIcon","dangerouslySetInnerHTML","__html","Header","useHistory","anchorEl","setAnchorEl","handleMenuSelect","currentTarget","dataset","keepMounted","Boolean","menuItems","languageID","data-language-id","createMenuItems","flexSpace","CardsView","partyIsReady","setPartyIsReady","isDisabledPrevBtn","setIsDisabledPrevBtn","isDisabledNextBtn","setIsDisabledNextBt","isDisabledRandomBtn","setIsDisabledRandomBtn","onUpdateCard","refcurrentQuestionParty","refParty","getParty","party","currentQuestionInfo","prevQuestionInfo","nextQuestionInfo","Landing","AppRoutes","App","ReactDOM","StrictMode","GlobalContext","document","getElementById"],"mappings":"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","file":"static/js/main.574f6cba.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n    apiKey: \"AIzaSyBJmgMqOrcOQBg3-JvswwmqlLCvbIAIoeY\",\n    authDomain: \"cards-conversation-starters.firebaseapp.com\",\n    databaseURL: \"https://cards-conversation-starters.firebaseio.com\",\n    projectId: \"cards-conversation-starters\",\n    storageBucket: \"cards-conversation-starters.appspot.com\",\n    messagingSenderId: \"1037492872627\",\n    appId: \"1:1037492872627:web:9af0f2901b3655cb7357c6\",\n    measurementId: \"G-HSK36FCQYP\"\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const db = firebase.database();\nexport default firebase;","export function randomBetweenNumber(min, max) {\n    return Math.floor( (max - min + 1) * Math.random() + min )\n}\n\nexport function randomElementArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return arr[ randomId ]\n}\n\nexport function randomIdArray(arr) {\n    const randomId = randomBetweenNumber(0, arr.length - 1)\n    return randomId;\n}","import React, {useState, useReducer} from 'react';\n\n// Firebase\nimport firebase, { db } from '../services/firebase';\nimport { randomElementArray } from '../helpers/utils';\n\nexport const StateContext = React.createContext(null);\nexport const DispatchContext = React.createContext(null);\nexport const MethodContext = React.createContext(null);\n\nconst initialLanguages = {\n    current: 'en',\n    actives: {},\n    all: {}\n}\n\nfunction languageReducer(state, action) {\n    switch( action.type ) {\n        case \"CURRENT\":\n            return {\n                ...state,\n                current: action.payload\n            }\n\n        case \"ACTIVES\":\n            return {\n                ...state,\n                actives: action.payload\n            }\n        \n        case \"ALL\":\n            return {\n                ...state,\n                all: action.payload\n            }\n        case 'UPDATE': {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default: return state;\n    }\n}\n\nconst initialTopics = {\n    all: {},\n    normalized: [],\n    normalizedMap: {},\n}\n\nfunction topicsReducer(state, action) {\n    switch( action.type ) {\n        case \"ALL\":\n            return {\n                ...state,\n                all: action.payload\n            }\n\n        case \"NORMALIZED\":\n            return {\n                ...state,\n                normalized: action.payload\n            }\n        \n        case \"NORMALIZED_MAP\":\n            return {\n                ...state,\n                normalizedMap: action.payload\n            }\n\n        case 'UPDATE': {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n\n        default: return state;\n    }\n}\n\nconst initialDifficulties = {\n    all: {},\n    normalized: [],\n    normalizedMap: {},\n}\n\nfunction difficultiesReducer(state, action) {\n    switch( action.type ) {\n        case \"ALL\":\n            return {\n                ...state,\n                all: action.payload\n            }\n\n        case \"NORMALIZED\":\n            return {\n                ...state,\n                normalized: action.payload\n            }\n        \n        case \"NORMALIZED_MAP\":\n            return {\n                ...state,\n                normalizedMap: action.payload\n            }\n\n        case 'UPDATE':\n            return {\n                ...state,\n                ...action.payload\n            }\n        \n        default: return state;\n    }\n}\n\nconst initialQuestions = {\n    all: {},\n    translations: {},\n    normalized: [],\n    normalizedMap: {},\n}\n\nfunction questionsReducer(state, action) {\n    switch( action.type ) {\n        case \"ALL\":\n            return {\n                ...state,\n                all: action.payload\n            }\n\n        case \"TRANSLATIONS\":\n            return {\n                ...state,\n                translations: action.payload\n            }\n\n        case \"NORMALIZED\":\n            return {\n                ...state,\n                normalized: action.payload\n            }\n        \n        case \"NORMALIZED_MAP\":\n            return {\n                ...state,\n                normalizedMap: action.payload\n            }\n\n        case 'UPDATE': {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n\n        default: return state;\n    }\n}\n\nconst initialCard = {\n    question: '',\n    difficulty: {},\n    topic: {},\n}\n\nfunction cardReducer(state, action) {\n    switch( action.type ) {\n        case \"QUESTION\":\n            return {\n                ...state,\n                question: action.payload\n            }\n\n        case \"DIFFICULTY\":\n            return {\n                ...state,\n                difficulty: action.payload\n            }\n\n        case \"TOPIC\":\n            return {\n                ...state,\n                topic: action.payload\n            }\n\n        case 'UPDATE': {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        \n        default: return state;\n    }\n}\n\nconst initialAdmin = {\n    appMain: {},\n    adminCardsMap: {},\n    adminTopicsMap: {},\n    adminDifficultiesMap: {},\n    adminCards: [],\n    adminTopics: [],\n    adminDifficulties: []\n}\n\nfunction reducerAdmin (state, action) {\n    switch (action.type) {\n        case 'ADMIN_CARDS_MAP':\n            \n            return {\n                ...state,\n                adminCardsMap: action.payload\n            };\n\n        case 'ADMIN_CARDS':\n            \n            return {\n                ...state,\n                adminCards: action.payload\n            };\n        \n        case 'ADMIN_TOPICS_MAP':\n            \n            return {\n                ...state,\n                adminTopicsMap: action.payload\n            };\n        \n        case 'ADMIN_TOPICS':\n            \n            return {\n                ...state,\n                adminTopics: action.payload\n            };\n        \n        case 'ADMIN_DIFFICULTIES_MAP':\n            \n            return {\n                ...state,\n                adminDifficultiesMap: action.payload\n            };\n    \n        \n        case 'ADMIN_DIFFICULTIES':\n            \n            return {\n                ...state,\n                adminDifficulties: action.payload\n            };\n    \n        default: return state;\n    }\n}\n\nfunction GlobalContextProvider({children}) {\n    \n    const [dataIsReady, setDataIsReady] = useState(false);\n    const [normalizedDataIsReady, setNormalizedDataIsReady] = useState(false);\n    const [history, setHistory] = useState();\n    \n    const [languages, dispatchLanguages] = useReducer(languageReducer, initialLanguages);\n    const [questions, dispatchQuestions] = useReducer(questionsReducer, initialQuestions);\n    const [topics, dispatchTopics] = useReducer(topicsReducer, initialTopics);\n    const [difficulties, dispatchDifficulties] = useReducer(difficultiesReducer, initialDifficulties);\n    const [card, dispatchCard] = useReducer(cardReducer, initialCard);\n\n    const [admin, dispatchAdmin] = useReducer(reducerAdmin, initialAdmin);\n\n    React.useEffect(function connectLanguages() {\n        const refLanguages = db.ref(\"languages\");\n    \n        refLanguages.on(\"value\",\n        getLanguages,\n        function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        });\n    \n        function getLanguages(snapshot) {\n            const languages = snapshot.val();\n            dispatchLanguages({\n                type: 'UPDATE',\n                payload: {\n                    actives: languages.actives,\n                    all: languages.isoLangs,\n                }\n            })\n        }\n    \n        return function disconnectLanguages() {\n          refLanguages.off(\"value\", getLanguages);\n        }\n    \n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\n    React.useEffect( function connectQuestions() {\n        const refMainData = db.ref('app/main');\n\n        function getMainData(snapshot) {\n            const data = snapshot.val();\n            dispatchQuestions({type: 'ALL', payload: data.questions});\n        }\n\n        refMainData.on(\"value\",\n            getMainData,\n            (errorObject) => {\n                console.log(\"The read failed: \" + errorObject.code);\n            }\n        )\n\n        return function disconnectQuestions() {\n            refMainData.off('value', getMainData);\n        }\n    }, [])\n    \n    React.useEffect(function connectTranslations() {\n        const refDataLanguage = db.ref(`app/${languages.current}`);\n\n        function getData(snapshot) {\n            const data = snapshot.val();\n            dispatchQuestions({type: 'TRANSLATIONS', payload: data.questions});\n\n            dispatchTopics({\n                type: 'ALL',\n                payload: data.topics\n            });\n\n            \n            dispatchDifficulties({\n                type: 'ALL',\n                payload: data.difficulties\n            });\n            \n            dispatchCard({\n                type: 'UPDATE',\n                payload: {\n                    topic: initialFilter(data.topics),\n                    difficulty: initialFilter(data.difficulties),\n                }\n            });\n        }\n\n        refDataLanguage.on(\"value\",\n            getData,\n            (errorObject) => {\n                console.log(\"The read failed: \" + errorObject.code);\n            }\n        )\n\n        return function disconnectTranslations() {\n            refDataLanguage.off(\"value\", getData);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [languages.current])\n\n    React.useEffect(function normalizeQuestions() {\n        if (dataIsReady && Object.entries(card.topic).length > 0 && Object.entries(card.difficulty).length > 0) {\n            let normalizedQuestions = [];\n            let normalizedQuestionsMap = {};\n\n            for (const questionId in questions.translations) {\n                const question = questions.all[questionId];\n                if (card.topic[question.topicId] && card.difficulty[question.difficulty]) {\n                    normalizedQuestions.push({\n                        ...question,\n                        question: questions.translations[questionId].question,\n                        questionId: questionId\n                    })\n                }\n            }\n\n            normalizedQuestions.sort(function (a, b) {\n                if (topics.all[a.topicId].name > topics.all[b.topicId].name) {\n                    return 1;\n                }\n                if (topics.all[a.topicId].name < topics.all[b.topicId].name) {\n                    return -1;\n                }\n                // a must be equal to b\n                return 0;\n            });\n\n            normalizedQuestions.forEach((value, index) => {\n                value.index = index;\n                normalizedQuestionsMap[value.questionId] = {\n                    ...value,\n                    index\n                };\n            });\n\n            dispatchQuestions({\n                type: 'UPDATE',\n                payload: {\n                    normalized: normalizedQuestions,\n                    normalizedMap: normalizedQuestionsMap\n                }\n            });\n        }\n\n    }, [card.difficulty, card.topic, dataIsReady, questions.all, questions.translations, topics.all]);\n\n    React.useEffect(function normalizeTopics() {\n        if (dataIsReady) {\n            let normalizedTopics = [];\n            let normalizedTopicsMap = {};\n\n            for (const topicId in topics.all) {\n                const topic = topics.all[topicId];\n                normalizedTopics.push({\n                    ...topic,\n                    id: topicId,\n                });\n            }\n\n            normalizedTopics.sort(function (a, b) {\n                if (a.name > b.name) {\n                    return 1;\n                }\n                if (a.name < b.name) {\n                    return -1;\n                }\n                // a must be equal to b\n                return 0;\n            });\n\n            normalizedTopics.forEach((value, index) => {\n                value.index = index;\n                normalizedTopicsMap[value.id] = {\n                    ...value,\n                    idNormalized: index,\n                };\n            });\n\n            dispatchTopics({\n                type: 'UPDATE',\n                payload: {\n                    normalized: normalizedTopics,\n                    normalizedMap: normalizedTopicsMap\n                }\n            })\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [topics.all, dataIsReady]);\n    \n    React.useEffect(function checkIfDataIsReady() {\n        const condition = (\n            Object.values(languages.all).length > 0 &&\n            Object.values(questions.translations).length > 0 &&\n            Object.values(questions.all).length > 0 &&\n            Object.values(topics.all).length > 0 &&\n            Object.values(difficulties.all).length > 0\n        );\n\n        if (condition) {\n            setDataIsReady(true)\n        } else {\n            setDataIsReady(false)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [difficulties.all, languages.all, questions.translations, questions.all, topics.all]);\n\n    React.useEffect( function checkIfNormalizedDataIsReady() {\n        const condition = (\n          Object.entries(questions.normalized).length > 0 &&\n          Object.entries(questions.normalizedMap).length > 0 &&\n          Object.entries(topics.normalized).length > 0 &&\n          Object.entries(topics.normalizedMap).length > 0 &&\n          Object.entries(difficulties.normalized).length > 0 &&\n          Object.entries(difficulties.normalizedMap).length > 0\n        );\n    \n        if(condition) {\n          setNormalizedDataIsReady(true);\n        } else {\n          setNormalizedDataIsReady(false);\n        }\n    \n      },[questions.normalized, questions.normalizedMap, difficulties.normalized, difficulties.normalizedMap, topics.normalized, topics.normalizedMap]);\n\n    React.useEffect(function normalizeDifficulties() {\n        if (dataIsReady) {\n            let normalizedDifficulties = [];\n            let normalizedDifficultiesMap = {};\n\n            for (const difficultyId in difficulties.all) {\n                const topic = difficulties.all[difficultyId];\n                normalizedDifficulties.push({\n                    ...topic,\n                    id: difficultyId,\n                });\n            }\n\n            normalizedDifficulties.sort(function (a, b) {\n                if (a.id > b.id) {\n                    return 1;\n                }\n                if (a.id < b.id) {\n                    return -1;\n                }\n                // a must be equal to b\n                return 0;\n            });\n\n            normalizedDifficulties.forEach((value, index) => {\n                value.index = index;\n                normalizedDifficultiesMap[value.id] = {\n                    ...value,\n                    idNormalized: index,\n                };\n            });\n\n            dispatchDifficulties({\n                type: 'UPDATE',\n                payload: {\n                    normalized: normalizedDifficulties,\n                    normalizedMap: normalizedDifficultiesMap\n                }\n            })\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [difficulties.all, dataIsReady]);\n\n  function initialFilter(elements) {\n      const result = {};\n\n      for (const id in elements) {\n          if (elements.hasOwnProperty(id)) {\n              result[id] = true;\n          }\n      }\n\n      return result;\n  }\n\n    function resetData() {\n        if (dataIsReady) {\n            dispatchCard({\n                type: 'UPDATE',\n                payload: {\n                    question: '',\n                    difficulty: initialFilter(difficulties.all),\n                    topic: initialFilter(topics.all)\n                }\n            });\n        }\n    }\n\n    function createNewParty() {\n        resetData();\n        if (normalizedDataIsReady) {\n            const refParties = db.ref(`parties`);\n            const newRefParty = refParties.push();\n            history.push(`/room/${newRefParty.key}`)\n            let newQuestion = randomElementArray(questions.normalized);\n\n            newRefParty.set({\n                currentQuestion: newQuestion.questionId,\n                difficulties: initialFilter(difficulties.all),\n                topics: initialFilter(topics.all),\n                timeStamp: firebase.database.ServerValue.TIMESTAMP\n            });\n        }\n    }\n\n    function randomCard() {\n        resetData();\n        history.push(`/random`);\n    }\n\n    const state = {\n        languages,\n        questions,\n        topics,\n        difficulties,\n        card,\n        dataIsReady,\n        normalizedDataIsReady,\n        admin,\n    }\n\n    const dispatch = {\n        dispatchLanguages,\n        dispatchQuestions,\n        dispatchTopics,\n        dispatchDifficulties,\n        dispatchCard,\n        setDataIsReady,\n        setNormalizedDataIsReady,\n        setHistory,\n        dispatchAdmin,\n    }\n\n    const methods = {\n        randomCard,\n        initialFilter,\n        createNewParty,\n    }\n\n    return (\n        <MethodContext.Provider value={methods}>\n            <DispatchContext.Provider value={dispatch}>\n                <StateContext.Provider value={state}>\n                    {children}\n                </StateContext.Provider>\n            </DispatchContext.Provider>\n        </MethodContext.Provider>\n    )\n}\n\nexport default GlobalContextProvider\n","// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft =\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight =\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom =\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nexport default {\n  draw\n};\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","const checked = (value, options) => {\n  if (value !== true) {\n    return options.message || 'must be checked';\n  }\n};\n\nexport default {\n  checked\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    display: 'flex',\n    flexBasis: 420\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  input: {\n    flexGrow: 1,\n    fontSize: '14px',\n    lineHeight: '16px',\n    letterSpacing: '-0.05px'\n  }\n}));\n\nconst SearchInput = props => {\n  const { className, onChange, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n      style={style}\n    >\n      <SearchIcon className={classes.icon} />\n      <Input\n        {...rest}\n        className={classes.input}\n        disableUnderline\n        onChange={onChange}\n      />\n    </Paper>\n  );\n};\n\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  sm: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  md: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  lg: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  neutral: {\n    backgroundColor: theme.palette.neutral\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: theme.palette.info.main\n  },\n  warning: {\n    backgroundColor: theme.palette.warning.main\n  },\n  danger: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <span\n      {...rest}\n      className={clsx(\n        {\n          [classes.root]: true,\n          [classes[size]]: size,\n          [classes[color]]: color\n        },\n        className\n      )}\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'neutral',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'danger'\n  ]),\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'md',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst RouteWithLayout = props => {\n  const { layout: Layout, component: Component, ...rest } = props;\n\n  return (\n    <Route {...rest}>\n      <Layout>\n        <Component/>\n      </Layout>\n    </Route>\n  );\n};\n\nRouteWithLayout.propTypes = {\n  component: PropTypes.any.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          href=\"https://devias.io/\"\n          target=\"_blank\"\n        >\n          Devias IO\n        </Link>\n        . 2019\n      </Typography>\n      <Typography variant=\"caption\">\n        Created with love for the environment. By designers and developers who\n        love to work together in offices!\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: 'fit-content'\n  },\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst Profile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'Shen Zhi',\n    avatar: '/images/avatars/avatar_11.png',\n    bio: 'Brain Director'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        className={classes.avatar}\n        component={RouterLink}\n        src={user.avatar}\n        to=\"/settings\"\n      />\n      <Typography\n        className={classes.name}\n        variant=\"h4\"\n      >\n        {user.name}\n      </Typography>\n      <Typography variant=\"body2\">{user.bio}</Typography>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {pages.map(page => (\n        <ListItem\n          className={classes.item}\n          disableGutters\n          key={page.title}\n        >\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}\n          >\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, Drawer } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { Profile, SidebarNav, UpgradePlan } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: 240,\n    [theme.breakpoints.up('lg')]: {\n      marginTop: 64,\n      height: 'calc(100% - 64px)'\n    }\n  },\n  root: {\n    backgroundColor: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    padding: theme.spacing(2)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  nav: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Sidebar = props => {\n  const { open, variant, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const pages = [\n    {\n      title: 'Dashboard',\n      href: '/admin/dashboard',\n      icon: <DashboardIcon />\n    },\n    {\n      title: 'Users',\n      href: '/admin/users',\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Cards',\n      href: '/admin/cards',\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Topics',\n      href: '/admin/topics',\n      icon: <PeopleIcon />\n    },\n    {\n      title: 'Authentication',\n      href: '/sign-in',\n      icon: <LockOpenIcon />\n    },\n    {\n      title: 'Account',\n      href: '/admin/account',\n      icon: <AccountBoxIcon />\n    },\n    {\n      title: 'Settings',\n      href: '/settings',\n      icon: <SettingsIcon />\n    }\n  ];\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <Profile />\n        <Divider className={classes.divider} />\n        <SidebarNav\n          className={classes.nav}\n          pages={pages}\n        />\n      </div>\n    </Drawer>\n  );\n};\n\nSidebar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: colors.grey[50]\n  },\n  media: {\n    paddingTop: theme.spacing(2),\n    height: 80,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    padding: theme.spacing(1, 2),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst UpgradePlan = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Upgrade to PRO\"\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h6\"\n        >\n          Upgrade to PRO\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n        >\n          Upgrade to Devias Kit PRO and get even more components\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component=\"a\"\n          href=\"https://devias.io/products/devias-kit-pro\"\n          variant=\"contained\"\n        >\n          Upgrade\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUpgradePlan.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UpgradePlan;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src={process.env.PUBLIC_URL + \"/images/logos/logo--white.svg\"}\n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            className={classes.signOutButton}\n            color=\"inherit\"\n          >\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onSidebarOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}\n    >\n      <Topbar onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none'\n  }\n}));\n\nconst Topbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n      position=\"fixed\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img\n            alt=\"Logo\"\n            src={process.env.PUBLIC_URL + \"/images/logos/logo--white.svg\"}\n          />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Topbar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 64,\n    height: '100%'\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Minimal = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Topbar />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nMinimal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\nexport default Minimal;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    firstName: 'Shen',\n    lastName: 'Zhi',\n    email: 'shen.zhi@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const states = [\n    {\n      value: 'alabama',\n      label: 'Alabama'\n    },\n    {\n      value: 'new-york',\n      label: 'New York'\n    },\n    {\n      value: 'san-francisco',\n      label: 'San Francisco'\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form\n        autoComplete=\"off\"\n        noValidate\n      >\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                margin=\"dense\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                margin=\"dense\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map(option => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                margin=\"dense\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AccountProfile = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const user = {\n    name: 'Shen Zhi',\n    city: 'Los Angeles',\n    country: 'USA',\n    timezone: 'GTM-7',\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography\n              gutterBottom\n              variant=\"h2\"\n            >\n              John Doe\n            </Typography>\n            <Typography\n              className={classes.locationText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.city}, {user.country}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {moment().format('hh:mm A')} ({user.timezone})\n            </Typography>\n          </div>\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n        </div>\n        <div className={classes.progress}>\n          <Typography variant=\"body1\">Profile Completeness: 70%</Typography>\n          <LinearProgress\n            value={70}\n            variant=\"determinate\"\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.uploadButton}\n          color=\"primary\"\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n        <Button variant=\"text\">Remove picture</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AccountProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { AccountProfile, AccountDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={4}\n          xs={12}\n        >\n          <AccountProfile />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={6}\n          xl={8}\n          xs={12}\n        >\n          <AccountDetails />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.error.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.error.dark\n  },\n  differenceValue: {\n    color: theme.palette.error.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              BUDGET\n            </Typography>\n            <Typography variant=\"h3\">$24,000</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport mockData from './data';\nimport { StatusBullet } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst LatestOrders = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [orders] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            New entry\n          </Button>\n        }\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Ref</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                      enterDelay={300}\n                      title=\"Sort\"\n                    >\n                      <TableSortLabel\n                        active\n                        direction=\"desc\"\n                      >\n                        Date\n                      </TableSortLabel>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map(order => (\n                  <TableRow\n                    hover\n                    key={order.id}\n                  >\n                    <TableCell>{order.ref}</TableCell>\n                    <TableCell>{order.customer.name}</TableCell>\n                    <TableCell>\n                      {moment(order.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.statusContainer}>\n                        <StatusBullet\n                          className={classes.status}\n                          color={statusColors[order.status]}\n                          size=\"sm\"\n                        />\n                        {order.status}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import uuid from 'uuid/v1';\nimport moment from 'moment';\n\nexport default [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  IconButton\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport mockData from './data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    padding: 0\n  },\n  image: {\n    height: 48,\n    width: 48\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestProducts = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest products\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <List>\n          {products.map((product, i) => (\n            <ListItem\n              divider={i < products.length - 1}\n              key={product.id}\n            >\n              <ListItemAvatar>\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src={product.imageUrl}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={product.name}\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\n              />\n              <IconButton\n                edge=\"end\"\n                size=\"small\"\n              >\n                <MoreVertIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import palette from '../../../../theme/palette';\n\nexport const data = {\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\n  datasets: [\n    {\n      label: 'This year',\n      backgroundColor: palette.primary.main,\n      data: [18, 5, 19, 27, 29, 19, 20]\n    },\n    {\n      label: 'Last year',\n      backgroundColor: palette.neutral,\n      data: [11, 20, 12, 29, 30, 25, 13]\n    }\n  ]\n};\n\nexport const options = {\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: false,\n  legend: { display: false },\n  cornerRadius: 20,\n  tooltips: {\n    enabled: true,\n    mode: 'index',\n    intersect: false,\n    borderWidth: 1,\n    borderColor: palette.divider,\n    backgroundColor: palette.white,\n    titleFontColor: palette.text.primary,\n    bodyFontColor: palette.text.secondary,\n    footerFontColor: palette.text.secondary\n  },\n  layout: { padding: 0 },\n  scales: {\n    xAxes: [\n      {\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport { data, options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestSales = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days <ArrowDropDownIcon />\n          </Button>\n        }\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Bar\n            data={data}\n            options={options}\n          />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nLatestSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestSales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  LinearProgress\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  progress: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst TasksProgress = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TASKS PROGRESS\n            </Typography>\n            <Typography variant=\"h3\">75.5%</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <LinearProgress\n          className={classes.progress}\n          value={75.5}\n          variant=\"determinate\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.white,\n    color: theme.palette.primary.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst TotalProfit = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"inherit\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL PROFIT\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"h3\"\n            >\n              $23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalUsers = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid item>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n            >\n              TOTAL USERS\n            </Typography>\n            <Typography variant=\"h3\">1,600</Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon className={classes.icon} />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <div className={classes.difference}>\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            className={classes.caption}\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalUsers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalUsers;\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          theme.palette.primary.main,\n          theme.palette.error.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: '63',\n      icon: <LaptopMacIcon />,\n      color: theme.palette.primary.main\n    },\n    {\n      title: 'Tablet',\n      value: '15',\n      icon: <TabletMacIcon />,\n      color: theme.palette.error.main\n    },\n    {\n      title: 'Mobile',\n      value: '23',\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton size=\"small\">\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Users By Device\"\n      />\n      <Divider />\n      <CardContent>\n        <div className={classes.chartContainer}>\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </div>\n        <div className={classes.stats}>\n          {devices.map(device => (\n            <div\n              className={classes.device}\n              key={device.title}\n            >\n              <span className={classes.deviceIcon}>{device.icon}</span>\n              <Typography variant=\"body1\">{device.title}</Typography>\n              <Typography\n                style={{ color: device.color }}\n                variant=\"h2\"\n              >\n                {device.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport {\n  Budget,\n  TotalUsers,\n  TasksProgress,\n  TotalProfit,\n  LatestSales,\n  UsersByDevice,\n  LatestProducts,\n  LatestOrders\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <Budget />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TotalUsers />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TasksProgress />\n        </Grid>\n        <Grid\n          item\n          lg={3}\n          sm={6}\n          xl={3}\n          xs={12}\n        >\n          <TotalProfit />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestSales />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}\n        >\n          <UsersByDevice />\n        </Grid>\n        <Grid\n          item\n          lg={4}\n          md={6}\n          xl={3}\n          xs={12}\n        >\n          <LatestProducts />\n        </Grid>\n        <Grid\n          item\n          lg={8}\n          md={12}\n          xl={9}\n          xs={12}\n        >\n          <LatestOrders />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  content: {\n    paddingTop: 150,\n    textAlign: 'center'\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <Typography variant=\"h1\">\n              404: The page you are looking for isn’t here\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </Typography>\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/images/undraw_page_not_found_su7k.svg\"\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  Divider\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  imageContainer: {\n    height: 64,\n    width: 64,\n    margin: '0 auto',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: '5px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: '100%'\n  },\n  statsItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  statsIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = props => {\n  const { className, product, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <div className={classes.imageContainer}>\n          <img\n            alt=\"Product\"\n            className={classes.image}\n            src={product.imageUrl}\n          />\n        </div>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"body1\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Grid\n          container\n          justify=\"space-between\"\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon className={classes.statsIcon} />\n            <Typography\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {product.totalDownloads} Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nimport { SearchInput } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductsToolbar = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n        <Button className={classes.importButton}>Import</Button>\n        <Button className={classes.exportButton}>Export</Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </div>\n      <div className={classes.row}>\n        <SearchInput\n          className={classes.searchInput}\n          placeholder=\"Search product\"\n        />\n      </div>\n    </div>\n  );\n};\n\nProductsToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProductsToolbar;\n","import uuid from 'uuid/v1';\n\nexport default [\n  {\n    id: uuid(),\n    title: 'Dropbox',\n    description:\n      'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    imageUrl: '/images/products/product_1.png',\n    totalDownloads: '594',\n    updatedAt: '27/03/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Medium Corporation',\n    description:\n      'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    imageUrl: '/images/products/product_2.png',\n    totalDownloads: '625',\n    createdAt: '31/03/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Slack',\n    description:\n      'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    imageUrl: '/images/products/product_3.png',\n    totalDownloads: '857',\n    createdAt: '03/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Lyft',\n    description:\n      'Lyft is an on-demand transportation company based in San Francisco, California.',\n    imageUrl: '/images/products/product_4.png',\n    totalDownloads: '406',\n    createdAt: '04/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'GitHub',\n    description:\n      'GitHub is a web-based hosting service for version control of code using Git.',\n    imageUrl: '/images/products/product_5.png',\n    totalDownloads: '835',\n    createdAt: '04/04/2019'\n  },\n  {\n    id: uuid(),\n    title: 'Squarespace',\n    description:\n      'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    imageUrl: '/images/products/product_6.png',\n    totalDownloads: '835',\n    createdAt: '04/04/2019'\n  }\n];\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { IconButton, Grid, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport { ProductsToolbar, ProductCard } from './components';\nimport mockData from './data';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  pagination: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst ProductList = () => {\n  const classes = useStyles();\n\n  const [products] = useState(mockData);\n\n  return (\n    <div className={classes.root}>\n      <ProductsToolbar />\n      <div className={classes.content}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {products.map(product => (\n            <Grid\n              item\n              key={product.id}\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <ProductCard product={product} />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      <div className={classes.pagination}>\n        <Typography variant=\"caption\">1-6 of 20</Typography>\n        <IconButton>\n          <ChevronLeftIcon />\n        </IconButton>\n        <IconButton>\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductList;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction Alert(props) {\n    const {\n        onConfirm = ()=>{},\n        title,\n        children,\n        open,\n        setOpen,\n    } = props;\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    function handleConfirm() {\n        onConfirm();\n        handleClose();\n    }\n\n  \n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"dialog-title\"\n          maxWidth='sm'\n        >\n          {title && \n            <DialogTitle id=\"dialog-title\">\n                {title}\n            </DialogTitle>\n          }\n          <DialogContent>\n            <DialogContentText>\n              {children}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleConfirm} color=\"primary\">\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n}\n\nAlert.propTypes = {\n    onConfirm: PropTypes.func,\n    open: PropTypes.bool.isRequired,\n    setOpen: PropTypes.func.isRequired,\n};\n\nexport default Alert\n","import React from 'react';\nimport clsx from 'clsx';\nimport { StateContext } from '../../../../../../Context/GlobalContext';\nimport AlertComponent from '../../../../../../components/Alert';\n\n// Material-UI\nimport Container from '@material-ui/core/Container';\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Input\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n// Icons\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n// WYSIWYG\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n/* FIREBASE */\nimport { db } from '../../../../../../services/firebase';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        marginTop: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n    formControlButtons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'row',\n    },\n    editorToolbarClassName: {\n        borderBottom: '1px solid gray',\n        marginBottom: 0\n    },\n    editorWrapperClassName: {\n        border: '1px solid gray',\n        backgroundColor: 'white',\n        marginTop: theme.spacing(1)\n    },\n    editorClassName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        minHeight: '150px',\n    },\n    textCenter: {\n        textAlign: 'center'\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n    },\n    danger: {\n        backgroundColor: 'rgb(220, 0, 78)',\n        '&:hover': {\n            backgroundColor: 'rgb(154, 0, 54)'\n        }\n    }\n}));\n\nfunction Edit(props) {\n    const {\n        setIsEdit,\n        setReset,\n    } = props;\n    const [topicId, setTopicId] = React.useState(props.topic.topicId);\n    const isEdit = !!topicId;\n    const classes = useStyles();\n    const {languages} = React.useContext(StateContext);\n    \n    const [editor, setEditor] = React.useState();\n    const [topic, setTopic] = React.useState({});\n    const [topicChanges, setTopicChanges] = React.useState({});\n    const [selectedLanguage, setSelectedLanguage] = React.useState(props.topic.language + '' || '');\n    const [btnDisabled, setBtnDisabled] = React.useState(true);\n    const [btnRemoveDisabled, setBtnRemoveDisabled] = React.useState(true);\n\n    // Alert\n    const [openAlertOnDelete, setOpenAlertOnDelete] = React.useState(false);\n\n    function reset() {\n        setSelectedLanguage('');\n        setTopic({});\n        setTopicChanges({});\n        setEditor('');\n    }\n    \n    function resetNew() {\n        reset();\n        setTopicId(undefined);\n    }\n\n    React.useEffect(function initializeCard() {\n        setTopicId(props.topic.topicId);\n    }, [props.topic.topicId]);\n\n    React.useEffect(function initialize() {\n        setReset(()=>resetNew);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(function connectFirstLanguageTopic() {\n        if( isEdit ) {\n\n            const refCard = db.ref(`app/main/topics/${topicId}`);\n\n            refCard.on(\"value\",\n                getTopicAndLanguage,\n                (errorObject) => {\n                    console.log(\"The read failed: \" + errorObject.code);\n                }\n            )\n\n            function getTopicAndLanguage(snapshot) {\n                const topic = snapshot.val();\n                if (topic) {\n                    const firstLanguage = selectedLanguage || Object.keys(topic.languages).sort()[0];\n                    setTopic({\n                        ...topic,\n                        language: firstLanguage,\n                    });\n\n                    setTopicChanges({\n                        ...topic,\n                        language: firstLanguage\n                    })\n\n                    setSelectedLanguage(firstLanguage);\n                } else {\n                    reset();\n                }\n            }\n\n            return function disconnectCard() {\n                refCard.off(\"value\", getTopicAndLanguage);\n            }\n        } else {\n            reset();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [topicId]);\n    \n    React.useEffect(function connectTopicTranslations() {\n        const existLanguageOnCard = topic.languages && selectedLanguage && topic.languages[selectedLanguage];\n        let languageTopic;\n        if( existLanguageOnCard ) {\n            setTopic((topic)=>({\n                ...topic,\n                language: selectedLanguage,\n            }));\n\n            languageTopic = selectedLanguage\n\n        } else if( selectedLanguage ) {\n            languageTopic = topic.language;\n        }\n\n        const refTopic = db.ref(`app/${languageTopic}/topics/${topicId}`);\n        \n        refTopic.on(\"value\", getTopic);\n\n        function getTopic(snapshot) {\n            const topic = snapshot.val();\n\n            if(topic) {\n                setTopic((prevCard)=>({\n                    ...prevCard,\n                    help: topic.help,\n                    name: topic.name\n                }));\n                \n                setTopicChanges((prevCard)=>({\n                    ...prevCard,\n                    help: topic.help,\n                    name: topic.name\n                }));\n                \n                setEditor(convertToEditorState(topic.help));\n            }\n        }\n        \n\n        return function disconnectCardTranslations() {\n            refTopic.off(\"value\", getTopic);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLanguage, topicId, topic.language, topic.languages && topic.languages[selectedLanguage]]);\n\n    React.useEffect( function lookingForChanges() {\n        if(topic.name !== topicChanges.name) {\n            setBtnDisabled(false);\n            setBtnRemoveDisabled(true);\n        }\n\n        else if(topic.help !== topicChanges.help ) {\n            setBtnDisabled(false);\n            setBtnRemoveDisabled(true);\n        }\n\n        else {\n            setBtnDisabled(true);\n\n            if(selectedLanguage === topic.language) {\n                setBtnRemoveDisabled(false);\n            } else {\n                setBtnRemoveDisabled(true);\n            }\n        }\n    }, [topic.name, topicChanges.name, selectedLanguage, topic.language, topic.help, topicChanges.help]);\n\n    // Handlers\n    function handleChange(e) {\n        const type = e.target.name;\n\n        if(type === 'language') {\n            const value = e.target.value;\n            setSelectedLanguage(value);\n        }\n    }\n    \n    function handleInputChange(e) {\n        const type = e.target.getAttribute('name');\n        const value = e.target.value;\n        \n        if(type === 'name') {\n            setTopic(()=> ({\n                ...topic,\n                name: value, \n            }))\n        }\n    }\n\n    function onEditorStateChange(editorState) {\n        const rawContentState = convertToRaw(editorState.getCurrentContent());\n\n        setTopic((topic) =>({\n            ...topic,\n            help: draftToHtml(rawContentState)\n        }));\n        setEditor(editorState);\n    }\n\n    function onClickBtn() {\n        setBtnDisabled(true);\n        const isNewLanguageOnEdit = isEdit && (selectedLanguage !== topic.language);\n\n        if( isNewLanguageOnEdit ) {\n            const refTopicLanguages = db.ref(`app/main/topics/${topicId}/languages`);\n\n            // Setting topic\n            db.ref(`app/${selectedLanguage}/topics/${topicId}/name`).set(topic.name);\n            \n            // Setting Help\n            db.ref(`app/${selectedLanguage}/topics/${topicId}/help`).set(topic.help);\n\n            // Setting new active language in the app\n            const refLanguages = db.ref(`languages/actives`);\n            refLanguages.update({\n                [selectedLanguage]: true\n            });\n\n            // Setting new language in card\n            refTopicLanguages.update({\n                [selectedLanguage]: true,\n            });\n\n        } else if(isEdit) {\n            // Setting Topic\n            db.ref(`app/${topic.language}/topics/${topicId}/name`).set(topic.name);\n            \n            // Setting Help\n            db.ref(`app/${topic.language}/topics/${topicId}/help`).set(topic.help || '');\n        }\n\n        if( !isEdit ) {\n            // Setting Topic\n            const refTopic = db.ref(`app/main/topics`).push();\n            const topicId = refTopic.key;\n\n            const refTopicTranslation = db.ref(`app/${selectedLanguage}/topics/${topicId}`);\n            refTopicTranslation.child('name').set(topic.name);\n            refTopicTranslation.child('help').set(topic.help || '');\n\n            // Setting new active language in the app\n            const refLanguages = db.ref(`languages/actives`);\n            refLanguages.update({\n                [selectedLanguage]: true\n            })\n\n            // Setting new language in card\n            const refTopicLanguages = db.ref(`app/main/topics/${topicId}/languages`);\n            refTopicLanguages.update({\n                [selectedLanguage]: true,\n            });\n\n            setTopicId(topicId)\n        }\n\n        setSelectedLanguage(selectedLanguage);\n    }\n\n    async function onRemove() {\n        setBtnRemoveDisabled(true);\n\n        if(isEdit && (selectedLanguage === topic.language)) {\n            // Delete translation\n            const topicLanguage = selectedLanguage;\n            const topicLanguages = {...topic.languages};\n\n            checkLanguages();\n\n            const existOtherLanguageOnCard = Object.keys(topicLanguages).filter((languageId)=>languageId !== topicLanguage).length > 0;\n            if(existOtherLanguageOnCard) {\n                const otherLanguages = Object.keys(topicLanguages).filter((languageId)=>languageId!==topicLanguage);\n                setTopicId(topicId);\n                setSelectedLanguage( otherLanguages['en'] ? 'en' : otherLanguages[0] );\n            } else {\n                setIsEdit(false);\n                \n                // Remove Card from main\n                db.ref('app').update({\n                    [`main/topics/${topicId}`]: null,\n                });\n            }\n\n\n            db.ref('app').update({\n                [`main/topics/${topicId}/languages/${topicLanguage}`]: null,\n                [`${topicLanguage}/topics/${topicId}`]: null,\n            })\n\n            async function checkLanguages() {\n                const refTopicsMain = db.ref(`app/main`);\n                const language = topicLanguage;\n\n                const snapshot = await refTopicsMain.once('value');\n                let languageExistInDb = false;\n                \n                if(snapshot) {\n                    const main = snapshot.val();\n\n                    // Checking on topics\n                    const {topics} = main;\n\n                    for (const id in topics) {\n                        const topic = topics[id];\n\n                        if(id !== topicId && topic.languages) {\n                            if( topic.languages[language]) {\n                                languageExistInDb = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    // Checking on cards\n                    const {questions: cards} = main;\n\n                    if(!languageExistInDb) {\n                        for (const id in cards) {\n                            const card = cards[id];\n    \n                            if( card.languages[language]) {\n                                languageExistInDb = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    // Checking on difficulties\n                    const {difficulties} = main;\n\n                    if(!languageExistInDb) {\n                        for (const id in difficulties) {\n                            const difficulty = difficulties[id];\n    \n                            if( difficulty.languages[language]) {\n                                languageExistInDb = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    if(!languageExistInDb) {\n                        db.ref(`languages/actives`).update({\n                            [language]: null\n                        })\n                    }\n                } \n\n            }\n        }\n    }\n\n    function convertToEditorState(html) {\n        let editorState;\n        const contentBlock = htmlToDraft(html);\n\n        if (contentBlock) {\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            editorState = EditorState.createWithContent(contentState)\n        }\n\n        return editorState;\n    }\n\n    return (\n        <div className=\"edit\">\n            <Container className={classes.margin} maxWidth=\"sm\">\n                <h1 className={classes.textCenter}>Topics</h1>\n\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"language-select\">Language</InputLabel>\n                    <Select \n                        defaultValue=\"\"\n                        inputProps={{name: 'language', id: 'language-select'}}\n                        value={`${selectedLanguage || ''}`}\n                        onChange={handleChange}\n                    >\n                        {topic.languages && <ListSubheader><strong>ACTIVES</strong></ListSubheader>}\n                        {topic.languages && languages.all && Object.keys(topic.languages).sort().map( (languageId) => \n                            <MenuItem key={languageId} value={languageId}>\n                                {(languages.all[languageId]) &&\n                                    `${languages.all[languageId].nativeName} - ${languageId}`\n                                }\n                            </MenuItem>\n                        )}\n\n                        <ListSubheader><strong>NEW LANGUAGE</strong></ListSubheader>\n                        {languages.all && Object.keys(languages.all).filter((languageId)=>{\n                            return (topic.languages) ? !topic.languages.hasOwnProperty(languageId) : true;\n                        })\n                        .sort((a,b)=>{\n                            if (a.nativeName > b.nativeName) return 1;\n                            if (a.nativeName < b.nativeName) return -1;\n                            return 0;\n                        }).map((languageId)=> {\n                            let languageNativeName = languages.all[languageId].nativeName;\n                        return <MenuItem key={languageId} value={languageId}>{languageNativeName} - {languageId}</MenuItem>\n                        })}\n\n                    </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <TextField\n                        inputProps={{name: 'name', id: 'name-input'}}\n                        label=\"Topic\"\n                        value={topic.name || ''}\n                        onChange={handleInputChange}\n                    />\n                </FormControl>\n                \n                <FormControl className={classes.formControl}>\n                    <FormLabel style={{marginTop: '16px'}}>Help</FormLabel>\n                    <Editor\n                        editorState={editor}\n                        toolbarClassName={classes.editorToolbarClassName}\n                        wrapperClassName={classes.editorWrapperClassName}\n                        editorClassName={classes.editorClassName}\n                        onEditorStateChange={onEditorStateChange}\n                        toolbar={{\n                            options: ['inline', 'blockType', 'list', 'textAlign', 'colorPicker', 'link', 'embedded', 'emoji', 'image', 'remove', 'history'],\n                        }}\n                    />\n                </FormControl>\n\n                <FormControl className={clsx(classes.formControl, classes.formControlButtons)}>\n                    <Button onClick={onClickBtn} variant=\"contained\" disabled={btnDisabled} className={classes.button} color=\"primary\">\n                        {(isEdit) ?\n                                <>UPDATE <UpdateIcon style={{marginLeft: '0.4em'}}/></>\n                            :\n                                <>Add <AddIcon style={{marginLeft: '0.4em'}}/></>\n                        } \n                    </Button>\n                        {(isEdit) &&\n                            <Button onClick={()=>setOpenAlertOnDelete(true)} disabled={btnRemoveDisabled} variant=\"contained\" className={clsx(classes.button, classes.danger)} color=\"secondary\">\n                                DELETE <DeleteOutline style={{marginLeft: '0.4em'}}/>\n                            </Button>\n                        }\n                </FormControl>\n            </Container>\n            <AlertComponent\n                open={openAlertOnDelete}\n                setOpen={setOpenAlertOnDelete}\n                onConfirm={onRemove}\n            >\n                Are you sure you want to delete the topic with language \"{languages.all && languages.all[selectedLanguage] && languages.all[selectedLanguage].name} | {languages.all && languages.all[selectedLanguage] && languages.all[selectedLanguage].nativeName} | {selectedLanguage}\"?\n            </AlertComponent>\n        </div>\n    )\n}\n\nexport default Edit\n","import React, { useState, useContext } from 'react';\nimport { StateContext } from '../../../../../../Context/GlobalContext';\nimport EditComponent from '../Edit';\nimport AlertComponent from '../../../../../../components/Alert';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button} from '@material-ui/core';\n\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n/* Firebase */\nimport { db } from '../../../../../../services/firebase';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: 0\n    },\n    content: {\n        padding: 0\n    },\n    table: {\n        '& tr > *:first-child': {\n            paddingLeft: '1em'\n        }\n    },\n    inner: {\n        minWidth: 1050\n    },\n    nameContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    avatar: {\n        marginRight: theme.spacing(2)\n    },\n    actions: {\n        justifyContent: 'flex-end'\n    },\n    hide: {\n        display: 'none',\n    }\n}));\n\nconst Table = props => {\n    const { \n        isEdit,\n        setIsEdit,\n        topicToEdit,\n        setTopicToEdit,\n        setResetTopic,\n    } = props;\n    const { admin: { adminTopics } } = useContext(StateContext);\n\n    const classes = useStyles();\n    const {languages} = React.useContext(StateContext);\n    const [selectedRow, setSelectedRow] = useState(null);\n\n    // Alert on delete rows\n    const [topicsToDelete, setTopicsToDelete] = React.useState([]);\n    const [openAlertDeleteRows, setOpenAlertDeleteRows] = React.useState(false);\n\n    const [columns, setColumns] = useState([\n        { title: 'Topic', field: 'name' },\n        {\n            title: 'Help',\n            field: 'help',\n            width: '150',\n        },\n        { \n            title: 'Language',\n            field: 'language',\n            width: '150',\n        },\n        { \n            title: 'Actions',\n            field: 'action',\n            width: '150',\n        }\n\n    ]);\n\n    function removeTopic(topic) {\n        const {\n            topicId,\n            language,\n        } = topic;\n        \n        const languages = {...topic.languages}\n\n        checkLanguages();\n\n        const existOtherLanguageOnTopic = Object.keys(languages).filter((languageId)=>languageId !== language).length > 0;\n\n        if(!existOtherLanguageOnTopic) {\n            // Remove Card from main\n            db.ref('app').update({\n                [`main/topics/${topicId}`]: null,\n            });\n        }\n\n        db.ref('app').update({\n            [`main/topics/${topicId}/languages/${language}`]: null,\n            [`${language}/topics/${topicId}`]: null,\n        })\n\n        async function checkLanguages() {\n            const refMain = db.ref(`app/main`);\n\n            const snapshot = await refMain.once('value');\n            let languageExistInDb = false;\n            \n            if(snapshot) {\n                const main = snapshot.val();\n                const {topics} = main;\n\n                for (const id in topics) {\n                    const topic = topics[id];\n\n                    if(id !== topicId && topic.languages) {\n                        if( topic.languages[language]) {\n                            languageExistInDb = true;\n                            break;\n                        }\n                    }\n                }\n\n                // Checking on cards\n                const {questions: cards} = main;\n\n                if(!languageExistInDb) {\n                    for (const id in cards) {\n                        const card = cards[id];\n\n                        if( card.languages[language]) {\n                            languageExistInDb = true;\n                            break;\n                        }\n                    }\n                }\n\n                // Checking on difficulties\n                const {difficulties} = main;\n\n                if(!languageExistInDb) {\n                    for (const id in difficulties) {\n                        const difficulty = difficulties[id];\n\n                        if( difficulty.languages[language]) {\n                            languageExistInDb = true;\n                            break;\n                        }\n                    }\n                }\n\n                if(!languageExistInDb) {\n                    // Delete language from actives\n                    db.ref(`languages/actives`).update({\n                        [language]: null\n                    })\n                }\n            }\n\n        }\n    }\n\n    const [data, setData] = useState([]);\n\n    React.useEffect(function initializeColumns() {\n        setColumns([\n            {\n                title: 'Topic',\n                field: 'name'\n            }, {\n                title: 'Help',\n                field: 'help',\n            },\n            { \n                title: 'Language',\n                field: 'language',\n                width: '150',\n                render: (rowData) => {\n                    return <>\n                        {\n                            ( languages.all && languages.all[rowData.language] && languages.all[rowData.language].nativeName ) ||\n                            <Skeleton animation=\"wave\" />\n                        }\n                    </>\n                },\n            },\n            { \n                title: 'Actions',\n                field: 'action',\n                width: '150',\n                render: (rowData) => \n                    <Button\n                        onClick={()=>{\n                            setIsEdit(true);\n                            setTopicToEdit(rowData);\n                        }}\n                    >\n                        <Edit/>\n                    </Button>\n            }\n    \n        ])\n    }, [languages, setTopicToEdit, setIsEdit])\n\n    React.useEffect(function settingData() {\n        setData(adminTopics)\n    }, [adminTopics]);\n\n    function handleDeleteTopics(arrTopics) {\n        for (const card of arrTopics) {\n            removeTopic(card);\n        }\n\n        setTopicsToDelete([]);\n    }\n\n    return (\n\n        <div >\n            {isEdit &&\n                <EditComponent\n                    topic={topicToEdit}\n                    setIsEdit={setIsEdit}\n                    setReset={setResetTopic}\n                />\n            }\n\n            <div className={clsx(isEdit ? classes.hide : '', classes.table)}>\n                <MaterialTable\n                    icons={tableIcons}\n                    title=\"List of Topics\"\n                    columns={columns}\n                    data={data}\n                    options={{\n                        sorting: true,\n                        selection: true,\n                        rowStyle: rowData => ({\n                            backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF',\n                        })\n                    }}\n                    \n                    onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\n                    actions={[\n                        {\n                            tooltip: 'Remove All Selected Users',\n                            icon: DeleteOutline,\n                            onClick: (evt, dataSelected) => {\n                                setTopicsToDelete(dataSelected);\n                                setOpenAlertDeleteRows(true);\n                            }\n                        },\n                    ]}\n                />\n            </div>\n\n            <AlertComponent\n                onConfirm={()=>handleDeleteTopics(topicsToDelete)}\n                open={openAlertDeleteRows}\n                setOpen={setOpenAlertDeleteRows}\n            >\n                Are you sure you want to delete <strong style={{color: 'red'}}>{topicsToDelete.length} topic(s)</strong>?\n            </AlertComponent>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = props => {\n  const { \n    className,\n    setIsEdit,\n    isEdit,\n    setTopicToEdit,\n    resetTopic,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        {isEdit && \n          <Button onClick={() => setIsEdit(false)} variant=\"contained\" color=\"primary\">\n            Go back\n          </Button>\n        }\n        <span className={classes.spacer} />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            resetTopic();\n            setIsEdit(true);\n            setTopicToEdit({});\n          }}\n        >\n          Add New Topic\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Toolbar, Table } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst TopicsList = () => {\n  const classes = useStyles();\n  const [isEdit, setIsEdit] = useState(false);\n  const [topicToEdit, setTopicToEdit] = useState({});\n  const [resetTopic, setResetTopic] = useState( ()=>()=>{} );\n\n  return (\n    <div className={classes.root}>\n      <Toolbar resetTopic={resetTopic} isEdit={isEdit} setIsEdit={setIsEdit} setTopicToEdit={setTopicToEdit}/>\n      <div className={classes.content}>\n        <Table setResetTopic={setResetTopic} isEdit={isEdit} setIsEdit={setIsEdit} topicToEdit={topicToEdit} setTopicToEdit={setTopicToEdit}/>\n      </div>\n    </div>\n  );\n};\n\nexport default TopicsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button,\n  TextField\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Password = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            name=\"confirm\"\n            onChange={handleChange}\n            style={{ marginTop: '1rem' }}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport { Notifications, Password } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Settings = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={4}\n      >\n        <Grid\n          item\n          md={7}\n          xs={12}\n        >\n          <Notifications />\n        </Grid>\n        <Grid\n          item\n          md={5}\n          xs={12}\n        >\n          <Password />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\n\n// Material components\nimport { SvgIcon } from '@material-ui/core';\n\nexport default function Facebook(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\n    </SvgIcon>\n  );\n}\n","import React from 'react';\n\n// Material components\nimport { SvgIcon } from '@material-ui/core';\n\nexport default function Google(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\n    </SvgIcon>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Button,\n  IconButton,\n  TextField,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from '../../icons';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: `url(${process.env.PUBLIC_URL}/images/auth.jpg)`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  socialButtons: {\n    marginTop: theme.spacing(3)\n  },\n  socialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  sugestion: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  signInButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignIn = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSignIn = event => {\n    event.preventDefault();\n    history.push('/');\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        className={classes.grid}\n        container\n      >\n        <Grid\n          className={classes.quoteContainer}\n          item\n          lg={5}\n        >\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              <Typography\n                className={classes.quoteText}\n                variant=\"h1\"\n              >\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                they sold out High Life.\n              </Typography>\n              <div className={classes.person}>\n                <Typography\n                  className={classes.name}\n                  variant=\"body1\"\n                >\n                  Takamaru Ayako\n                </Typography>\n                <Typography\n                  className={classes.bio}\n                  variant=\"body2\"\n                >\n                  Manager at inVision\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.content}\n          item\n          lg={7}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <div className={classes.contentHeader}>\n              <IconButton onClick={handleBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            </div>\n            <div className={classes.contentBody}>\n              <form\n                className={classes.form}\n                onSubmit={handleSignIn}\n              >\n                <Typography\n                  className={classes.title}\n                  variant=\"h2\"\n                >\n                  Sign in\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Sign in with social media\n                </Typography>\n                <Grid\n                  className={classes.socialButtons}\n                  container\n                  spacing={2}\n                >\n                  <Grid item>\n                    <Button\n                      color=\"primary\"\n                      onClick={handleSignIn}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      <FacebookIcon className={classes.socialIcon} />\n                      Login with Facebook\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      onClick={handleSignIn}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      <GoogleIcon className={classes.socialIcon} />\n                      Login with Google\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Typography\n                  align=\"center\"\n                  className={classes.sugestion}\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  or login with email address\n                </Typography>\n                <TextField\n                  className={classes.textField}\n                  error={hasError('email')}\n                  fullWidth\n                  helperText={\n                    hasError('email') ? formState.errors.email[0] : null\n                  }\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.email || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('password')}\n                  fullWidth\n                  helperText={\n                    hasError('password') ? formState.errors.password[0] : null\n                  }\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={formState.values.password || ''}\n                  variant=\"outlined\"\n                />\n                <Button\n                  className={classes.signInButton}\n                  color=\"primary\"\n                  disabled={!formState.isValid}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Sign in now\n                </Button>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don't have an account?{' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/sign-up\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignIn);\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Button,\n  IconButton,\n  TextField,\n  Link,\n  FormHelperText,\n  Checkbox,\n  Typography\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst schema = {\n  firstName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 32\n    }\n  },\n  lastName: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 32\n    }\n  },\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true,\n    length: {\n      maximum: 64\n    }\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' },\n    length: {\n      maximum: 128\n    }\n  },\n  policy: {\n    presence: { allowEmpty: false, message: 'is required' },\n    checked: true\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    height: '100%'\n  },\n  grid: {\n    height: '100%'\n  },\n  quoteContainer: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  quote: {\n    backgroundColor: theme.palette.neutral,\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundImage: 'url(/images/auth.jpg)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n  quoteInner: {\n    textAlign: 'center',\n    flexBasis: '600px'\n  },\n  quoteText: {\n    color: theme.palette.white,\n    fontWeight: 300\n  },\n  name: {\n    marginTop: theme.spacing(3),\n    color: theme.palette.white\n  },\n  bio: {\n    color: theme.palette.white\n  },\n  contentContainer: {},\n  content: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  contentHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingTop: theme.spacing(5),\n    paddingBototm: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  logoImage: {\n    marginLeft: theme.spacing(4)\n  },\n  contentBody: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center'\n    }\n  },\n  form: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    paddingBottom: 125,\n    flexBasis: 700,\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }\n  },\n  title: {\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    marginTop: theme.spacing(2)\n  },\n  policy: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  signUpButton: {\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nconst SignUp = props => {\n  const { history } = props;\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  const handleSignUp = event => {\n    event.preventDefault();\n    history.push('/');\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        className={classes.grid}\n        container\n      >\n        <Grid\n          className={classes.quoteContainer}\n          item\n          lg={5}\n        >\n          <div className={classes.quote}>\n            <div className={classes.quoteInner}>\n              <Typography\n                className={classes.quoteText}\n                variant=\"h1\"\n              >\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                they sold out High Life.\n              </Typography>\n              <div className={classes.person}>\n                <Typography\n                  className={classes.name}\n                  variant=\"body1\"\n                >\n                  Takamaru Ayako\n                </Typography>\n                <Typography\n                  className={classes.bio}\n                  variant=\"body2\"\n                >\n                  Manager at inVision\n                </Typography>\n              </div>\n            </div>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.content}\n          item\n          lg={7}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <div className={classes.contentHeader}>\n              <IconButton onClick={handleBack}>\n                <ArrowBackIcon />\n              </IconButton>\n            </div>\n            <div className={classes.contentBody}>\n              <form\n                className={classes.form}\n                onSubmit={handleSignUp}\n              >\n                <Typography\n                  className={classes.title}\n                  variant=\"h2\"\n                >\n                  Create new account\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Use your email to create new account\n                </Typography>\n                <TextField\n                  className={classes.textField}\n                  error={hasError('firstName')}\n                  fullWidth\n                  helperText={\n                    hasError('firstName') ? formState.errors.firstName[0] : null\n                  }\n                  label=\"First name\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.firstName || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('lastName')}\n                  fullWidth\n                  helperText={\n                    hasError('lastName') ? formState.errors.lastName[0] : null\n                  }\n                  label=\"Last name\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.lastName || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('email')}\n                  fullWidth\n                  helperText={\n                    hasError('email') ? formState.errors.email[0] : null\n                  }\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={formState.values.email || ''}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={classes.textField}\n                  error={hasError('password')}\n                  fullWidth\n                  helperText={\n                    hasError('password') ? formState.errors.password[0] : null\n                  }\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={formState.values.password || ''}\n                  variant=\"outlined\"\n                />\n                <div className={classes.policy}>\n                  <Checkbox\n                    checked={formState.values.policy || false}\n                    className={classes.policyCheckbox}\n                    color=\"primary\"\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    className={classes.policyText}\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the{' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </div>\n                {hasError('policy') && (\n                  <FormHelperText error>\n                    {formState.errors.policy[0]}\n                  </FormHelperText>\n                )}\n                <Button\n                  className={classes.signUpButton}\n                  color=\"primary\"\n                  disabled={!formState.isValid}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Sign up now\n                </Button>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?{' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/sign-in\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(SignUp);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { StateContext } from '../../../../../../Context/GlobalContext';\nimport AlertComponent from '../../../../../../components/Alert';\n\n// Material-UI\nimport Container from '@material-ui/core/Container';\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Input\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n// Icons\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n// WYSIWYG\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n/* FIREBASE */\nimport { db } from '../../../../../../services/firebase';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        marginTop: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n    formControlButtons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'row',\n    },\n    editorToolbarClassName: {\n        borderBottom: '1px solid gray',\n        marginBottom: 0\n    },\n    editorWrapperClassName: {\n        border: '1px solid gray',\n        backgroundColor: 'white',\n        marginTop: theme.spacing(1)\n    },\n    editorClassName: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        minHeight: '150px',\n    },\n    textCenter: {\n        textAlign: 'center'\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n    },\n    danger: {\n        backgroundColor: 'rgb(220, 0, 78)',\n        '&:hover': {\n            backgroundColor: 'rgb(154, 0, 54)'\n        }\n    }\n}));\n\nfunction Edit(props) {\n    const {\n        setIsEdit,\n        setResetCard,\n    } = props;\n    const [idCard, setIdCard] = React.useState(props.card.questionId);\n    const isEdit = !!idCard;\n    const classes = useStyles();\n    const {languages} = React.useContext(StateContext);\n    \n    const [editor, setEditor] = React.useState();\n    const [card, setCard] = React.useState(props.card);\n    const [cardChanges, setCardChanges] = React.useState({});\n    const [topics, setTopics] = React.useState({});\n    const [difficulties, setDifficulties] = React.useState({});\n    const [selectedLanguage, setSelectedLanguage] = React.useState(props.card.language + '' || '');\n    const [btnDisabled, setBtnDisabled] = React.useState(true);\n    const [btnRemoveDisabled, setBtnRemoveDisabled] = React.useState(true);\n\n    // Alert\n    const [openAlertOnDelete, setOpenAlertOnDelete] = React.useState(false);    \n\n    function reset() {\n        setSelectedLanguage('');\n        setTopics({});\n        setDifficulties({});\n        setCard({});\n        setCardChanges({});\n        setEditor('');\n    }\n    \n    function resetNewCard() {\n        reset();\n        setIdCard(undefined);\n    }\n\n    React.useEffect(function initializeCard() {\n        setIdCard(props.card.questionId);\n    }, [props.card.questionId]);\n\n    React.useEffect(function initialize() {\n        setResetCard(()=>resetNewCard);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(function connectFirstLanguageCard() {\n        if( isEdit ) {\n\n            const refCard = db.ref(`app/main/questions/${idCard}`);\n\n            refCard.on(\"value\",\n                getCardAndCurrentLanguage,\n                (errorObject) => {\n                    console.log(\"The read failed: \" + errorObject.code);\n                }\n            )\n\n            function getCardAndCurrentLanguage(snapshot) {\n                const card = snapshot.val();\n                console.log(card)\n                if (card) {\n                    const firstLanguage = selectedLanguage || Object.keys(card.languages).sort()[0];\n                    setCard((prevCard)=>({\n                        ...prevCard,\n                        ...card,\n                        language: firstLanguage,\n                    }));\n\n                    setCardChanges((prevCard)=>({\n                        ...prevCard,\n                        ...card,\n                        language: firstLanguage,\n                    }))\n\n                    setSelectedLanguage(firstLanguage);\n                } else {\n                    reset();\n                }\n            }\n\n            return function disconnectCard() {\n                refCard.off(\"value\", getCardAndCurrentLanguage);\n            }\n        } else {\n            reset();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [idCard]);\n    \n    React.useEffect(function connectCardTranslations() {\n        const existLanguageOnCard = card.languages && selectedLanguage && card.languages[selectedLanguage];\n        let languageCard;\n        if( existLanguageOnCard ) {\n            setCard((card)=>({\n                ...card,\n                language: selectedLanguage,\n            }));\n\n            languageCard = selectedLanguage\n\n        } else if( selectedLanguage ) {\n            languageCard = card.language;\n        }\n\n        const refQuestion = db.ref(`app/${languageCard}/questions/${idCard}`);\n        \n        refQuestion.on(\"value\", getQuestion);\n\n        function getQuestion(snapshot) {\n            const card = snapshot.val();\n            console.log(card)\n\n            if(card) {\n                setCard((prevCard)=>({\n                    ...prevCard,\n                    question: card.question\n                }));\n                \n                setCardChanges((prevCard)=>({\n                    ...prevCard,\n                    question: card.question\n                }));\n                \n                setEditor(convertToEditorState(card.question));\n            }\n        }\n        \n\n        return function disconnectCardTranslations() {\n            refQuestion.off(\"value\", getQuestion);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLanguage, idCard, card.language, card.languages && card.languages[selectedLanguage]]);\n    \n    React.useEffect(function connectOptionsTranslations() {\n        const refTopics = db.ref(`app/main/topics`);\n        const refDifficulties = db.ref(`app/main/difficulties`);\n        \n        refTopics.on(\"value\", getTopics, (error)=>console.log(error.code));\n        refDifficulties.on(\"value\", getDifficulties, (error)=>console.log(error.code));\n\n        function getTopics(snapshot) {\n            const topicsSnapShot = snapshot.val();\n\n            if(topicsSnapShot) {\n                const topicsTranslation = { ...topicsSnapShot };\n                let counter = 0;\n\n\n                Object.keys(topicsSnapShot).forEach((topicId, index, arr) => {\n                    const topic = topicsSnapShot[topicId];\n                    let firstLanguage;\n\n                    if (topic.languages[selectedLanguage]) {\n                        firstLanguage = selectedLanguage;\n                        topicsTranslation[topicId].language = selectedLanguage;\n                    } else if(topics[topicId] && topics[topicId].language){\n                        firstLanguage = topics[topicId].language;\n                    } else {\n                        firstLanguage = (topic.languages.en) ? 'en' : Object.keys(topic.languages).sort()[0];\n                    }\n\n                    const refTopicTranslation = db.ref(`app/${firstLanguage}/topics/${topicId}`);\n                    refTopicTranslation.once(\"value\", (translation) => {\n                        counter++;\n                        topicsTranslation[topicId].name = translation.val().name;\n                        topicsTranslation[topicId].help = translation.val().help;\n                        const isLastIteration = counter === arr.length;\n                        if (isLastIteration) {\n                            setTopics(topicsTranslation);\n                        }\n                    })\n                })\n            }\n        }\n        \n        function getDifficulties(snapshot) {\n            const difficultiesSnapshot = snapshot.val();\n\n            if(difficultiesSnapshot) {\n                const difficultiesTranslation = {...difficultiesSnapshot};\n                let counter = 0;\n\n\n                Object.keys(difficultiesSnapshot).forEach((difficultyId, index, arr)=> {\n                    const difficulty = difficultiesSnapshot[difficultyId];\n                    let firstLanguage;\n\n                    if(difficulty.languages[selectedLanguage]) {\n                        firstLanguage = selectedLanguage;\n                        difficultiesTranslation[difficultyId].language = selectedLanguage;\n                    } else if(difficulties[difficultyId] && difficulties[difficultyId].language) {\n                        firstLanguage = difficulties[difficultyId].language;\n                    } \n                    else {\n                        firstLanguage = (difficulty.languages.en) ? 'en' :  Object.keys(difficulty.languages).sort()[0];\n                    }\n\n                    const refTopicTranslation = db.ref(`app/${firstLanguage}/difficulties/${difficultyId}/name`);\n                    refTopicTranslation.once(\"value\", (translation)=> {\n                        counter++;\n                        difficultiesTranslation[difficultyId].name = translation.val();\n                        const isLastIteration = counter === arr.length;\n                        if(isLastIteration) {\n                            setDifficulties(difficultiesTranslation);\n                        }\n                    })\n\n                })\n            }\n        }\n\n        return function disconnectTranslations() {\n            if(selectedLanguage) {\n                refTopics.off(\"value\", getTopics);\n                refDifficulties.off(\"value\", getDifficulties);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedLanguage, idCard, card.language])\n\n    React.useEffect( function lookingForChanges() {\n        if(card.question !== cardChanges.question) {\n            setBtnDisabled(false);\n            setBtnRemoveDisabled(true);\n        }\n\n        else if(card.topicId !== cardChanges.topicId ) {\n            setBtnDisabled(false);\n            setBtnRemoveDisabled(true);\n        }\n\n        else if(card.difficulty !== cardChanges.difficulty) {\n            setBtnDisabled(false);\n            setBtnRemoveDisabled(true);\n            \n        } else if(card.author !== cardChanges.author) {\n            setBtnDisabled(false);\n            setBtnRemoveDisabled(true);\n            console.log(\"HOla\")\n        }\n\n        else {\n            setBtnDisabled(true);\n\n            if(selectedLanguage === card.language) {\n                setBtnRemoveDisabled(false);\n            } else {\n                setBtnRemoveDisabled(true);\n            }\n        }\n    }, [card.question, card.topicId, card.difficulty, card.author, cardChanges.question, cardChanges.topicId, cardChanges.difficulty, cardChanges.author, selectedLanguage, card.language]);\n\n    // Handlers\n    function handleChange(e) {\n        const type = e.target.name;\n\n        if(type === 'language') {\n            const value = e.target.value;\n            setSelectedLanguage(value);\n        }\n\n        if(type === 'topic') {\n            const value = e.target.value;\n            setCard((card)=> ({\n                ...card,\n                topicId: value,\n            }))\n        }\n\n        if(type === 'difficulty') {\n            const value = e.target.value;\n            setCard((card)=> ({\n                ...card,\n                difficulty: value,\n            }))\n        }\n    }\n\n    function handleInputChange(e) {\n        const type = e.target.getAttribute('name');\n        const value = e.target.value;\n        \n        if(type === 'author') {\n            setCard((card)=> ({\n                ...card,\n                author: value, \n            }))\n        }\n    }\n\n    function onEditorStateChange(editorState) {\n        const rawContentState = convertToRaw(editorState.getCurrentContent());\n\n        setCard((card) =>({\n            ...card,\n            question: draftToHtml(rawContentState)\n        }));\n        setEditor(editorState);\n    }\n\n    function onClickBtn() {\n        setBtnDisabled(true);\n        const isNewLanguageOnEdit = isEdit && (selectedLanguage !== card.language);\n\n        if( isNewLanguageOnEdit ) {\n            const refCardLanguages = db.ref(`app/main/questions/${idCard}/languages`);\n            \n            // Setting Question \n            db.ref(`app/${selectedLanguage}/questions/${idCard}/question`).set(card.question);\n            \n            // Setting new active language in the app\n            const refLanguages = db.ref(`languages/actives`);\n            refLanguages.update({\n                [selectedLanguage]: true\n            });\n\n            // Setting new language in card\n            refCardLanguages.update({\n                [selectedLanguage]: true,\n            });\n\n        } else if(isEdit) {\n            // Setting Question\n            db.ref(`app/${card.language}/questions/${idCard}/question`).set(card.question);\n        }\n        \n        if(isEdit) {\n            // Setting topic\n            db.ref(`app/main/questions/${idCard}/topicId`).set(card.topicId);\n            \n            // Setting Difficulty\n            db.ref(`app/main/questions/${idCard}/difficulty`).set(card.difficulty);\n\n            // Setting Author\n            db.ref(`app/main/questions/${idCard}/author`).set(card.author || '');\n        }\n        \n        if( !isEdit ) {\n            // Setting Question \n            const refCard = db.ref(`app/main/questions`).push();\n            const idCard = refCard.key;\n            const refCardTranslation = db.ref(`app/${selectedLanguage}/questions/${idCard}/question`);\n            refCardTranslation.set(card.question);\n\n            // Setting topic\n            refCard.child('topicId').set(card.topicId);\n            \n            // Setting Difficulty\n            refCard.child('difficulty').set(card.difficulty);\n            setIdCard(idCard);\n\n            // Setting Author\n            refCard.child('author').set(card.author);\n\n\n            // Setting new active language in the app\n            const refLanguages = db.ref(`languages/actives`);\n            refLanguages.update({\n                [selectedLanguage]: true\n            })\n            \n            // Setting new language in card\n            const refCardLanguages = db.ref(`app/main/questions/${idCard}/languages`);\n            refCardLanguages.update({\n                [selectedLanguage]: true,\n            });\n        }\n\n        setSelectedLanguage(selectedLanguage);\n    }\n\n    async function onRemove() {\n        setBtnRemoveDisabled(true);\n        const thereIsNoChanges = isEdit && (selectedLanguage === card.language);\n\n        if(thereIsNoChanges) {\n            // Delete translation\n            const cardLanguage = selectedLanguage;\n            const cardLanguages = {...card.languages};\n\n            checkLanguages();\n\n            const existOtherLanguageOnCard = Object.keys(cardLanguages).filter((languageId)=>languageId !== cardLanguage).length > 0;\n            if(existOtherLanguageOnCard) {\n                const otherLanguages = Object.keys(cardLanguages).filter((languageId)=>languageId!==cardLanguage);\n                setIdCard(idCard);\n                setSelectedLanguage( otherLanguages['en'] ? 'en' : otherLanguages[0] );\n            } else {\n                setIsEdit(false);\n                \n                // Remove Card from main\n                db.ref('app').update({\n                    [`main/questions/${idCard}`]: null,\n                });\n            }\n\n\n            db.ref('app').update({\n                [`main/questions/${idCard}/languages/${cardLanguage}`]: null,\n                [`${cardLanguage}/questions/${idCard}`]: null,\n            })\n\n            async function checkLanguages() {\n                const refQuestionsMain = db.ref(`app/main`);\n                const language = cardLanguage;\n\n                const snapshot = await refQuestionsMain.once('value');\n                let languageExistInDb = false;\n                \n                if(snapshot) {\n                    const main = snapshot.val();\n                    const {questions} = main;\n\n                    for (const questionId in questions) {\n                        const question = questions[questionId];\n\n                        if(questionId !== idCard && question.languages) {\n                            if( question.languages[language]) {\n                                console.log(\"pasé por aquí\")\n                                languageExistInDb = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    // Checking on topics\n                    const {topics} = main;\n\n                    if(!languageExistInDb) {\n                        for (const id in topics) {\n                            const difficulty = topics[id];\n    \n                            if( difficulty.languages[language]) {\n                                languageExistInDb = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    // Checking on difficulties\n                    const {difficulties} = main;\n\n                    if(!languageExistInDb) {\n                        for (const id in difficulties) {\n                            const difficulty = difficulties[id];\n    \n                            if( difficulty.languages[language]) {\n                                languageExistInDb = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    if(!languageExistInDb) {\n                        // Delete language from actives\n                        db.ref(`languages/actives`).update({\n                            [cardLanguage]: null\n                        })\n                    }\n                } \n\n            }\n        }\n    }\n\n    function convertToEditorState(html) {\n        let editorState;\n        const contentBlock = htmlToDraft(html);\n\n        if (contentBlock) {\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            editorState = EditorState.createWithContent(contentState)\n        }\n\n        return editorState;\n    }\n\n    return (\n        <div className=\"edit\">\n            <Container className={classes.margin} maxWidth=\"sm\">\n                <h1 className={classes.textCenter}>Cards</h1>\n\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"language-select\">Language</InputLabel>\n                    <Select \n                        defaultValue=\"\"\n                        inputProps={{name: 'language', id: 'language-select'}}\n                        value={`${selectedLanguage || ''}`}\n                        onChange={handleChange}\n                    >\n                        {card.languages && <ListSubheader><strong>ACTIVES</strong></ListSubheader>}\n                        {card.languages && languages.all && Object.keys(card.languages).sort().map( (languageId) => \n                            <MenuItem key={languageId} value={languageId}>\n                                {(languages.all[languageId]) &&\n                                    `${languages.all[languageId].nativeName} - ${languageId}`\n                                }\n                            </MenuItem>\n                        )}\n\n                        <ListSubheader><strong>NEW LANGUAGE</strong></ListSubheader>\n                        {languages.all && Object.keys(languages.all).filter((languageId)=>{\n                            return (card.languages) ? !card.languages.hasOwnProperty(languageId) : true;\n                        })\n                        .sort((a,b)=>{\n                            if (a.nativeName > b.nativeName) return 1;\n                            if (a.nativeName < b.nativeName) return -1;\n                            return 0;\n                        }).map((languageId)=> {\n                            let languageNativeName = languages.all[languageId].nativeName;\n                        return <MenuItem key={languageId} value={languageId}>{languageNativeName} - {languageId}</MenuItem>\n                        })}\n\n                    </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"topic-select\">Topic</InputLabel>\n                    <Select \n                        defaultValue=\"\"\n                        inputProps={{name: 'topic', id: 'topic-select'}}\n                        value={`${card.topicId || ''}`}\n                        onChange={handleChange}\n                    >\n                        {Object.keys(topics).sort((a,b) => {\n                            if( topics[a].name > topics[b].name ) return 1;\n                            if( topics[a].name < topics[b].name ) return -1;\n                            return 0;\n                        })\n                        .map((topicId)=>\n                            <MenuItem key={topicId} value={topicId}>{topics[topicId].name}</MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"difficulty-selector\">Difficulty</InputLabel>\n                    <Select\n                        defaultValue=\"\"\n                        inputProps={{name: 'difficulty', id: 'difficulty-select'}}\n                        value={`${card.difficulty || ''}`}\n                        onChange={handleChange}    \n                    >\n                        {Object.keys(difficulties).sort((a,b) => {\n                            if( a.name > b.name ) return 1;\n                            if( a.name < b.name ) return -1;\n                            return 0;\n                        })\n                        .map((difficultyId)=>\n                            <MenuItem key={difficultyId} value={difficultyId}>{difficulties[difficultyId].name}</MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <TextField\n                        inputProps={{name: 'author', id: 'author-input'}}\n                        label=\"Author\"\n                        value={card.author || ''}\n                        onChange={handleInputChange}\n                    />\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <FormLabel style={{marginTop: '16px'}}>Question</FormLabel>\n                    <Editor\n                        editorState={editor}\n                        toolbarClassName={classes.editorToolbarClassName}\n                        wrapperClassName={classes.editorWrapperClassName}\n                        editorClassName={classes.editorClassName}\n                        onEditorStateChange={onEditorStateChange}\n                        toolbar={{\n                            options: ['inline', 'blockType', 'list', 'textAlign', 'colorPicker', 'link', 'embedded', 'emoji', 'image', 'remove', 'history'],\n                        }}\n                    />\n                </FormControl>\n\n                <FormControl className={clsx(classes.formControl, classes.formControlButtons)}>\n                    <Button onClick={onClickBtn} variant=\"contained\" disabled={btnDisabled} className={classes.button} color=\"primary\">\n                        {(isEdit) ?\n                                <>UPDATE <UpdateIcon style={{marginLeft: '0.4em'}}/></>\n                            :\n                                <>Add <AddIcon style={{marginLeft: '0.4em'}}/></>\n                        } \n                    </Button>\n                        {(isEdit) &&\n                            <Button onClick={()=>setOpenAlertOnDelete(true)} disabled={btnRemoveDisabled} variant=\"contained\" className={clsx(classes.button, classes.danger)} color=\"secondary\">\n                                DELETE <DeleteOutline style={{marginLeft: '0.4em'}}/>\n                            </Button>\n                        }\n                </FormControl>\n            </Container>\n            <AlertComponent\n                open={openAlertOnDelete}\n                setOpen={setOpenAlertOnDelete}\n                onConfirm={onRemove}\n            >\n                Are you sure you want to delete the card with language \"{languages.all && languages.all[selectedLanguage] && languages.all[selectedLanguage].name} | {languages.all && languages.all[selectedLanguage] && languages.all[selectedLanguage].nativeName} | {selectedLanguage}\"?\n            </AlertComponent>\n        </div>\n    )\n}\n\nexport default Edit\n","import React, { useState, useContext } from 'react';\nimport { StateContext } from '../../../../../../Context/GlobalContext';\nimport EditComponent from '../Edit';\nimport AlertComponent from '../../../../../../components/Alert';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {Button} from '@material-ui/core';\n\nimport { forwardRef } from 'react';\nimport MaterialTable from 'material-table';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n/* Firebase */\nimport { db } from '../../../../../../services/firebase';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: 0\n    },\n    content: {\n        padding: 0\n    },\n    table: {\n        '& tr > *:first-child': {\n            paddingLeft: '1em'\n        }\n    },\n    inner: {\n        minWidth: 1050\n    },\n    nameContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    avatar: {\n        marginRight: theme.spacing(2)\n    },\n    actions: {\n        justifyContent: 'flex-end'\n    },\n    hide: {\n        display: 'none',\n    }\n}));\n\nconst Table = props => {\n    const { \n        isEdit,\n        setIsEdit,\n        cardToEdit,\n        setCardToEdit,\n        setResetCard,\n    } = props;\n    const { admin: { adminCards } } = useContext(StateContext);\n\n    const classes = useStyles();\n    const {languages} = React.useContext(StateContext);\n    const [selectedRow, setSelectedRow] = useState(null);\n\n    // Alert on delete rows\n    const [cardsToDelete, setCardsToDelete] = React.useState([]);\n    const [openAlertDeleteRows, setOpenAlertDeleteRows] = React.useState(false);\n\n    const [columns, setColumns] = useState([\n        { title: 'Question', field: 'question' },\n        {\n            title: 'Topic',\n            field: 'topic',\n            width: '150',\n        },\n        {\n            title: 'Difficulty',\n            field: 'difficulty',\n            width: '150',\n        },\n        { \n            title: 'Language',\n            field: 'language',\n            width: '150',\n        },\n        { \n            title: 'Actions',\n            field: 'action',\n            width: '150',\n        }\n\n    ]);\n\n    function removeCard(card) {\n        const {\n            questionId: idCard,\n            language,\n        } = card;\n        \n        const languages = {...card.languages}\n\n        checkLanguages();\n\n        const existOtherLanguageOnCard = Object.keys(languages).filter((languageId)=>languageId !== language).length > 0;\n\n        if(!existOtherLanguageOnCard) {\n            // Remove Card from main\n            db.ref('app').update({\n                [`main/questions/${idCard}`]: null,\n            });\n        }\n\n        db.ref('app').update({\n            [`main/questions/${idCard}/languages/${language}`]: null,\n            [`${language}/questions/${idCard}`]: null,\n        })\n\n        async function checkLanguages() {\n            const refQuestionsMain = db.ref(`app/main`);\n\n            const snapshot = await refQuestionsMain.once('value');\n            let languageExistInDb = false;\n            \n            if(snapshot) {\n                const main = snapshot.val();\n                const {questions} = main;\n\n                for (const questionId in questions) {\n                    const question = questions[questionId];\n                    console.log(question, questionId, idCard, language);\n\n                    if(questionId !== idCard && question.languages) {\n                        if( question.languages[language]) {\n                            console.log(\"pasé por aquí\")\n                            languageExistInDb = true;\n                            break;\n                        }\n                    }\n                }\n\n                // Checking on topics\n                const {topics} = main;\n\n                if(!languageExistInDb) {\n                    for (const id in topics) {\n                        const difficulty = topics[id];\n\n                        if( difficulty.languages[language]) {\n                            languageExistInDb = true;\n                            break;\n                        }\n                    }\n                }\n\n                // Checking on difficulties\n                const {difficulties} = main;\n\n                if(!languageExistInDb) {\n                    for (const id in difficulties) {\n                        const difficulty = difficulties[id];\n\n                        if( difficulty.languages[language]) {\n                            languageExistInDb = true;\n                            break;\n                        }\n                    }\n                }\n\n                if(!languageExistInDb) {\n                    // Delete language from actives\n                    db.ref(`languages/actives`).update({\n                        [language]: null\n                    })\n                }\n            }\n\n        }\n    }\n\n    const [data, setData] = useState([]);\n\n    React.useEffect(function initializeColumns() {\n        setColumns([\n            { title: 'Question', field: 'question' },\n            {\n                title: 'Topic',\n                field: 'topic',\n                width: '150',\n            },\n            {\n                title: 'Difficulty',\n                field: 'difficulty',\n                width: '150',\n            },\n            { \n                title: 'Language',\n                field: 'language',\n                width: '150',\n                render: (rowData) => {\n                    return <>\n                        {\n                            ( languages.all && languages.all[rowData.language] && languages.all[rowData.language].nativeName ) ||\n                            <Skeleton animation=\"wave\" />\n                        }\n                    </>\n                },\n            },\n            { \n                title: 'Actions',\n                field: 'action',\n                width: '150',\n                render: (rowData) => \n                    <Button\n                        onClick={()=>{\n                            setIsEdit(true);\n                            setCardToEdit(rowData);\n                            console.log(rowData)\n                        }}\n                    >\n                        <Edit/>\n                    </Button>\n            }\n    \n        ])\n    }, [languages, setCardToEdit, setIsEdit])\n\n    React.useEffect(function settingData() {\n        setData(adminCards);\n    }, [adminCards]);\n\n    function handleDeleteCards(arrCards) {\n        for (const card of arrCards) {\n            removeCard(card);\n        }\n\n        setCardsToDelete([]);\n    }\n\n    return (\n\n        <div >\n            {isEdit &&\n                <EditComponent\n                    card={cardToEdit}\n                    setIsEdit={setIsEdit}\n                    setResetCard={setResetCard}\n                />\n            }\n\n            <div className={clsx(isEdit ? classes.hide : '', classes.table)}>\n                <MaterialTable\n                    icons={tableIcons}\n                    title=\"List of Cards\"\n                    columns={columns}\n                    data={data}\n                    options={{\n                        sorting: true,\n                        selection: true,\n                        rowStyle: rowData => ({\n                            backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF',\n                        })\n                    }}\n                    \n                    onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\n                    actions={[\n                        {\n                            tooltip: 'Remove All Selected Users',\n                            icon: DeleteOutline,\n                            onClick: (evt, dataSelected) => {\n                                console.log(dataSelected);\n                                setCardsToDelete(dataSelected);\n                                setOpenAlertDeleteRows(true);\n                            }\n                        },\n                    ]}\n                />\n            </div>\n\n            <AlertComponent\n                onConfirm={()=>handleDeleteCards(cardsToDelete)}\n                open={openAlertDeleteRows}\n                setOpen={setOpenAlertDeleteRows}\n            >\n                Are you sure you want to delete <strong style={{color: 'red'}}>{cardsToDelete.length} card(s)</strong>?\n            </AlertComponent>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst UsersToolbar = props => {\n  const { \n    className,\n    setIsEdit,\n    isEdit,\n    setCardToEdit,\n    resetCard,\n  } = props;\n\n  console.log(resetCard)\n\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)}>\n      <div className={classes.row}>\n        {isEdit && \n          <Button onClick={() => setIsEdit(false)} variant=\"contained\" color=\"primary\">\n            Go back\n          </Button>\n        }\n        <span className={classes.spacer} />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            resetCard();\n            setIsEdit(true);\n            setCardToEdit({});\n          }}\n        >\n          Add New Card\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nUsersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersToolbar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport { Toolbar, Table } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst UserList = () => {\n  const classes = useStyles();\n  const [isEdit, setIsEdit] = useState(false);\n  const [cardToEdit, setCardToEdit] = useState({});\n  const [resetCard, setResetCard] = useState( ()=>()=>{} );\n\n  return (\n    <div className={classes.root}>\n      <Toolbar resetCard={resetCard} isEdit={isEdit} setIsEdit={setIsEdit} cardToEdit={cardToEdit} setCardToEdit={setCardToEdit}/>\n      <div className={classes.content}>\n        <Table setResetCard={setResetCard} isEdit={isEdit} setIsEdit={setIsEdit} cardToEdit={cardToEdit} setCardToEdit={setCardToEdit}/>\n      </div>\n    </div>\n  );\n};\n\nexport default UserList;\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport { RouteWithLayout } from './components';\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\n\nimport {\n  Dashboard as DashboardView,\n  // ProductList as ProductListView,\n  UserList as UserListView,\n  // Typography as TypographyView,\n  // Icons as IconsView,\n  Account as AccountView,\n  // Settings as SettingsView,\n  SignUp as SignUpView,\n  SignIn as SignInView,\n  Topics,\n  NotFound as NotFoundView,\n} from './views';\n\nconst AdminRoutes = () => {\n  return (\n    <Switch>\n      <Redirect\n        exact\n        from=\"/admin\"\n        to=\"/admin/dashboard\"\n      />\n      <RouteWithLayout\n        component={DashboardView}\n        exact\n        layout={MainLayout}\n        path=\"/admin/dashboard\"\n      />\n      <RouteWithLayout\n        component={UserListView}\n        exact\n        layout={MainLayout}\n        path=\"/admin/users\"\n      />\n      <RouteWithLayout\n        component={UserListView}\n        exact\n        layout={MainLayout}\n        path=\"/admin/cards\"\n      />\n      <RouteWithLayout\n        component={Topics}\n        exact\n        layout={MainLayout}\n        path=\"/admin/topics\"\n      />\n      <RouteWithLayout\n        component={AccountView}\n        exact\n        layout={MainLayout}\n        path=\"/admin/account\"\n      />\n      <RouteWithLayout\n        component={SignUpView}\n        exact\n        layout={MinimalLayout}\n        path=\"/sign-up\"\n      />\n      <RouteWithLayout\n        component={SignInView}\n        exact\n        layout={MinimalLayout}\n        path=\"/sign-in\"\n      />\n      <RouteWithLayout\n        component={NotFoundView}\n        exact\n        layout={MinimalLayout}\n        path=\"/not-found\"\n      />\n      {/* <Redirect to=\"/not-found\" /> */}\n    </Switch>\n  );\n};\n\nexport default AdminRoutes;\n","import React, { useEffect, useContext } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { MethodContext, DispatchContext } from '../../Context/GlobalContext';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport AdminRoutes from './Admin.Routes';\r\n\r\nimport { db } from '../../services/firebase';\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators = {\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n\r\nexport default function Admin() {\r\n  const {dispatchAdmin} = useContext(DispatchContext)\r\n\r\n  useEffect(function getDataAdmin() {\r\n    const refApp = db.ref(\"app\");\r\n    refApp.on(\r\n      \"value\",\r\n      getLanguages,\r\n      function (errorObject) {\r\n        console.log(\"The read failed: \" + errorObject.code);\r\n      }\r\n    );\r\n\r\n    function getLanguages(snapshot) {\r\n      const app = snapshot.val();\r\n      \r\n      if (app) {\r\n        dispatchAdmin({\r\n          type: 'ADMIN_CARDS',\r\n          payload: createListCards(app)\r\n        });\r\n        \r\n        dispatchAdmin({\r\n          type: 'ADMIN_TOPICS',\r\n          payload: createListTopics(app)\r\n        });\r\n      }\r\n    }\r\n\r\n    return function disconnectLanguages() {\r\n      refApp.off(\"value\", getLanguages);\r\n    }\r\n\r\n    function createListCards(appData) {\r\n\r\n      const cardsList = toArray(appData);\r\n\r\n      return cardsList;\r\n\r\n      function toArray(appData) {\r\n        const {\r\n          questions,\r\n          difficulties,\r\n          topics\r\n        } = appData.main;\r\n        let result = [];\r\n\r\n        for (const questionId in questions) {\r\n          const card = questions[questionId];\r\n\r\n          for (const language in card.languages) {\r\n            const additionalData = {};\r\n\r\n            if (questions[questionId].languages[language]) {\r\n              additionalData.question = appData[language]['questions'][questionId].question;\r\n            } else if (questions[questionId].languages.en) {\r\n              additionalData.question = appData['en']['questions'][questionId].question;\r\n            } else {\r\n              let otherLanguage = Object.key(questions[questionId].languages)[0];\r\n              additionalData.question = appData[otherLanguage]['questions'][questionId].question;\r\n            }\r\n\r\n            if (difficulties[card.difficulty].languages[language]) {\r\n              additionalData.difficulty = appData[language]['difficulties'][card.difficulty].name;\r\n            } else if (difficulties[card.difficulty].languages.en) {\r\n              additionalData.difficulty = appData['en']['difficulties'][card.difficulty].name;\r\n            } else {\r\n              let otherLanguage = Object.key(difficulties[card.difficulty].languages)[0];\r\n              additionalData.difficulty = appData[otherLanguage]['difficulties'][card.difficulty].name;\r\n            }\r\n\r\n            if (topics[card.topicId].languages[language]) {\r\n              additionalData.topic = appData[language]['topics'][card.topicId].name;\r\n            } else if (topics[card.topicId].languages.en) {\r\n              additionalData.topic = appData['en']['topics'][card.topicId].name;\r\n            } else {\r\n              let otherLanguage = Object.keys(topics[card.topicId].languages)[0];\r\n              additionalData.topic = appData[otherLanguage]['topics'][card.topicId].name;\r\n            }\r\n\r\n            result.push({\r\n              ...card,\r\n              ...additionalData,\r\n              difficultyId: card.difficulty,\r\n              questionId,\r\n              language\r\n            })\r\n          }\r\n        }\r\n\r\n        result.sort((a, b) => {\r\n          if (a.topicId > b.topicId) return 1;\r\n          if (a.topicId < b.topicId) return -1;\r\n\r\n          if (a.difficultyId > b.difficultyId) return 1;\r\n          if (a.difficultyId < b.difficultyId) return -1;\r\n\r\n          if (a.questionId > b.questionId) return 1;\r\n          if (a.questionId < b.questionId) return -1;\r\n\r\n          if (a.language > b.language) return 1;\r\n          if (a.language < b.language) return -1;\r\n\r\n          return 0;\r\n        });\r\n\r\n        result = result.map((val, index) => {\r\n          return {\r\n            ...val,\r\n            index\r\n          }\r\n        });\r\n\r\n        return result;\r\n      }\r\n    }\r\n    function createListTopics(appData) {\r\n\r\n      const topicsList = toArray(appData);\r\n\r\n      return topicsList;\r\n\r\n      function toArray(appData) {\r\n        const {\r\n          topics\r\n        } = appData.main;\r\n        let result = [];\r\n\r\n        for (const topicId in topics) {\r\n          const topic = topics[topicId];\r\n\r\n          for (const language in topic.languages) {\r\n            const additionalData = {};\r\n\r\n            additionalData.name = appData[language]['topics'][topicId].name;\r\n            additionalData.help = appData[language]['topics'][topicId].help;\r\n\r\n            result.push({\r\n              ...topic,\r\n              ...additionalData,\r\n              topicId,\r\n              language\r\n            })\r\n          }\r\n        }\r\n\r\n        result.sort((a, b) => {\r\n          if (a.topicId > b.topicId) return 1;\r\n          if (a.topicId < b.topicId) return -1;\r\n          \r\n          if (a.name > b.name) return 1;\r\n          if (a.name < b.name) return -1;\r\n\r\n          if (a.language > b.language) return 1;\r\n          if (a.language < b.language) return -1;\r\n\r\n          return 0;\r\n        });\r\n\r\n        result = result.map((val, index) => {\r\n          return {\r\n            ...val,\r\n            index\r\n          }\r\n        });\r\n\r\n        return result;\r\n      }\r\n    }\r\n  }, [dispatchAdmin])\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        {/* <Router history={browserHistory}> */}\r\n          <AdminRoutes />\r\n        {/* </Router> */}\r\n      </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\n\nfunction Edit() {\n    return (\n        <div className=\"edit-page\">\n            Página Edit\n        </div>\n    );\n}\n\nexport default Edit;","import React, { useContext } from 'react';\nimport { StateContext } from '../Context/GlobalContext';\n\n/* MATERIAL UI */\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Surfaces\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Feedback\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\n// Data Display\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// Utils\nimport Slide from '@material-ui/core/Slide';\n\nconst useStylesDialog = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    content: {\n        marginTop: '20px'\n    }\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction DialogHelp({children, Icon}) {\n    const classes = useStylesDialog();\n    const {normalizedDataIsReady: dataIsReady} = useContext(StateContext);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <IconButton disabled={!dataIsReady} style={(dataIsReady) ? { color: '#F44336' } : {}}  aria-label=\"help\" onClick={handleClickOpen}>\n                <Icon/>\n            </IconButton>\n            <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\" TransitionComponent={Transition}>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Help\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.content}>\n                        {children}\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nexport default DialogHelp;","import React, { useContext } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { StateContext, DispatchContext } from '../Context/GlobalContext';\n\n/* FIREBASE */\nimport { db } from '../services/firebase';\n\n/* MATERIAL UI */\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container'\n\n// Inputs\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// Surfaces\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Feedback\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\n// Data Display\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n// Utils\nimport Slide from '@material-ui/core/Slide';\n\nconst useStylesDialog = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    content: {\n        marginTop: '20px'\n    },\n    divider: {\n        marginBottom: theme.spacing(1)\n    }\n}));\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction DialogSettings() {\n    const {id} = useParams();\n    const classes = useStylesDialog();\n    \n    const {card, normalizedDataIsReady: dataIsReady} = useContext(StateContext);\n    const {dispatchCard} = useContext(DispatchContext);\n    const [open, setOpen] = React.useState(false);\n    \n    // Handle cheks states\n    const [difficultyStates, setDifficultyStates] = React.useState();\n    const [topicStates, setTopicStates] = React.useState();\n    \n    React.useEffect( function initializeFilters() {\n        setDifficultyStates({\n            ...card.difficulty,\n        });\n\n        setTopicStates({\n            ...card.topic,\n        });\n    }, [card.difficulty, card.topic] )\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n\n        setDifficultyStates({\n            ...card.difficulty,\n        });\n\n        setTopicStates({\n            ...card.topic,\n        });\n        \n    };\n    \n    const handleSave = () => {\n        setOpen(false);\n\n        if( id !== undefined ) {\n            const refcurrentTopicsParty = db.ref(`parties/${id}/topics`);\n            const refcurrentDifficultiesParty = db.ref(`parties/${id}/difficulties`);\n    \n            refcurrentTopicsParty.set({\n                ...topicStates,\n            });\n            \n            refcurrentDifficultiesParty.set({\n                ...difficultyStates,\n            });\n\n        } else {\n            dispatchCard({\n                type: 'UPDATE',\n                payload: {\n                    topic: {\n                        ...topicStates\n                    },\n                    difficulty: {\n                        ...difficultyStates\n                    }\n                }\n            })\n        }\n    };\n\n    return (\n        <>\n            <IconButton disabled={!dataIsReady} style={(dataIsReady) ? { color: '#F44336' } : {}} aria-label=\"settings\"  onClick={handleClickOpen}>\n                <SettingsIcon />\n            </IconButton>\n            <Dialog fullScreen open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\" TransitionComponent={Transition}>\n                <AppBar className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Settings\n                        </Typography>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleSave} aria-label=\"close\">\n                            <DoneIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.content}>\n                    <ContentSettings \n                        topicStates={topicStates}\n                        setTopicStates={setTopicStates}\n                        \n                        difficultyStates={difficultyStates}\n                        setDifficultyStates={setDifficultyStates}\n                    />\n                        \n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nfunction ContentSettings(props) {\n    const classes = useStylesDialog();\n    const {\n        difficultyStates,\n        setDifficultyStates,\n\n        topicStates,\n        setTopicStates\n    } = props\n\n    const {topics, difficulties} = useContext(StateContext);\n\n    const [allDifficultiesCheck, setAllDifficultiesCheck] = React.useState(false);\n    const [allTopicsCheck, setAllTopicsCheck] = React.useState(false);\n\n    React.useEffect( function verifyCheckboxs() {\n        if( Object.values(difficultyStates).filter( v => v ).length === Object.values(difficultyStates).length ) {\n            setAllDifficultiesCheck(true);\n        } else {\n            setAllDifficultiesCheck(false);\n        }\n        \n        if( Object.values(topicStates).filter( v => v ).length !== Object.values(topicStates).length ) {\n            setAllTopicsCheck(false);\n        } else {\n            setAllTopicsCheck(true);\n        }\n\n    },[difficultyStates, topicStates]);\n\n    const handleDifficultyChange = (event) => {\n        const newDifficultyStates = {...difficultyStates};\n        newDifficultyStates[event.target.name] = event.target.checked;\n        setDifficultyStates( newDifficultyStates );\n    };\n    \n    const handleAllDifficultiesCheck = (event) => {\n        if( event.target.checked ) {\n            const newDifficulyStates = {};\n\n            for (const difficultyStateId in difficultyStates) {\n                newDifficulyStates[difficultyStateId] = true;\n            }\n\n            setDifficultyStates( newDifficulyStates );\n        } else {\n            const newDifficulyStates = {};\n\n            for (const difficultyStateId in difficultyStates) {\n                newDifficulyStates[difficultyStateId] = false;\n            }\n\n            setDifficultyStates( newDifficulyStates );\n        }\n\n        setAllDifficultiesCheck( event.target.checked );\n    };\n    \n    const handleTopicChange = (event) => {\n        const newTopicsStates = {...topicStates};\n        newTopicsStates[event.target.name] = event.target.checked;\n        setTopicStates(newTopicsStates);\n    };\n\n    const handleAllTopicsCheck = (event) => {\n        if( event.target.checked ) {\n            const newTopicStates = {};\n\n            for (const topicStateId in topicStates) {\n                newTopicStates[topicStateId] = true;\n            }\n\n            setTopicStates( newTopicStates );\n        } else {\n            const newTopicStates = {};\n\n            for (const topicStateId in topicStates) {\n                newTopicStates[topicStateId] = false;\n            }\n\n            setTopicStates( newTopicStates );\n        }\n\n        setAllTopicsCheck( event.target.checked );\n    };\n\n    function createCheckboxs(elements, elementStates, handler) {\n\n        return elements.map( (element, index) => (\n            <FormControlLabel\n                control={<Checkbox checked={elementStates[element.id]} onChange={handler} name={`${element.id}`} />}\n                label={element.name}\n                key={index}\n            />\n        ));\n    }\n    \n    return (\n        <>\n            <form>\n                <Container maxWidth=\"xs\">\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Select difficulties</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={allDifficultiesCheck} onChange={handleAllDifficultiesCheck} />}\n                                label={\"All\"}\n                            />\n                            {createCheckboxs( difficulties.normalized, difficultyStates, handleDifficultyChange )}\n                        </FormGroup>\n                    </FormControl>\n                    <Divider light className={classes.divider}/>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Select topics</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={<Checkbox checked={allTopicsCheck} onChange={handleAllTopicsCheck} />}\n                                label={\"All\"}\n                            />\n                            {createCheckboxs( topics.normalized, topicStates, handleTopicChange )}\n                        </FormGroup>\n                    </FormControl>\n                </Container>\n            </form>\n        </>\n    );\n}\n\nexport default DialogSettings;","import React from 'react';\nimport './Card.scss';\n\n/* COMPONENTS */\nimport DialogHelp from './DialogHelp';\nimport DialogSettings from './DialogSettings';\n\n/* MATERIAL UI */\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container'\n\n// Surfaces\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\n// Data Display\nimport Typography from '@material-ui/core/Typography';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n    flex: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    flexGrow: {\n        flexGrow: 1,\n    },\n    capitalize: {\n        textTransform: 'capitalize',\n        textAlign: 'center'\n    }\n}));\n\n\nfunction CardComponent({question, title, help}) {\n    const classes = useStyles();\n\n    return (\n        <div className=\"card-component\">\n            <Card className={classes.root}>\n                <CardHeader\n                    classes={{title: classes.flex}}\n                    title={\n                        <>\n                            <DialogSettings />\n                            <Typography variant=\"h5\" className={`${classes.capitalize} ${classes.flexGrow}`}>\n                                {title \n                                    ? title\n                                    : <Skeleton animation=\"wave\" width=\"60%\" height=\"1em\" style={{margin: \"0 auto\"}}/>\n                                }\n                            </Typography>\n                            <DialogHelp Icon={HelpIcon}>\n                                <Container maxWidth=\"sm\">\n                                    { help }\n                                </Container>\n                            </DialogHelp>\n                        </>\n                    }\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n                        {question\n                            ? <div dangerouslySetInnerHTML={{ __html: question }}></div>\n                            :  <>\n                                <Skeleton animation=\"wave\" />\n                                <Skeleton animation=\"wave\" />\n                                <Skeleton animation=\"wave\" />\n                            </>\n                        }\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n\nexport default CardComponent;","import React, {useContext} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { StateContext, DispatchContext } from '../Context/GlobalContext';\n\n/* MATERIAL UI */\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\n// Navigation\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n// Surfaces\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Data Display\nimport HomeIcon from '@material-ui/icons/Home';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    }\n}));\n\nfunction Header() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const {languages} = useContext(StateContext);\n    const {dispatchLanguages} = useContext(DispatchContext);\n    const [anchorEl, setAnchorEl] = React.useState();\n\n    function handleLanguageClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLanguageClose() {\n        setAnchorEl(null);\n    }\n    \n    function handleMenuSelect(event) {\n        const { languageId } = event.currentTarget.dataset;\n        dispatchLanguages({type: 'CURRENT', payload: languageId})\n        setAnchorEl(null);\n    }\n\n    function createMenuItems() {\n        const menuItems = [];\n\n        for (const languageID in languages.actives) {\n            menuItems.push(\n                <MenuItem onClick={handleMenuSelect} data-language-id={languageID} key={languageID}>\n                    <span style={{ textTransform: 'uppercase', marginRight: '0.5em' }}>{languageID}</span>\n                    <span>{languages.all && languages.all[languageID] && languages.all[languageID].nativeName}</span>\n                </MenuItem>\n            );\n        }\n\n        return menuItems;\n    }\n\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Container maxWidth=\"xs\" className={classes.container}>\n                    <Button color=\"inherit\" aria-label=\"menu\" onClick={() => history.push('/')}>\n                        <HomeIcon />\n                    </Button>\n                    <Button edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleLanguageClick}>\n                        <LanguageIcon /><span style={{marginLeft: '0.4em'}}>{languages.current}</span>\n                    </Button>\n                    <Menu\n                      id=\"languageSelector\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      onClose={handleLanguageClose}\n                      \n                    >\n                        {createMenuItems()}\n                    </Menu>\n                </Container>\n                \n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;\n","import React, {useEffect, useContext} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { StateContext, DispatchContext } from '../Context/GlobalContext';\nimport './Cards.scss'\n\n/* COMPONENTS */\nimport CardComponent from '../components/Card';\n\n/* HELPERS */\nimport { randomElementArray } from '../helpers/utils';\n\n/* LAYOUT */\nimport Header from '../layout/CardsHeader';\n\n/* FIREBASE */\nimport { db } from '../services/firebase';\n\n/* MATERIAL UI */\n\n// Styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        marginTop: '1.2rem',\n        justifyContent: 'space-between'\n    },\n    flexSpace: {\n        flexBasis: 'calc(33.33% - 0.2rem)'\n    }\n}));\n\nfunction CardsView() {\n    const {id} = useParams();\n    const classes = useStyles();\n\n    const {\n        questions,\n        topics,\n        card,\n        normalizedDataIsReady: dataIsReady,\n    } = useContext(StateContext);\n\n    const {dispatchCard} = useContext(DispatchContext);\n    const [partyIsReady, setPartyIsReady] = React.useState();\n\n    // Buttons states\n    const [isDisabledPrevBtn, setIsDisabledPrevBtn] = React.useState();\n    const [isDisabledNextBtn, setIsDisabledNextBt] = React.useState();\n    const [isDisabledRandomBtn, setIsDisabledRandomBtn] = React.useState();\n\n    useEffect( function checkingIfDataIsReady() {\n        setIsDisabledPrevBtn(!dataIsReady);\n        setIsDisabledNextBt(!dataIsReady);\n        setIsDisabledRandomBtn(!dataIsReady);\n    },[dataIsReady] );\n    \n    useEffect( function connectParty(){\n        if( id !== undefined && dataIsReady) {\n\n            const refParty = db.ref(`parties/${id}`);\n\n            refParty.on(\"value\",\n                getParty,\n                (errorObject) => {\n                    console.log(\"The read failed: \" + errorObject.code);\n                }\n            )\n\n            function getParty(snapshot) {\n                const party = snapshot.val();\n                if (party) {\n                    dispatchCard({\n                        type: 'UPDATE',\n                        payload: {\n                            question: party.currentQuestion,\n                            difficulty: party.difficulties,\n                            topic: party.topics\n                        }\n                    })\n\n                    setPartyIsReady(true);\n                }\n            }\n\n            return function disconnectParty() {\n                refParty.off(\"value\", getParty);\n            }\n        }\n    }, [dataIsReady, dispatchCard, id]);\n    \n    useEffect( function randomCard(){\n        const condition = (\n            id === undefined &&\n            dataIsReady &&\n            card.question === ''\n        );\n            \n        if( condition ) {\n            let newQuestion = randomElementArray(questions.normalized);\n\n            dispatchCard({type: 'QUESTION', payload: newQuestion.questionId});\n        }\n    }, [card.question, questions.normalized, questions.normalizedMap, dataIsReady, id, dispatchCard]);\n\n    useEffect(function updateAfterChangeFilters() {\n        if( card.question !== '' && dataIsReady && !questions.normalizedMap.hasOwnProperty(card.question)) {\n            if (id !== undefined) {\n                const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n                let newQuestion= randomElementArray(questions.normalized);\n                refcurrentQuestionParty.set(newQuestion.questionId)\n                \n            } else {\n                let newQuestion = randomElementArray(questions.normalized);\n    \n                dispatchCard({type: 'QUESTION', payload: newQuestion.questionId});\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [questions.normalized, questions.normalizedMap, card.question]);\n\n    // Handlers\n    function onUpdateCard() {\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledRandomBtn(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n\n            let newQuestion= randomElementArray(questions.normalized);\n            refcurrentQuestionParty.set(newQuestion.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledRandomBtn(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let newQuestion = randomElementArray(questions.normalized);\n\n            dispatchCard({type: 'QUESTION', payload: newQuestion.questionId});\n        }\n    }\n\n    function handleNextClick() {\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledNextBt(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n            let currentQuestionInfo = questions.normalizedMap[card.question]\n            let nextQuestionInfo = currentQuestionInfo.index + 1 < questions.normalized.length ?\n                questions.normalized[currentQuestionInfo.index + 1] :\n                questions.normalized[0];\n\n            refcurrentQuestionParty.set(nextQuestionInfo.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledNextBt(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let currentQuestionInfo = questions.normalizedMap[card.question]\n            let nextQuestionInfo = currentQuestionInfo.index + 1 < questions.normalized.length ?\n                questions.normalized[currentQuestionInfo.index + 1] :\n                questions.normalized[0];\n            \n            dispatchCard({type: 'QUESTION', payload: nextQuestionInfo.questionId});\n        }\n    }\n\n    function handlePrevClick() {\n        // let prevId = question - 1 > 0 ? question - 1 : questions.length - 1;\n        if (id !== undefined && dataIsReady) {\n            setIsDisabledPrevBtn(true);\n            const refcurrentQuestionParty = db.ref(`parties/${id}/currentQuestion`);\n            let currentQuestionInfo = questions.normalizedMap[card.question]\n            let prevQuestionInfo = currentQuestionInfo.index - 1 > 0 ?\n                questions.normalized[currentQuestionInfo.index - 1] :\n                questions.normalized[questions.normalized.length - 1];\n\n            refcurrentQuestionParty.set(prevQuestionInfo.questionId, (error) => {\n                if(!error) {\n                    setIsDisabledPrevBtn(false);\n                }\n            })\n            \n        } else if(dataIsReady) {\n            let currentQuestionInfo = questions.normalizedMap[card.question]\n            let prevQuestionInfo = currentQuestionInfo.index + 1 < questions.normalized.length ?\n                questions.normalized[currentQuestionInfo.index - 1] :\n                questions.normalized[questions.normalized.length - 1];\n            dispatchCard({type: 'QUESTION', payload: prevQuestionInfo.questionId});\n        }\n    }\n\n    let question;\n    let title;\n    let help;\n\n    if(\n        (id !== undefined &&\n        dataIsReady &&\n        partyIsReady &&\n        questions.normalizedMap[card.question] !== undefined)\n        ||\n        (id === undefined &&\n        dataIsReady &&\n        card.question !== '' &&\n        questions.normalizedMap[card.question] !== undefined)\n    ) {\n        let topicId = questions.normalizedMap[card.question].topicId;\n        question = questions.normalizedMap[card.question].question;\n        title = topics.normalizedMap[topicId].name;\n        help = topics.normalizedMap[topicId].help;\n    }\n\n    return (\n        <div className=\"party-page\">\n            <Header/>\n            <Container maxWidth=\"xs\" className=\"container\">\n                <CardComponent\n                    question={question}\n                    title={title}\n                    help={help}\n                    onUpdateCard={onUpdateCard}\n                />\n\n                <div className={`${classes.container} wrapper-btn`}>\n                    <Button disabled={isDisabledPrevBtn}  variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace} onClick={handlePrevClick}>\n                        Prev\n                    </Button>\n                    <Button disabled={isDisabledRandomBtn} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace} onClick={onUpdateCard}>\n                        Random\n                    </Button>\n                    <Button disabled={isDisabledNextBtn} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.flexSpace}  onClick={handleNextClick}>\n                        Next\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default CardsView;","import React, { useContext } from 'react';\nimport { StateContext, MethodContext } from '../Context/GlobalContext';\nimport './Landing.scss';\n\n/* MATERIAL UI */\n// Layout\nimport Container from '@material-ui/core/Container';\n\n// Inputs\nimport Button from '@material-ui/core/Button';\n\nfunction Landing() {\n    const {normalizedDataIsReady: dataIsReady} = useContext(StateContext);\n    const {createNewParty, randomCard} = useContext(MethodContext);\n\n    return (\n        <div className=\"landing-page\">\n            <Container maxWidth=\"xs\" className=\"container\">\n                <h1>Conversation <br/> Starters</h1>\n\n                <div className=\"wrapper-button\">\n                    <Button size=\"large\" disabled={!dataIsReady} fullWidth variant=\"contained\" color=\"primary\" onClick={createNewParty}>\n                        Create Room\n                    </Button>\n                    <Button size=\"large\" disabled={!dataIsReady} fullWidth variant=\"contained\" color=\"primary\" onClick={randomCard}>\n                        Random Card\n                    </Button>\n                </div>\n            </Container>\n        </div>\n    );\n}\n\nexport default Landing;","import React, { useContext } from 'react';\nimport './App.scss';\nimport {HashRouter as Router, Route, useHistory} from 'react-router-dom';\nimport { DispatchContext } from './Context/GlobalContext';\nimport Admin from './pages/Admin/Admin';\n\n// Pages\nimport Edit from './pages/Edit';\nimport CardsView from './pages/Cards';\nimport Landing from './pages/Landing';\n// import Admin from './pages/Admin';\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <AppRoutes/>\n      <Admin/>\n    </Router>\n    </>\n  );\n}\n\nfunction AppRoutes() {\n  const {setHistory} = useContext(DispatchContext);\n  const history = useHistory();\n\n  React.useEffect( function shareHistoryWithGlobalContext() {\n    setHistory(history)\n  }, [history, setHistory] );\n\n  return <>\n    <Route exact path=\"/\">\n      <Landing/>\n    </Route>\n    <Route exact path=\"/edit\"><Edit/></Route>\n    <Route exact path={[\"/room/:id\", \"/random\"]}>\n      <CardsView />\n    </Route>\n  </>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport GlobalContextProvider from './Context/GlobalContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}